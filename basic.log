2021-05-11-main-WARN -org.hibernate.jpa.boot.spi.ProviderChecker:HHH015016: Encountered a deprecated javax.persistence.spi.PersistenceProvider [org.hibernate.ejb.HibernatePersistence]; [org.hibernate.jpa.HibernatePersistenceProvider] will be used instead.
2021-05-11-main-INFO -org.hibernate.jpa.internal.util.LogHelper:HHH000204: Processing PersistenceUnitInfo [name: JPA-PU]
2021-05-11-main-INFO -org.hibernate.Version:HHH000412: Hibernate ORM core version 5.4.21.Final
2021-05-11-main-INFO -org.hibernate.annotations.common.Version:HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-05-11-main-WARN -org.hibernate.orm.connections.pooling:HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001005: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@localhost:1521:XE]
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001001: Connection properties: {user=TEAMD, password=****}
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001003: Autocommit mode: false
2021-05-11-main-INFO -org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl:HHH000115: Hibernate connection pool size: 20 (min=1)
2021-05-11-main-INFO -org.hibernate.dialect.Dialect:HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2021-05-11-main-INFO -org.hibernate.orm.connections.access:HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2c42b421] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-05-11-main-INFO -org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator:HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-05-11-main-WARN -org.hibernate.jpa.boot.spi.ProviderChecker:HHH015016: Encountered a deprecated javax.persistence.spi.PersistenceProvider [org.hibernate.ejb.HibernatePersistence]; [org.hibernate.jpa.HibernatePersistenceProvider] will be used instead.
2021-05-11-main-INFO -org.hibernate.jpa.internal.util.LogHelper:HHH000204: Processing PersistenceUnitInfo [name: JPA-PU]
2021-05-11-main-INFO -org.hibernate.Version:HHH000412: Hibernate ORM core version 5.4.21.Final
2021-05-11-main-INFO -org.hibernate.annotations.common.Version:HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-05-11-main-WARN -org.hibernate.orm.connections.pooling:HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001005: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@localhost:1521:XE]
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001001: Connection properties: {user=TEAMD, password=****}
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001003: Autocommit mode: false
2021-05-11-main-INFO -org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl:HHH000115: Hibernate connection pool size: 20 (min=1)
2021-05-11-main-INFO -org.hibernate.dialect.Dialect:HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2021-05-11-main-INFO -org.hibernate.orm.connections.access:HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2c42b421] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-05-11-main-INFO -org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator:HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-05-11-main-WARN -org.hibernate.jpa.boot.spi.ProviderChecker:HHH015016: Encountered a deprecated javax.persistence.spi.PersistenceProvider [org.hibernate.ejb.HibernatePersistence]; [org.hibernate.jpa.HibernatePersistenceProvider] will be used instead.
2021-05-11-main-INFO -org.hibernate.jpa.internal.util.LogHelper:HHH000204: Processing PersistenceUnitInfo [name: JPA-PU]
2021-05-11-main-INFO -org.hibernate.Version:HHH000412: Hibernate ORM core version 5.4.21.Final
2021-05-11-main-INFO -org.hibernate.annotations.common.Version:HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-05-11-main-WARN -org.hibernate.orm.connections.pooling:HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001005: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@localhost:1521:XE]
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001001: Connection properties: {user=TEAMD, password=****}
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001003: Autocommit mode: false
2021-05-11-main-INFO -org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl:HHH000115: Hibernate connection pool size: 20 (min=1)
2021-05-11-main-INFO -org.hibernate.dialect.Dialect:HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2021-05-11-main-INFO -org.hibernate.orm.connections.access:HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2c42b421] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-05-11-main-INFO -org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator:HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-05-11-main-WARN -org.hibernate.jpa.boot.spi.ProviderChecker:HHH015016: Encountered a deprecated javax.persistence.spi.PersistenceProvider [org.hibernate.ejb.HibernatePersistence]; [org.hibernate.jpa.HibernatePersistenceProvider] will be used instead.
2021-05-11-main-INFO -org.hibernate.jpa.internal.util.LogHelper:HHH000204: Processing PersistenceUnitInfo [name: JPA-PU]
2021-05-11-main-INFO -org.hibernate.Version:HHH000412: Hibernate ORM core version 5.4.21.Final
2021-05-11-main-INFO -org.hibernate.annotations.common.Version:HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-05-11-main-WARN -org.hibernate.orm.connections.pooling:HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001005: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@localhost:1521:XE]
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001001: Connection properties: {user=TEAMD, password=****}
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001003: Autocommit mode: false
2021-05-11-main-INFO -org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl:HHH000115: Hibernate connection pool size: 20 (min=1)
2021-05-11-main-INFO -org.hibernate.dialect.Dialect:HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2021-05-11-main-INFO -org.hibernate.orm.connections.access:HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2c42b421] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-05-11-main-INFO -org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator:HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-05-11-main-INFO -com.miniproject.service.UserInterFace:Joe added
2021-05-11-main-WARN -org.hibernate.jpa.boot.spi.ProviderChecker:HHH015016: Encountered a deprecated javax.persistence.spi.PersistenceProvider [org.hibernate.ejb.HibernatePersistence]; [org.hibernate.jpa.HibernatePersistenceProvider] will be used instead.
2021-05-11-main-INFO -org.hibernate.jpa.internal.util.LogHelper:HHH000204: Processing PersistenceUnitInfo [name: JPA-PU]
2021-05-11-main-INFO -org.hibernate.Version:HHH000412: Hibernate ORM core version 5.4.21.Final
2021-05-11-main-INFO -org.hibernate.annotations.common.Version:HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-05-11-main-WARN -org.hibernate.orm.connections.pooling:HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001005: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@localhost:1521:XE]
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001001: Connection properties: {user=TEAMD, password=****}
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001003: Autocommit mode: false
2021-05-11-main-INFO -org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl:HHH000115: Hibernate connection pool size: 20 (min=1)
2021-05-11-main-INFO -org.hibernate.dialect.Dialect:HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2021-05-11-main-INFO -org.hibernate.orm.connections.access:HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2c42b421] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-05-11-main-INFO -org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator:HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-05-11-main-INFO -com.miniproject.service.UserInterFace:Joe added
2021-05-11-main-WARN -org.hibernate.jpa.boot.spi.ProviderChecker:HHH015016: Encountered a deprecated javax.persistence.spi.PersistenceProvider [org.hibernate.ejb.HibernatePersistence]; [org.hibernate.jpa.HibernatePersistenceProvider] will be used instead.
2021-05-11-main-INFO -org.hibernate.jpa.internal.util.LogHelper:HHH000204: Processing PersistenceUnitInfo [name: JPA-PU]
2021-05-11-main-INFO -org.hibernate.Version:HHH000412: Hibernate ORM core version 5.4.21.Final
2021-05-11-main-INFO -org.hibernate.annotations.common.Version:HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-05-11-main-WARN -org.hibernate.orm.connections.pooling:HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001005: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@localhost:1521:XE]
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001001: Connection properties: {user=TEAMD, password=****}
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001003: Autocommit mode: false
2021-05-11-main-INFO -org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl:HHH000115: Hibernate connection pool size: 20 (min=1)
2021-05-11-main-INFO -org.hibernate.dialect.Dialect:HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2021-05-11-main-INFO -org.hibernate.orm.connections.access:HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2c42b421] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-05-11-main-INFO -org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator:HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-05-11-main-INFO -com.miniproject.service.UserInterFace:Joe added
2021-05-11-main-WARN -org.hibernate.jpa.boot.spi.ProviderChecker:HHH015016: Encountered a deprecated javax.persistence.spi.PersistenceProvider [org.hibernate.ejb.HibernatePersistence]; [org.hibernate.jpa.HibernatePersistenceProvider] will be used instead.
2021-05-11-main-INFO -org.hibernate.jpa.internal.util.LogHelper:HHH000204: Processing PersistenceUnitInfo [name: JPA-PU]
2021-05-11-main-INFO -org.hibernate.Version:HHH000412: Hibernate ORM core version 5.4.21.Final
2021-05-11-main-INFO -org.hibernate.annotations.common.Version:HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-05-11-main-WARN -org.hibernate.orm.connections.pooling:HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001005: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@localhost:1521:XE]
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001001: Connection properties: {user=TEAMD, password=****}
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001003: Autocommit mode: false
2021-05-11-main-INFO -org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl:HHH000115: Hibernate connection pool size: 20 (min=1)
2021-05-11-main-INFO -org.hibernate.dialect.Dialect:HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2021-05-11-main-INFO -org.hibernate.orm.connections.access:HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2c42b421] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-05-11-main-INFO -org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator:HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-05-11-main-INFO -com.miniproject.service.UserInterFace:Sejal added
2021-05-11-main-WARN -org.hibernate.jpa.boot.spi.ProviderChecker:HHH015016: Encountered a deprecated javax.persistence.spi.PersistenceProvider [org.hibernate.ejb.HibernatePersistence]; [org.hibernate.jpa.HibernatePersistenceProvider] will be used instead.
2021-05-11-main-INFO -org.hibernate.jpa.internal.util.LogHelper:HHH000204: Processing PersistenceUnitInfo [name: JPA-PU]
2021-05-11-main-INFO -org.hibernate.Version:HHH000412: Hibernate ORM core version 5.4.21.Final
2021-05-11-main-INFO -org.hibernate.annotations.common.Version:HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-05-11-main-WARN -org.hibernate.orm.connections.pooling:HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001005: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@localhost:1521:XE]
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001001: Connection properties: {user=TEAMD, password=****}
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001003: Autocommit mode: false
2021-05-11-main-INFO -org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl:HHH000115: Hibernate connection pool size: 20 (min=1)
2021-05-11-main-INFO -org.hibernate.dialect.Dialect:HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2021-05-11-main-INFO -org.hibernate.orm.connections.access:HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2c42b421] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-05-11-main-INFO -org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator:HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-05-11-main-INFO -com.miniproject.service.UserInterFace:Sejal added
2021-05-11-main-WARN -org.hibernate.jpa.boot.spi.ProviderChecker:HHH015016: Encountered a deprecated javax.persistence.spi.PersistenceProvider [org.hibernate.ejb.HibernatePersistence]; [org.hibernate.jpa.HibernatePersistenceProvider] will be used instead.
2021-05-11-main-INFO -org.hibernate.jpa.internal.util.LogHelper:HHH000204: Processing PersistenceUnitInfo [name: JPA-PU]
2021-05-11-main-INFO -org.hibernate.Version:HHH000412: Hibernate ORM core version 5.4.21.Final
2021-05-11-main-INFO -org.hibernate.annotations.common.Version:HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-05-11-main-WARN -org.hibernate.orm.connections.pooling:HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001005: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@localhost:1521:XE]
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001001: Connection properties: {user=TEAMD, password=****}
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001003: Autocommit mode: false
2021-05-11-main-INFO -org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl:HHH000115: Hibernate connection pool size: 20 (min=1)
2021-05-11-main-INFO -org.hibernate.dialect.Dialect:HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2021-05-11-main-INFO -org.hibernate.orm.connections.access:HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2c42b421] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-05-11-main-INFO -org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator:HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-05-11-main-INFO -com.miniproject.service.UserInterFace:Sejal added
2021-05-11-main-DEBUG-org.jboss.logging:Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-05-11-main-DEBUG-org.hibernate.jpa.HibernatePersistenceProvider:Located and parsed 1 persistence units; checking each
2021-05-11-main-DEBUG-org.hibernate.jpa.HibernatePersistenceProvider:Checking persistence-unit [name=JPA-PU, explicit-provider=org.hibernate.ejb.HibernatePersistence] against incoming persistence unit name [JPA-PU]
2021-05-11-main-DEBUG-org.hibernate.jpa.boot.spi.ProviderChecker:Persistence-unit [JPA-PU] requested PersistenceProvider [org.hibernate.ejb.HibernatePersistence]
2021-05-11-main-WARN -org.hibernate.jpa.boot.spi.ProviderChecker:HHH015016: Encountered a deprecated javax.persistence.spi.PersistenceProvider [org.hibernate.ejb.HibernatePersistence]; [org.hibernate.jpa.HibernatePersistenceProvider] will be used instead.
2021-05-11-main-DEBUG-org.hibernate.jpa.internal.util.LogHelper:PersistenceUnitInfo [
	name: JPA-PU
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/F:/Team-D-InsuranceClaimSystem/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: oracle.jdbc.driver.OracleDriver
		javax.persistence.jdbc.password: PASSWORD
		javax.persistence.jdbc.url: jdbc:oracle:thin:@localhost:1521:XE
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: TEAMD]
2021-05-11-main-DEBUG-org.hibernate.integrator.internal.IntegratorServiceImpl:Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-05-11-main-DEBUG-org.hibernate.integrator.internal.IntegratorServiceImpl:Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-05-11-main-DEBUG-org.hibernate.integrator.internal.IntegratorServiceImpl:Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-05-11-main-INFO -org.hibernate.Version:HHH000412: Hibernate ORM core version 5.4.21.Final
2021-05-11-main-DEBUG-org.hibernate.cfg.Environment:HHH000206: hibernate.properties not found
2021-05-11-main-DEBUG-org.hibernate.service.spi.ServiceBinding:Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-05-11-main-DEBUG-org.hibernate.cache.internal.RegionFactoryInitiator:Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-05-11-main-DEBUG-org.hibernate.cache.internal.RegionFactoryInitiator:Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-05-11-main-INFO -org.hibernate.annotations.common.Version:HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration boolean -> org.hibernate.type.BooleanType@4278a03f
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration boolean -> org.hibernate.type.BooleanType@4278a03f
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4278a03f
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@124c278f
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration true_false -> org.hibernate.type.TrueFalseType@1fe20588
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration yes_no -> org.hibernate.type.YesNoType@2ddc8ecb
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration byte -> org.hibernate.type.ByteType@309e345f
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration byte -> org.hibernate.type.ByteType@309e345f
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@309e345f
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration character -> org.hibernate.type.CharacterType@25d250c6
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration char -> org.hibernate.type.CharacterType@25d250c6
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@25d250c6
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration short -> org.hibernate.type.ShortType@318ba8c8
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration short -> org.hibernate.type.ShortType@318ba8c8
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.lang.Short -> org.hibernate.type.ShortType@318ba8c8
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration integer -> org.hibernate.type.IntegerType@1a04f701
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration int -> org.hibernate.type.IntegerType@1a04f701
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1a04f701
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration long -> org.hibernate.type.LongType@56de5251
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration long -> org.hibernate.type.LongType@56de5251
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.lang.Long -> org.hibernate.type.LongType@56de5251
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration float -> org.hibernate.type.FloatType@71b1176b
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration float -> org.hibernate.type.FloatType@71b1176b
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71b1176b
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration double -> org.hibernate.type.DoubleType@5dd6264
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration double -> org.hibernate.type.DoubleType@5dd6264
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5dd6264
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7ee955a8
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7ee955a8
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d2a209c
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d2a209c
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration string -> org.hibernate.type.StringType@1e802ef9
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.lang.String -> org.hibernate.type.StringType@1e802ef9
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration nstring -> org.hibernate.type.StringNVarcharType@670002
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@56528192
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration url -> org.hibernate.type.UrlType@1f3f4916
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.net.URL -> org.hibernate.type.UrlType@1f3f4916
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration Duration -> org.hibernate.type.DurationType@20d28811
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.time.Duration -> org.hibernate.type.DurationType@20d28811
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration Instant -> org.hibernate.type.InstantType@6af93788
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6af93788
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1c93084c
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1c93084c
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5223e5ee
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5223e5ee
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1d119efb
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1d119efb
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@49b0b76
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@49b0b76
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@be64738
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@be64738
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@72a7c7e0
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@72a7c7e0
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration date -> org.hibernate.type.DateType@6e4784bc
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.sql.Date -> org.hibernate.type.DateType@6e4784bc
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration time -> org.hibernate.type.TimeType@10e41621
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.sql.Time -> org.hibernate.type.TimeType@10e41621
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration timestamp -> org.hibernate.type.TimestampType@a9cd3b1
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a9cd3b1
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a9cd3b1
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9225652
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration calendar -> org.hibernate.type.CalendarType@63355449
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@63355449
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@63355449
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@48ae9b55
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@31d7b7bf
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration locale -> org.hibernate.type.LocaleType@7a69b07
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7a69b07
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration currency -> org.hibernate.type.CurrencyType@1817d444
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1817d444
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration timezone -> org.hibernate.type.TimeZoneType@3911c2a7
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3911c2a7
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration class -> org.hibernate.type.ClassType@15c43bd9
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.lang.Class -> org.hibernate.type.ClassType@15c43bd9
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@39529185
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@39529185
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31c88ec8
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration binary -> org.hibernate.type.BinaryType@7ed7259e
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration byte[] -> org.hibernate.type.BinaryType@7ed7259e
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration [B -> org.hibernate.type.BinaryType@7ed7259e
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c407114
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c407114
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c407114
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration row_version -> org.hibernate.type.RowVersionType@619713e5
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration image -> org.hibernate.type.ImageType@7722c3c3
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration characters -> org.hibernate.type.CharArrayType@50eac852
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration char[] -> org.hibernate.type.CharArrayType@50eac852
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration [C -> org.hibernate.type.CharArrayType@50eac852
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a192cfe
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a192cfe
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a192cfe
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration text -> org.hibernate.type.TextType@20deea7f
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration ntext -> org.hibernate.type.NTextType@7714e963
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration blob -> org.hibernate.type.BlobType@192d43ce
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@192d43ce
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6973b51b
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration clob -> org.hibernate.type.ClobType@6e171cd7
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6e171cd7
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration nclob -> org.hibernate.type.NClobType@384ad17b
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@384ad17b
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7334aada
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@42e99e4a
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration serializable -> org.hibernate.type.SerializableType@15ff3e9e
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration object -> org.hibernate.type.ObjectType@661972b0
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@661972b0
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44ebcd03
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@694abbdc
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2e005c4b
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4567f35d
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5ffead27
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6356695f
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4f18837a
2021-05-11-main-DEBUG-org.hibernate.type.BasicTypeRegistry:Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@359f7cdf
2021-05-11-main-DEBUG-org.hibernate.boot.internal.BootstrapContextImpl:Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@131774fe] into BootstrapContext; was [null]
2021-05-11-main-DEBUG-org.hibernate.boot.internal.BootstrapContextImpl:Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@158d2680] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@77847718]
2021-05-11-main-DEBUG-org.hibernate.boot.internal.BootstrapContextImpl:Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2021-05-11-main-DEBUG-org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory:Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-05-11-main-DEBUG-org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory:Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-05-11-main-DEBUG-org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory:Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-05-11-main-DEBUG-org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory:Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-05-11-main-DEBUG-org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory:Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-05-11-main-DEBUG-org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory:Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-05-11-main-DEBUG-org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory:Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-05-11-main-DEBUG-org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory:Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-05-11-main-DEBUG-org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory:Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-05-11-main-DEBUG-org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory:Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-05-11-main-DEBUG-org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory:Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-05-11-main-DEBUG-org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory:Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-05-11-main-DEBUG-org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory:Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-05-11-main-DEBUG-org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory:Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-05-11-main-WARN -org.hibernate.orm.connections.pooling:HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001005: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@localhost:1521:XE]
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001001: Connection properties: {user=TEAMD, password=PASSWORD}
2021-05-11-main-INFO -org.hibernate.orm.connections.pooling:HHH10001003: Autocommit mode: false
2021-05-11-main-DEBUG-org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl:Initializing Connection pool with 1 Connections
2021-05-11-main-INFO -org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl:HHH000115: Hibernate connection pool size: 20 (min=1)
2021-05-11-main-DEBUG-org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator:Database ->
       name : Oracle
    version : Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production
      major : 11
      minor : 2
2021-05-11-main-DEBUG-org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator:Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.4.0
      major : 11
      minor : 2
2021-05-11-main-DEBUG-org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator:JDBC version : 11.2
2021-05-11-main-INFO -org.hibernate.dialect.Dialect:HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2021-05-11-main-DEBUG-org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver:Unable to use Java 1.7 Connection#getSchema
2021-05-11-main-DEBUG-org.hibernate.boot.model.relational.Namespace:Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-05-11-main-DEBUG-org.hibernate.type.spi.TypeConfiguration$Scope:Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46271dd6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11bb571c]
2021-05-11-main-DEBUG-org.hibernate.cfg.AnnotationBinder:Binding entity from annotated class: com.miniproject.entities.Claim
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.EntityBinder:Import with entity name Claim
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.EntityBinder:Bind entity com.miniproject.entities.Claim on table claim
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=claimNumber, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property claimNumber with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:claimNumber]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for claimNumber
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property claimNumber
2021-05-11-main-DEBUG-org.hibernate.cfg.BinderHelper:#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(claimNumber)]), claimNumber, assigned, , ...)
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=accidentCity, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property accidentCity with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:accidentCity]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for accidentCity
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property accidentCity
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=accidentLocationStreet, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property accidentLocationStreet with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:accidentLocationStreet]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for accidentLocationStreet
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property accidentLocationStreet
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=accidentState, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property accidentState with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:accidentState]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for accidentState
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property accidentState
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=accidentZip, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property accidentZip with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:accidentZip]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for accidentZip
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property accidentZip
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=claimReason, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property claimReason with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:claimReason]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for claimReason
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property claimReason
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=claimType, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property claimType with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:claimType]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for claimType
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property claimType
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=policyNumber, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property policyNumber with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:policyNumber]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for policyNumber
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property policyNumber
2021-05-11-main-DEBUG-org.hibernate.cfg.AnnotationBinder:Binding entity from annotated class: com.miniproject.entities.UserRole
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.EntityBinder:Import with entity name UserRole
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.EntityBinder:Bind entity com.miniproject.entities.UserRole on table user_role
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_role), mappingColumn=username, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property username with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.UserRole:username]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for username
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property username
2021-05-11-main-DEBUG-org.hibernate.cfg.BinderHelper:#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(username)]), username, assigned, , ...)
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_role), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property password with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.UserRole:password]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for password
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property password
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_role), mappingColumn=rolecode, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property rolecode with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.UserRole:rolecode]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for rolecode
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property rolecode
2021-05-11-main-DEBUG-org.hibernate.cfg.AnnotationBinder:Binding entity from annotated class: com.miniproject.entities.PolicyDetails
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.EntityBinder:Import with entity name PolicyDetails
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.EntityBinder:Bind entity com.miniproject.entities.PolicyDetails on table POLICYDETAILS
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(POLICYDETAILS), mappingColumn=policyId, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property policyId with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.PolicyDetails:policyId]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for policyId
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property policyId
2021-05-11-main-DEBUG-org.hibernate.cfg.BinderHelper:#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(policyId)]), policyId, assigned, , ...)
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(POLICYDETAILS), mappingColumn=answer, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property answer with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.PolicyDetails:answer]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for answer
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property answer
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(POLICYDETAILS), mappingColumn=policyNumber, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property policyNumber with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.PolicyDetails:policyNumber]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for policyNumber
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property policyNumber
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(POLICYDETAILS), mappingColumn=questionId, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property questionId with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.PolicyDetails:questionId]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for questionId
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property questionId
2021-05-11-main-DEBUG-org.hibernate.cfg.AnnotationBinder:Binding entity from annotated class: com.miniproject.entities.Policy
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.EntityBinder:Import with entity name Policy
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.EntityBinder:Bind entity com.miniproject.entities.Policy on table Policy
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Policy), mappingColumn=policyNumber, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property policyNumber with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Policy:policyNumber]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for policyNumber
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property policyNumber
2021-05-11-main-DEBUG-org.hibernate.cfg.BinderHelper:#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(policyNumber)]), policyNumber, assigned, , ...)
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Policy), mappingColumn=accountNumber, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property accountNumber with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Policy:accountNumber]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for accountNumber
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property accountNumber
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Policy), mappingColumn=policyPremium, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property policyPremium with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Policy:policyPremium]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for policyPremium
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property policyPremium
2021-05-11-main-DEBUG-org.hibernate.cfg.AnnotationBinder:Binding entity from annotated class: com.miniproject.entities.Question
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.EntityBinder:Import with entity name Question
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.EntityBinder:Bind entity com.miniproject.entities.Question on table Question
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Question), mappingColumn=questionId, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property questionId with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Question:questionId]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for questionId
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property questionId
2021-05-11-main-DEBUG-org.hibernate.cfg.BinderHelper:#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(questionId)]), questionId, assigned, , ...)
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Question), mappingColumn=question, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property question with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Question:question]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for question
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property question
2021-05-11-main-DEBUG-org.hibernate.cfg.AnnotationBinder:Binding entity from annotated class: com.miniproject.entities.Account
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.EntityBinder:Import with entity name Account
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.EntityBinder:Bind entity com.miniproject.entities.Account on table Account
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountNumber, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property accountNumber with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Account:accountNumber]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for accountNumber
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property accountNumber
2021-05-11-main-DEBUG-org.hibernate.cfg.BinderHelper:#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(accountNumber)]), accountNumber, assigned, , ...)
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=agentName, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property agentName with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Account:agentName]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for agentName
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property agentName
2021-05-11-main-DEBUG-org.hibernate.cfg.Ejb3Column:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=userName, insertable=true, updatable=true, unique=false}
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:MetadataSourceProcessor property userName with lazy=false
2021-05-11-main-DEBUG-org.hibernate.cfg.AbstractPropertyHolder:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Account:userName]
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:building SimpleValue for userName
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.PropertyBinder:Building property userName
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for claimNumber
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for accidentCity
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for accidentLocationStreet
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for accidentState
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for accidentZip
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for claimReason
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for claimType
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for policyNumber
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for username
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for password
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for rolecode
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for policyId
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for answer
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for policyNumber
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for questionId
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for policyNumber
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for accountNumber
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for policyPremium
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for questionId
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for question
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for accountNumber
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for agentName
2021-05-11-main-DEBUG-org.hibernate.cfg.annotations.SimpleValueBinder:Starting fillSimpleValue for userName
2021-05-11-main-DEBUG-org.hibernate.mapping.PrimaryKey:Forcing column [claimnumber] to be non-null as it is part of the primary key for table [claim]
2021-05-11-main-DEBUG-org.hibernate.mapping.PrimaryKey:Forcing column [username] to be non-null as it is part of the primary key for table [user_role]
2021-05-11-main-DEBUG-org.hibernate.mapping.PrimaryKey:Forcing column [policyid] to be non-null as it is part of the primary key for table [policydetails]
2021-05-11-main-DEBUG-org.hibernate.mapping.PrimaryKey:Forcing column [policynumber] to be non-null as it is part of the primary key for table [policy]
2021-05-11-main-DEBUG-org.hibernate.mapping.PrimaryKey:Forcing column [questionid] to be non-null as it is part of the primary key for table [question]
2021-05-11-main-DEBUG-org.hibernate.mapping.PrimaryKey:Forcing column [accountnumber] to be non-null as it is part of the primary key for table [account]
2021-05-11-main-DEBUG-org.hibernate.internal.SessionFactoryImpl:Building session factory
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:SessionFactory name : null
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Automatic flush during beforeCompletion(): enabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Automatic session close at end of transaction: disabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Statistics: disabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Deleted entity synthetic identifier rollback: disabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Default entity-mode: pojo
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Allow initialization of lazy state outside session : disabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Using BatchFetchStyle : LEGACY
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Default batch fetch size: -1
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Maximum outer join fetch depth: null
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Default null ordering: NONE
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Order SQL updates by primary key: disabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Order SQL inserts for batching: disabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:multi-tenancy strategy : NONE
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:JTA Track by Thread: enabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Query language substitutions: {}
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Named query checking : enabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Second-level cache: disabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Second-level query cache: disabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Second-level query cache factory: null
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Second-level cache region prefix: null
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Optimize second-level cache for minimal puts: disabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Structured second-level cache entries: disabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Second-level cache direct-reference entries: disabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Automatic eviction of collection cache: disabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:JDBC batch size: 15
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:JDBC batch updates for versioned data: disabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Scrollable result sets: enabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Wrap result sets: disabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:JDBC3 getGeneratedKeys(): disabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:JDBC result set fetch size: null
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Connection release mode: AFTER_TRANSACTION
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:Generate SQL with comments: disabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:JPA compliance - query : disabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:JPA compliance - closed-handling : disabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:JPA compliance - lists : disabled
2021-05-11-main-DEBUG-org.hibernate.cfg.Settings:JPA compliance - transactions : disabled
2021-05-11-main-DEBUG-org.hibernate.internal.SessionFactoryImpl:Session factory constructed with filter configurations : {}
2021-05-11-main-DEBUG-org.hibernate.internal.SessionFactoryImpl:Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=F:\Team-D-InsuranceClaimSystem\target\classes;C:\Users\samyukta\.p2\pool\plugins\org.junit_4.13.0.v20200204-1500.jar;C:\Users\samyukta\.p2\pool\plugins\org.hamcrest.core_1.3.0.v20180420-1519.jar;C:\Users\samyukta\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\samyukta\.m2\repository\org\hibernate\hibernate-core\5.4.21.Final\hibernate-core-5.4.21.Final.jar;C:\Users\samyukta\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\samyukta\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\samyukta\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\samyukta\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\samyukta\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\samyukta\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\samyukta\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\samyukta\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\samyukta\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\samyukta\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\samyukta\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\samyukta\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\samyukta\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\samyukta\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\samyukta\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\samyukta\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\samyukta\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\samyukta\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\samyukta\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.21.Final\hibernate-entitymanager-5.4.21.Final.jar;C:\Users\samyukta\.m2\repository\com\oracle\database\jdbc\ojdbc6\11.2.0.4\ojdbc6-11.2.0.4.jar;C:\Users\samyukta\.m2\repository\com\oracle\database\jdbc\ucp\11.2.0.4\ucp-11.2.0.4.jar;C:\Users\samyukta\.m2\repository\com\oracle\database\security\oraclepki\11.2.0.4\oraclepki-11.2.0.4.jar;C:\Users\samyukta\.m2\repository\com\oracle\database\security\osdt_cert\11.2.0.4\osdt_cert-11.2.0.4.jar;C:\Users\samyukta\.m2\repository\com\oracle\database\security\osdt_core\11.2.0.4\osdt_core-11.2.0.4.jar;C:\Users\samyukta\.m2\repository\com\oracle\database\ha\simplefan\11.2.0.4\simplefan-11.2.0.4.jar;C:\Users\samyukta\.m2\repository\com\oracle\database\ha\ons\11.2.0.4\ons-11.2.0.4.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Calcutta, javax.persistence.jdbc.url=jdbc:oracle:thin:@localhost:1521:XE, javax.persistence.jdbc.user=****, os.name=Windows 10, java.vm.specification.version=1.8, user.country=IN, sun.java.launcher=SUN_STANDARD, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_181\jre\bin, sun.java.command=com.miniproject.pl.Client, sun.cpu.endian=little, user.home=C:\Users\samyukta, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_181\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=oracle.jdbc.driver.OracleDriver, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_181\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_181\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_181-b13, user.name=samyukta, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_181\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:oracle:thin:@localhost:1521:XE, file.encoding=Cp1252, hibernate.ejb.persistenceUnitName=JPA-PU, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\samyukta\AppData\Local\Temp\, java.version=1.8.0_181, user.dir=F:\Team-D-InsuranceClaimSystem, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3e7634b9, java.library.path=C:\Program Files\Java\jdk1.8.0_181\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_181/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_181/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_181/bin/../jre/lib/amd64;C:\oraclexe\app\oracle\product\11.2.0\server\bin;;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\nodejs\;C:\Program Files\Java\jdk1.8.0_181\bin;C:\Program Files\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\samyukta\Anaconda3;C:\Users\samyukta\Anaconda3\Library\mingw-w64\bin;C:\Users\samyukta\Anaconda3\Library\usr\bin;C:\Users\samyukta\Anaconda3\Library\bin;C:\Users\samyukta\Anaconda3\Scripts;C:\Users\samyukta\AppData\Local\Programs\Python\Python37\Scripts\;C:\Users\samyukta\AppData\Local\Programs\Python\Python37\;C:\Users\samyukta\AppData\Local\Microsoft\WindowsApps;C:\Users\samyukta\AppData\Roaming\npm;C:\Users\samyukta\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\samyukta\AppData\Local\GitHubDesktop\bin;C:\Users\samyukta\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.181-b13, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=****, java.class.version=52.0}
2021-05-11-main-DEBUG-org.hibernate.secure.spi.JaccIntegrator:Skipping JACC integration as it was not enabled
2021-05-11-main-DEBUG-org.hibernate.internal.SessionFactoryImpl:Instantiated session factory
2021-05-11-main-DEBUG-org.hibernate.type.spi.TypeConfiguration$Scope:Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46271dd6] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56a4479a]
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:Not known whether passed class name [com.miniproject.entities.Claim] is safe
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Claim
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:Not known whether passed class name [com.miniproject.entities.Claim] is safe
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Claim
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:Not known whether passed class name [com.miniproject.entities.UserRole] is safe
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.UserRole
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:Not known whether passed class name [com.miniproject.entities.UserRole] is safe
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.UserRole
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:Not known whether passed class name [com.miniproject.entities.PolicyDetails] is safe
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.PolicyDetails
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:Not known whether passed class name [com.miniproject.entities.PolicyDetails] is safe
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.PolicyDetails
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:Not known whether passed class name [com.miniproject.entities.Policy] is safe
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Policy
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:Not known whether passed class name [com.miniproject.entities.Policy] is safe
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Policy
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:Not known whether passed class name [com.miniproject.entities.Question] is safe
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Question
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:Not known whether passed class name [com.miniproject.entities.Question] is safe
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Question
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:Not known whether passed class name [com.miniproject.entities.Account] is safe
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Account
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:Not known whether passed class name [com.miniproject.entities.Account] is safe
2021-05-11-main-DEBUG-org.hibernate.boot.internal.ClassLoaderAccessImpl:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Account
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister:Static SQL for entity: com.miniproject.entities.Claim
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Version select: select claimNumber from claim where claimNumber =?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Snapshot select: select claim_.claimNumber, claim_.accidentCity as accidentcity2_1_, claim_.accidentLocationStreet as accidentlocationst3_1_, claim_.accidentState as accidentstate4_1_, claim_.accidentZip as accidentzip5_1_, claim_.claimReason as claimreason6_1_, claim_.claimType as claimtype7_1_, claim_.policyNumber as policynumber8_1_ from claim claim_ where claim_.claimNumber=?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Insert 0: insert into claim (accidentCity, accidentLocationStreet, accidentState, accidentZip, claimReason, claimType, policyNumber, claimNumber) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Update 0: update claim set accidentCity=?, accidentLocationStreet=?, accidentState=?, accidentZip=?, claimReason=?, claimType=?, policyNumber=? where claimNumber=?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Delete 0: delete from claim where claimNumber=?
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@595f4da5]
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : accidentCity
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : accidentLocationStreet
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : accidentState
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : accidentZip
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : claimReason
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : claimType
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : policyNumber
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy:Building LoadPlan...
2021-05-11-main-DEBUG-org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor:processing queryspace <gen:0>
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter:LoadPlan(entity=com.miniproject.entities.Claim)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Claim, querySpaceUid=<gen:0>, path=com.miniproject.entities.Claim)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Claim)
          - SQL table alias mapping - claim0_
          - alias suffix - 0_
          - suffixed key columns - {claimnumber1_1_0_}

2021-05-11-main-DEBUG-org.hibernate.loader.entity.plan.EntityLoader:Static select for entity com.miniproject.entities.Claim [NONE]: select claim0_.claimNumber as claimnumber1_1_0_, claim0_.accidentCity as accidentcity2_1_0_, claim0_.accidentLocationStreet as accidentlocationst3_1_0_, claim0_.accidentState as accidentstate4_1_0_, claim0_.accidentZip as accidentzip5_1_0_, claim0_.claimReason as claimreason6_1_0_, claim0_.claimType as claimtype7_1_0_, claim0_.policyNumber as policynumber8_1_0_ from claim claim0_ where claim0_.claimNumber=?
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d4602a]
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : accidentCity
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : accidentLocationStreet
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : accidentState
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : accidentZip
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : claimReason
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : claimType
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : policyNumber
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy:Building LoadPlan...
2021-05-11-main-DEBUG-org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor:processing queryspace <gen:0>
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter:LoadPlan(entity=com.miniproject.entities.Claim)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Claim, querySpaceUid=<gen:0>, path=com.miniproject.entities.Claim)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Claim)
          - SQL table alias mapping - claim0_
          - alias suffix - 0_
          - suffixed key columns - {claimnumber1_1_0_}

2021-05-11-main-DEBUG-org.hibernate.loader.entity.plan.EntityLoader:Static select for entity com.miniproject.entities.Claim [READ]: select claim0_.claimNumber as claimnumber1_1_0_, claim0_.accidentCity as accidentcity2_1_0_, claim0_.accidentLocationStreet as accidentlocationst3_1_0_, claim0_.accidentState as accidentstate4_1_0_, claim0_.accidentZip as accidentzip5_1_0_, claim0_.claimReason as claimreason6_1_0_, claim0_.claimType as claimtype7_1_0_, claim0_.policyNumber as policynumber8_1_0_ from claim claim0_ where claim0_.claimNumber=?
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Static select for action ACTION_MERGE on entity com.miniproject.entities.Claim: select claim0_.claimNumber as claimnumber1_1_0_, claim0_.accidentCity as accidentcity2_1_0_, claim0_.accidentLocationStreet as accidentlocationst3_1_0_, claim0_.accidentState as accidentstate4_1_0_, claim0_.accidentZip as accidentzip5_1_0_, claim0_.claimReason as claimreason6_1_0_, claim0_.claimType as claimtype7_1_0_, claim0_.policyNumber as policynumber8_1_0_ from claim claim0_ where claim0_.claimNumber=?
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Static select for action ACTION_REFRESH on entity com.miniproject.entities.Claim: select claim0_.claimNumber as claimnumber1_1_0_, claim0_.accidentCity as accidentcity2_1_0_, claim0_.accidentLocationStreet as accidentlocationst3_1_0_, claim0_.accidentState as accidentstate4_1_0_, claim0_.accidentZip as accidentzip5_1_0_, claim0_.claimReason as claimreason6_1_0_, claim0_.claimType as claimtype7_1_0_, claim0_.policyNumber as policynumber8_1_0_ from claim claim0_ where claim0_.claimNumber=?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister:Static SQL for entity: com.miniproject.entities.UserRole
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Version select: select username from user_role where username =?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Snapshot select: select userrole_.username, userrole_.password as password2_5_, userrole_.rolecode as rolecode3_5_ from user_role userrole_ where userrole_.username=?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Insert 0: insert into user_role (password, rolecode, username) values (?, ?, ?)
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Update 0: update user_role set password=?, rolecode=? where username=?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Delete 0: delete from user_role where username=?
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@261d8190]
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : password
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : rolecode
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy:Building LoadPlan...
2021-05-11-main-DEBUG-org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor:processing queryspace <gen:0>
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter:LoadPlan(entity=com.miniproject.entities.UserRole)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.UserRole, querySpaceUid=<gen:0>, path=com.miniproject.entities.UserRole)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.UserRole)
          - SQL table alias mapping - userrole0_
          - alias suffix - 0_
          - suffixed key columns - {username1_5_0_}

2021-05-11-main-DEBUG-org.hibernate.loader.entity.plan.EntityLoader:Static select for entity com.miniproject.entities.UserRole [NONE]: select userrole0_.username as username1_5_0_, userrole0_.password as password2_5_0_, userrole0_.rolecode as rolecode3_5_0_ from user_role userrole0_ where userrole0_.username=?
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60e9df3c]
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : password
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : rolecode
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy:Building LoadPlan...
2021-05-11-main-DEBUG-org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor:processing queryspace <gen:0>
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter:LoadPlan(entity=com.miniproject.entities.UserRole)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.UserRole, querySpaceUid=<gen:0>, path=com.miniproject.entities.UserRole)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.UserRole)
          - SQL table alias mapping - userrole0_
          - alias suffix - 0_
          - suffixed key columns - {username1_5_0_}

2021-05-11-main-DEBUG-org.hibernate.loader.entity.plan.EntityLoader:Static select for entity com.miniproject.entities.UserRole [READ]: select userrole0_.username as username1_5_0_, userrole0_.password as password2_5_0_, userrole0_.rolecode as rolecode3_5_0_ from user_role userrole0_ where userrole0_.username=?
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Static select for action ACTION_MERGE on entity com.miniproject.entities.UserRole: select userrole0_.username as username1_5_0_, userrole0_.password as password2_5_0_, userrole0_.rolecode as rolecode3_5_0_ from user_role userrole0_ where userrole0_.username=?
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Static select for action ACTION_REFRESH on entity com.miniproject.entities.UserRole: select userrole0_.username as username1_5_0_, userrole0_.password as password2_5_0_, userrole0_.rolecode as rolecode3_5_0_ from user_role userrole0_ where userrole0_.username=?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister:Static SQL for entity: com.miniproject.entities.PolicyDetails
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Version select: select policyId from POLICYDETAILS where policyId =?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Snapshot select: select policydeta_.policyId, policydeta_.answer as answer2_3_, policydeta_.policyNumber as policynumber3_3_, policydeta_.questionId as questionid4_3_ from POLICYDETAILS policydeta_ where policydeta_.policyId=?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Insert 0: insert into POLICYDETAILS (answer, policyNumber, questionId, policyId) values (?, ?, ?, ?)
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Update 0: update POLICYDETAILS set answer=?, policyNumber=?, questionId=? where policyId=?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Delete 0: delete from POLICYDETAILS where policyId=?
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@435ce306]
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : answer
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : policyNumber
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : questionId
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy:Building LoadPlan...
2021-05-11-main-DEBUG-org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor:processing queryspace <gen:0>
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter:LoadPlan(entity=com.miniproject.entities.PolicyDetails)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.PolicyDetails, querySpaceUid=<gen:0>, path=com.miniproject.entities.PolicyDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.PolicyDetails)
          - SQL table alias mapping - policydeta0_
          - alias suffix - 0_
          - suffixed key columns - {policyid1_3_0_}

2021-05-11-main-DEBUG-org.hibernate.loader.entity.plan.EntityLoader:Static select for entity com.miniproject.entities.PolicyDetails [NONE]: select policydeta0_.policyId as policyid1_3_0_, policydeta0_.answer as answer2_3_0_, policydeta0_.policyNumber as policynumber3_3_0_, policydeta0_.questionId as questionid4_3_0_ from POLICYDETAILS policydeta0_ where policydeta0_.policyId=?
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dc51783]
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : answer
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : policyNumber
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : questionId
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy:Building LoadPlan...
2021-05-11-main-DEBUG-org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor:processing queryspace <gen:0>
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter:LoadPlan(entity=com.miniproject.entities.PolicyDetails)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.PolicyDetails, querySpaceUid=<gen:0>, path=com.miniproject.entities.PolicyDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.PolicyDetails)
          - SQL table alias mapping - policydeta0_
          - alias suffix - 0_
          - suffixed key columns - {policyid1_3_0_}

2021-05-11-main-DEBUG-org.hibernate.loader.entity.plan.EntityLoader:Static select for entity com.miniproject.entities.PolicyDetails [READ]: select policydeta0_.policyId as policyid1_3_0_, policydeta0_.answer as answer2_3_0_, policydeta0_.policyNumber as policynumber3_3_0_, policydeta0_.questionId as questionid4_3_0_ from POLICYDETAILS policydeta0_ where policydeta0_.policyId=?
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Static select for action ACTION_MERGE on entity com.miniproject.entities.PolicyDetails: select policydeta0_.policyId as policyid1_3_0_, policydeta0_.answer as answer2_3_0_, policydeta0_.policyNumber as policynumber3_3_0_, policydeta0_.questionId as questionid4_3_0_ from POLICYDETAILS policydeta0_ where policydeta0_.policyId=?
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Static select for action ACTION_REFRESH on entity com.miniproject.entities.PolicyDetails: select policydeta0_.policyId as policyid1_3_0_, policydeta0_.answer as answer2_3_0_, policydeta0_.policyNumber as policynumber3_3_0_, policydeta0_.questionId as questionid4_3_0_ from POLICYDETAILS policydeta0_ where policydeta0_.policyId=?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister:Static SQL for entity: com.miniproject.entities.Policy
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Version select: select policyNumber from Policy where policyNumber =?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Snapshot select: select policy_.policyNumber, policy_.accountNumber as accountnumber2_2_, policy_.policyPremium as policypremium3_2_ from Policy policy_ where policy_.policyNumber=?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Insert 0: insert into Policy (accountNumber, policyPremium, policyNumber) values (?, ?, ?)
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Update 0: update Policy set accountNumber=?, policyPremium=? where policyNumber=?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Delete 0: delete from Policy where policyNumber=?
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f815e7f]
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : accountNumber
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : policyPremium
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy:Building LoadPlan...
2021-05-11-main-DEBUG-org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor:processing queryspace <gen:0>
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter:LoadPlan(entity=com.miniproject.entities.Policy)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Policy, querySpaceUid=<gen:0>, path=com.miniproject.entities.Policy)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Policy)
          - SQL table alias mapping - policy0_
          - alias suffix - 0_
          - suffixed key columns - {policynumber1_2_0_}

2021-05-11-main-DEBUG-org.hibernate.loader.entity.plan.EntityLoader:Static select for entity com.miniproject.entities.Policy [NONE]: select policy0_.policyNumber as policynumber1_2_0_, policy0_.accountNumber as accountnumber2_2_0_, policy0_.policyPremium as policypremium3_2_0_ from Policy policy0_ where policy0_.policyNumber=?
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@304b9f1a]
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : accountNumber
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : policyPremium
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy:Building LoadPlan...
2021-05-11-main-DEBUG-org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor:processing queryspace <gen:0>
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter:LoadPlan(entity=com.miniproject.entities.Policy)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Policy, querySpaceUid=<gen:0>, path=com.miniproject.entities.Policy)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Policy)
          - SQL table alias mapping - policy0_
          - alias suffix - 0_
          - suffixed key columns - {policynumber1_2_0_}

2021-05-11-main-DEBUG-org.hibernate.loader.entity.plan.EntityLoader:Static select for entity com.miniproject.entities.Policy [READ]: select policy0_.policyNumber as policynumber1_2_0_, policy0_.accountNumber as accountnumber2_2_0_, policy0_.policyPremium as policypremium3_2_0_ from Policy policy0_ where policy0_.policyNumber=?
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Static select for action ACTION_MERGE on entity com.miniproject.entities.Policy: select policy0_.policyNumber as policynumber1_2_0_, policy0_.accountNumber as accountnumber2_2_0_, policy0_.policyPremium as policypremium3_2_0_ from Policy policy0_ where policy0_.policyNumber=?
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Static select for action ACTION_REFRESH on entity com.miniproject.entities.Policy: select policy0_.policyNumber as policynumber1_2_0_, policy0_.accountNumber as accountnumber2_2_0_, policy0_.policyPremium as policypremium3_2_0_ from Policy policy0_ where policy0_.policyNumber=?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister:Static SQL for entity: com.miniproject.entities.Question
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Version select: select questionId from Question where questionId =?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Snapshot select: select question_.questionId, question_.question as question2_4_ from Question question_ where question_.questionId=?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Insert 0: insert into Question (question, questionId) values (?, ?)
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Update 0: update Question set question=? where questionId=?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Delete 0: delete from Question where questionId=?
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@107e5441]
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : question
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy:Building LoadPlan...
2021-05-11-main-DEBUG-org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor:processing queryspace <gen:0>
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter:LoadPlan(entity=com.miniproject.entities.Question)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Question, querySpaceUid=<gen:0>, path=com.miniproject.entities.Question)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Question)
          - SQL table alias mapping - question0_
          - alias suffix - 0_
          - suffixed key columns - {questionid1_4_0_}

2021-05-11-main-DEBUG-org.hibernate.loader.entity.plan.EntityLoader:Static select for entity com.miniproject.entities.Question [NONE]: select question0_.questionId as questionid1_4_0_, question0_.question as question2_4_0_ from Question question0_ where question0_.questionId=?
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@263558c9]
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : question
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy:Building LoadPlan...
2021-05-11-main-DEBUG-org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor:processing queryspace <gen:0>
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter:LoadPlan(entity=com.miniproject.entities.Question)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Question, querySpaceUid=<gen:0>, path=com.miniproject.entities.Question)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Question)
          - SQL table alias mapping - question0_
          - alias suffix - 0_
          - suffixed key columns - {questionid1_4_0_}

2021-05-11-main-DEBUG-org.hibernate.loader.entity.plan.EntityLoader:Static select for entity com.miniproject.entities.Question [READ]: select question0_.questionId as questionid1_4_0_, question0_.question as question2_4_0_ from Question question0_ where question0_.questionId=?
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Static select for action ACTION_MERGE on entity com.miniproject.entities.Question: select question0_.questionId as questionid1_4_0_, question0_.question as question2_4_0_ from Question question0_ where question0_.questionId=?
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Static select for action ACTION_REFRESH on entity com.miniproject.entities.Question: select question0_.questionId as questionid1_4_0_, question0_.question as question2_4_0_ from Question question0_ where question0_.questionId=?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister:Static SQL for entity: com.miniproject.entities.Account
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Version select: select accountNumber from Account where accountNumber =?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Snapshot select: select account_.accountNumber, account_.agentName as agentname2_0_, account_.userName as username3_0_ from Account account_ where account_.accountNumber=?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Insert 0: insert into Account (agentName, userName, accountNumber) values (?, ?, ?)
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Update 0: update Account set agentName=?, userName=? where accountNumber=?
2021-05-11-main-DEBUG-org.hibernate.persister.entity.AbstractEntityPersister: Delete 0: delete from Account where accountNumber=?
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7daa61f3]
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : agentName
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : userName
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy:Building LoadPlan...
2021-05-11-main-DEBUG-org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor:processing queryspace <gen:0>
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter:LoadPlan(entity=com.miniproject.entities.Account)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Account, querySpaceUid=<gen:0>, path=com.miniproject.entities.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountnumber1_0_0_}

2021-05-11-main-DEBUG-org.hibernate.loader.entity.plan.EntityLoader:Static select for entity com.miniproject.entities.Account [NONE]: select account0_.accountNumber as accountnumber1_0_0_, account0_.agentName as agentname2_0_0_, account0_.userName as username3_0_0_ from Account account0_ where account0_.accountNumber=?
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e4ea0bd]
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : agentName
2021-05-11-main-DEBUG-org.hibernate.persister.walking.spi.MetamodelGraphWalker:Visiting attribute path : userName
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy:Building LoadPlan...
2021-05-11-main-DEBUG-org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor:processing queryspace <gen:0>
2021-05-11-main-DEBUG-org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter:LoadPlan(entity=com.miniproject.entities.Account)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Account, querySpaceUid=<gen:0>, path=com.miniproject.entities.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountnumber1_0_0_}

2021-05-11-main-DEBUG-org.hibernate.loader.entity.plan.EntityLoader:Static select for entity com.miniproject.entities.Account [READ]: select account0_.accountNumber as accountnumber1_0_0_, account0_.agentName as agentname2_0_0_, account0_.userName as username3_0_0_ from Account account0_ where account0_.accountNumber=?
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Static select for action ACTION_MERGE on entity com.miniproject.entities.Account: select account0_.accountNumber as accountnumber1_0_0_, account0_.agentName as agentname2_0_0_, account0_.userName as username3_0_0_ from Account account0_ where account0_.accountNumber=?
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Static select for action ACTION_REFRESH on entity com.miniproject.entities.Account: select account0_.accountNumber as accountnumber1_0_0_, account0_.agentName as agentname2_0_0_, account0_.userName as username3_0_0_ from Account account0_ where account0_.accountNumber=?
2021-05-11-main-INFO -org.hibernate.orm.connections.access:HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6e28bb87] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-05-11-main-DEBUG-org.hibernate.mapping.Table:No alter strings for table : Account
2021-05-11-main-DEBUG-org.hibernate.mapping.Table:No alter strings for table : claim
2021-05-11-main-DEBUG-org.hibernate.mapping.Table:No alter strings for table : Policy
2021-05-11-main-DEBUG-org.hibernate.mapping.Table:No alter strings for table : POLICYDETAILS
2021-05-11-main-DEBUG-org.hibernate.mapping.Table:No alter strings for table : Question
2021-05-11-main-DEBUG-org.hibernate.mapping.Table:No alter strings for table : user_role
2021-05-11-main-DEBUG-org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator:No JtaPlatform was specified, checking resolver
2021-05-11-main-DEBUG-org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator:No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-05-11-main-DEBUG-org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver:Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-05-11-main-INFO -org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator:HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-05-11-main-DEBUG-org.hibernate.query.spi.NamedQueryRepository:Checking 0 named HQL queries
2021-05-11-main-DEBUG-org.hibernate.query.spi.NamedQueryRepository:Checking 0 named SQL queries
2021-05-11-main-DEBUG-org.hibernate.internal.SessionFactoryRegistry:Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1d4664d7
2021-05-11-main-DEBUG-org.hibernate.internal.SessionFactoryRegistry:Registering SessionFactory: fb800346-0cd9-4849-837d-705b0482335b (<unnamed>)
2021-05-11-main-DEBUG-org.hibernate.internal.SessionFactoryRegistry:Not binding SessionFactory to JNDI, no JNDI name configured
2021-05-11-main-DEBUG-org.hibernate.stat.internal.StatisticsInitiator:Statistics initialized [enabled=false]
2021-05-11-main-DEBUG-org.hibernate.hql.internal.QueryTranslatorFactoryInitiator:QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4455f57d
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:parse() - HQL: select userrole from com.miniproject.entities.UserRole userrole where userrole.rolecode=:role
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.ErrorTracker:throwQueryException() : no errors
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'miniproject'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'UserRole'
    |  |     \-[ALIAS] Node: 'userrole'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'userrole'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'userrole'
          |  \-[IDENT] Node: 'rolecode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'role'

2021-05-11-main-DEBUG-org.hibernate.hql.internal.antlr.HqlSqlBaseWalker:select << begin [level=1, statement=select]
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.FromElement:FromClause{level=1} : com.miniproject.entities.UserRole (userrole) -> userrole0_
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.FromReferenceNode:Resolved : userrole -> userrole0_.username
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.FromReferenceNode:Resolved : userrole -> userrole0_.username
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.DotNode:getDataType() : rolecode -> org.hibernate.type.StringType@1e802ef9
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.FromReferenceNode:Resolved : userrole.rolecode -> userrole0_.rolecode
2021-05-11-main-DEBUG-org.hibernate.hql.internal.antlr.HqlSqlBaseWalker:select : finishing up [level=1, statement=select]
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.HqlSqlWalker:processQuery() :  ( SELECT ( {select clause} userrole0_.username ) ( FromClause{level=1} user_role userrole0_ ) ( where ( = ( userrole0_.rolecode userrole0_.username rolecode ) ? ) ) )
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.util.JoinProcessor:Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity UserRole): [user_role]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.miniproject.entities.UserRole)
    |  | originalText: userrole
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.miniproject.entities.UserRole)
          | path: userrole.rolecode
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.miniproject.entities.UserRole)
          |  | originalText: userrole
          |  \-IdentNode
          |    persister: null
          |    originalText: rolecode
          \-ParameterNode

2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.util.JoinProcessor:Using FROM fragment [user_role userrole0_]
2021-05-11-main-DEBUG-org.hibernate.hql.internal.antlr.HqlSqlBaseWalker:select >> end [level=1, statement=select]
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'userrole0_.username as username1_5_' {alias=userrole, className=com.miniproject.entities.UserRole, tableAlias=userrole0_}
    |  \-[SQL_TOKEN] SqlFragment: 'userrole0_.password as password2_5_, userrole0_.rolecode as rolecode3_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[userrole], fromElementByTableAlias=[userrole0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_role userrole0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=userrole,role=null,tableName=user_role,tableAlias=userrole0_,origin=null,columns={,className=com.miniproject.entities.UserRole}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'userrole0_.rolecode' {propertyName=rolecode,dereferenceType=PRIMITIVE,getPropertyPath=rolecode,path=userrole.rolecode,tableAlias=userrole0_,className=com.miniproject.entities.UserRole,classAlias=userrole}
          |  +-[ALIAS_REF] IdentNode: 'userrole0_.username' {alias=userrole, className=com.miniproject.entities.UserRole, tableAlias=userrole0_}
          |  \-[IDENT] IdentNode: 'rolecode' {originalText=rolecode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=role, expectedType=org.hibernate.type.StringType@1e802ef9}

2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.ErrorTracker:throwQueryException() : no errors
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:HQL: select userrole from com.miniproject.entities.UserRole userrole where userrole.rolecode=:role
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:SQL: select userrole0_.username as username1_5_, userrole0_.password as password2_5_, userrole0_.rolecode as rolecode3_5_ from user_role userrole0_ where userrole0_.rolecode=?
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.ErrorTracker:throwQueryException() : no errors
2021-05-11-main-DEBUG-org.hibernate.SQL:select userrole0_.username as username1_5_, userrole0_.password as password2_5_, userrole0_.rolecode as rolecode3_5_ from user_role userrole0_ where userrole0_.rolecode=?
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Result set row: 0
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Result row: EntityKey[com.miniproject.entities.UserRole#Joe]
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Result set row: 1
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Result row: EntityKey[com.miniproject.entities.UserRole#Sejal]
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Result set row: 2
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Result row: EntityKey[com.miniproject.entities.UserRole#Sachin]
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Resolving attributes for [com.miniproject.entities.UserRole#Joe]
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Processing attribute `password` : value = Joe123
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Attribute (`password`)  - enhanced for lazy-loading? - false
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Processing attribute `rolecode` : value = Agent
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Attribute (`rolecode`)  - enhanced for lazy-loading? - false
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Done materializing entity [com.miniproject.entities.UserRole#Joe]
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Resolving attributes for [com.miniproject.entities.UserRole#Sejal]
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Processing attribute `password` : value = Sejal123
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Attribute (`password`)  - enhanced for lazy-loading? - false
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Processing attribute `rolecode` : value = Agent
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Attribute (`rolecode`)  - enhanced for lazy-loading? - false
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Done materializing entity [com.miniproject.entities.UserRole#Sejal]
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Resolving attributes for [com.miniproject.entities.UserRole#Sachin]
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Processing attribute `password` : value = Sachin123
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Attribute (`password`)  - enhanced for lazy-loading? - false
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Processing attribute `rolecode` : value = Agent
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Attribute (`rolecode`)  - enhanced for lazy-loading? - false
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Done materializing entity [com.miniproject.entities.UserRole#Sachin]
2021-05-11-main-DEBUG-org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl:Initiating JDBC connection release from afterTransaction
2021-05-11-main-INFO -com.miniproject.service.UserInterFace:Sejal added
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:parse() - HQL: select account from com.miniproject.entities.Account account where account.agentName = :agentName
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.ErrorTracker:throwQueryException() : no errors
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'miniproject'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'Account'
    |  |     \-[ALIAS] Node: 'account'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'account'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'account'
          |  \-[IDENT] Node: 'agentName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'agentName'

2021-05-11-main-DEBUG-org.hibernate.hql.internal.antlr.HqlSqlBaseWalker:select << begin [level=1, statement=select]
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.FromElement:FromClause{level=1} : com.miniproject.entities.Account (account) -> account0_
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.FromReferenceNode:Resolved : account -> account0_.accountNumber
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.FromReferenceNode:Resolved : account -> account0_.accountNumber
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.DotNode:getDataType() : agentName -> org.hibernate.type.StringType@1e802ef9
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.FromReferenceNode:Resolved : account.agentName -> account0_.agentName
2021-05-11-main-DEBUG-org.hibernate.hql.internal.antlr.HqlSqlBaseWalker:select : finishing up [level=1, statement=select]
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.HqlSqlWalker:processQuery() :  ( SELECT ( {select clause} account0_.accountNumber ) ( FromClause{level=1} Account account0_ ) ( where ( = ( account0_.agentName account0_.accountNumber agentName ) ? ) ) )
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.util.JoinProcessor:Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Account): [Account]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.miniproject.entities.Account)
    |  | originalText: account
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.miniproject.entities.Account)
          | path: account.agentName
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.miniproject.entities.Account)
          |  | originalText: account
          |  \-IdentNode
          |    persister: null
          |    originalText: agentName
          \-ParameterNode

2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.util.JoinProcessor:Using FROM fragment [Account account0_]
2021-05-11-main-DEBUG-org.hibernate.hql.internal.antlr.HqlSqlBaseWalker:select >> end [level=1, statement=select]
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'account0_.accountNumber as accountnumber1_0_' {alias=account, className=com.miniproject.entities.Account, tableAlias=account0_}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.agentName as agentname2_0_, account0_.userName as username3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[account], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=account,role=null,tableName=Account,tableAlias=account0_,origin=null,columns={,className=com.miniproject.entities.Account}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.agentName' {propertyName=agentName,dereferenceType=PRIMITIVE,getPropertyPath=agentName,path=account.agentName,tableAlias=account0_,className=com.miniproject.entities.Account,classAlias=account}
          |  +-[ALIAS_REF] IdentNode: 'account0_.accountNumber' {alias=account, className=com.miniproject.entities.Account, tableAlias=account0_}
          |  \-[IDENT] IdentNode: 'agentName' {originalText=agentName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=agentName, expectedType=org.hibernate.type.StringType@1e802ef9}

2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.ErrorTracker:throwQueryException() : no errors
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:HQL: select account from com.miniproject.entities.Account account where account.agentName = :agentName
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:SQL: select account0_.accountNumber as accountnumber1_0_, account0_.agentName as agentname2_0_, account0_.userName as username3_0_ from Account account0_ where account0_.agentName=?
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.ErrorTracker:throwQueryException() : no errors
2021-05-11-main-DEBUG-org.hibernate.SQL:select account0_.accountNumber as accountnumber1_0_, account0_.agentName as agentname2_0_, account0_.userName as username3_0_ from Account account0_ where account0_.agentName=?
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Result set row: 0
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Result row: EntityKey[com.miniproject.entities.Account#104]
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Result set row: 1
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Result row: EntityKey[com.miniproject.entities.Account#105]
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Result set row: 2
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Result row: EntityKey[com.miniproject.entities.Account#107]
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Resolving attributes for [com.miniproject.entities.Account#104]
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Processing attribute `agentName` : value = Sejal
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Attribute (`agentName`)  - enhanced for lazy-loading? - false
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Processing attribute `userName` : value = Harry
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Attribute (`userName`)  - enhanced for lazy-loading? - false
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Done materializing entity [com.miniproject.entities.Account#104]
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Resolving attributes for [com.miniproject.entities.Account#105]
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Processing attribute `agentName` : value = Sejal
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Attribute (`agentName`)  - enhanced for lazy-loading? - false
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Processing attribute `userName` : value = Mary
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Attribute (`userName`)  - enhanced for lazy-loading? - false
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Done materializing entity [com.miniproject.entities.Account#105]
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Resolving attributes for [com.miniproject.entities.Account#107]
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Processing attribute `agentName` : value = Sejal
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Attribute (`agentName`)  - enhanced for lazy-loading? - false
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Processing attribute `userName` : value = Dhana
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Attribute (`userName`)  - enhanced for lazy-loading? - false
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Done materializing entity [com.miniproject.entities.Account#107]
2021-05-11-main-DEBUG-org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl:Initiating JDBC connection release from afterTransaction
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:parse() - HQL: select account from com.miniproject.entities.Account account where account.userName=:usn
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.ErrorTracker:throwQueryException() : no errors
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'miniproject'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'Account'
    |  |     \-[ALIAS] Node: 'account'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'account'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'account'
          |  \-[IDENT] Node: 'userName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'usn'

2021-05-11-main-DEBUG-org.hibernate.hql.internal.antlr.HqlSqlBaseWalker:select << begin [level=1, statement=select]
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.FromElement:FromClause{level=1} : com.miniproject.entities.Account (account) -> account0_
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.FromReferenceNode:Resolved : account -> account0_.accountNumber
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.FromReferenceNode:Resolved : account -> account0_.accountNumber
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.DotNode:getDataType() : userName -> org.hibernate.type.StringType@1e802ef9
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.FromReferenceNode:Resolved : account.userName -> account0_.userName
2021-05-11-main-DEBUG-org.hibernate.hql.internal.antlr.HqlSqlBaseWalker:select : finishing up [level=1, statement=select]
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.HqlSqlWalker:processQuery() :  ( SELECT ( {select clause} account0_.accountNumber ) ( FromClause{level=1} Account account0_ ) ( where ( = ( account0_.userName account0_.accountNumber userName ) ? ) ) )
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.util.JoinProcessor:Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Account): [Account]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.miniproject.entities.Account)
    |  | originalText: account
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.miniproject.entities.Account)
          | path: account.userName
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.miniproject.entities.Account)
          |  | originalText: account
          |  \-IdentNode
          |    persister: null
          |    originalText: userName
          \-ParameterNode

2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.util.JoinProcessor:Using FROM fragment [Account account0_]
2021-05-11-main-DEBUG-org.hibernate.hql.internal.antlr.HqlSqlBaseWalker:select >> end [level=1, statement=select]
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'account0_.accountNumber as accountnumber1_0_' {alias=account, className=com.miniproject.entities.Account, tableAlias=account0_}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.agentName as agentname2_0_, account0_.userName as username3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[account], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=account,role=null,tableName=Account,tableAlias=account0_,origin=null,columns={,className=com.miniproject.entities.Account}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.userName' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path=account.userName,tableAlias=account0_,className=com.miniproject.entities.Account,classAlias=account}
          |  +-[ALIAS_REF] IdentNode: 'account0_.accountNumber' {alias=account, className=com.miniproject.entities.Account, tableAlias=account0_}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=usn, expectedType=org.hibernate.type.StringType@1e802ef9}

2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.ErrorTracker:throwQueryException() : no errors
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:HQL: select account from com.miniproject.entities.Account account where account.userName=:usn
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:SQL: select account0_.accountNumber as accountnumber1_0_, account0_.agentName as agentname2_0_, account0_.userName as username3_0_ from Account account0_ where account0_.userName=?
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.ErrorTracker:throwQueryException() : no errors
2021-05-11-main-DEBUG-org.hibernate.SQL:select account0_.accountNumber as accountnumber1_0_, account0_.agentName as agentname2_0_, account0_.userName as username3_0_ from Account account0_ where account0_.userName=?
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Result set row: 0
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Result row: EntityKey[com.miniproject.entities.Account#105]
2021-05-11-main-DEBUG-org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl:Initiating JDBC connection release from afterTransaction
2021-05-11-main-DEBUG-org.hibernate.SQL:select account0_.accountNumber as accountnumber1_0_, account0_.agentName as agentname2_0_, account0_.userName as username3_0_ from Account account0_ where account0_.userName=?
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Result set row: 0
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Result row: EntityKey[com.miniproject.entities.Account#105]
2021-05-11-main-DEBUG-org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl:Initiating JDBC connection release from afterTransaction
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:parse() - HQL: select policy from com.miniproject.entities.Policy policy where policy.accountNumber=:accountnumber
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.ErrorTracker:throwQueryException() : no errors
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'miniproject'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'Policy'
    |  |     \-[ALIAS] Node: 'policy'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'policy'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'policy'
          |  \-[IDENT] Node: 'accountNumber'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'accountnumber'

2021-05-11-main-DEBUG-org.hibernate.hql.internal.antlr.HqlSqlBaseWalker:select << begin [level=1, statement=select]
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.FromElement:FromClause{level=1} : com.miniproject.entities.Policy (policy) -> policy0_
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.FromReferenceNode:Resolved : policy -> policy0_.policyNumber
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.FromReferenceNode:Resolved : policy -> policy0_.policyNumber
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.DotNode:getDataType() : accountNumber -> org.hibernate.type.IntegerType@1a04f701
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.FromReferenceNode:Resolved : policy.accountNumber -> policy0_.accountNumber
2021-05-11-main-DEBUG-org.hibernate.hql.internal.antlr.HqlSqlBaseWalker:select : finishing up [level=1, statement=select]
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.HqlSqlWalker:processQuery() :  ( SELECT ( {select clause} policy0_.policyNumber ) ( FromClause{level=1} Policy policy0_ ) ( where ( = ( policy0_.accountNumber policy0_.policyNumber accountNumber ) ? ) ) )
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.util.JoinProcessor:Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Policy): [Policy]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.miniproject.entities.Policy)
    |  | originalText: policy
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.miniproject.entities.Policy)
          | path: policy.accountNumber
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.miniproject.entities.Policy)
          |  | originalText: policy
          |  \-IdentNode
          |    persister: null
          |    originalText: accountNumber
          \-ParameterNode

2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.util.JoinProcessor:Using FROM fragment [Policy policy0_]
2021-05-11-main-DEBUG-org.hibernate.hql.internal.antlr.HqlSqlBaseWalker:select >> end [level=1, statement=select]
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Policy)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'policy0_.policyNumber as policynumber1_2_' {alias=policy, className=com.miniproject.entities.Policy, tableAlias=policy0_}
    |  \-[SQL_TOKEN] SqlFragment: 'policy0_.accountNumber as accountnumber2_2_, policy0_.policyPremium as policypremium3_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[policy], fromElementByTableAlias=[policy0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Policy policy0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=policy,role=null,tableName=Policy,tableAlias=policy0_,origin=null,columns={,className=com.miniproject.entities.Policy}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'policy0_.accountNumber' {propertyName=accountNumber,dereferenceType=PRIMITIVE,getPropertyPath=accountNumber,path=policy.accountNumber,tableAlias=policy0_,className=com.miniproject.entities.Policy,classAlias=policy}
          |  +-[ALIAS_REF] IdentNode: 'policy0_.policyNumber' {alias=policy, className=com.miniproject.entities.Policy, tableAlias=policy0_}
          |  \-[IDENT] IdentNode: 'accountNumber' {originalText=accountNumber}
          \-[NAMED_PARAM] ParameterNode: '?' {name=accountnumber, expectedType=org.hibernate.type.IntegerType@1a04f701}

2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.ErrorTracker:throwQueryException() : no errors
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:HQL: select policy from com.miniproject.entities.Policy policy where policy.accountNumber=:accountnumber
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:SQL: select policy0_.policyNumber as policynumber1_2_, policy0_.accountNumber as accountnumber2_2_, policy0_.policyPremium as policypremium3_2_ from Policy policy0_ where policy0_.accountNumber=?
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.ErrorTracker:throwQueryException() : no errors
2021-05-11-main-DEBUG-org.hibernate.SQL:select policy0_.policyNumber as policynumber1_2_, policy0_.accountNumber as accountnumber2_2_, policy0_.policyPremium as policypremium3_2_ from Policy policy0_ where policy0_.accountNumber=?
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Result set row: 0
2021-05-11-main-DEBUG-org.hibernate.loader.Loader:Result row: EntityKey[com.miniproject.entities.Policy#1005]
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Resolving attributes for [com.miniproject.entities.Policy#1005]
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Processing attribute `accountNumber` : value = 105
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Attribute (`accountNumber`)  - enhanced for lazy-loading? - false
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Processing attribute `policyPremium` : value = 5000
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Attribute (`policyPremium`)  - enhanced for lazy-loading? - false
2021-05-11-main-DEBUG-org.hibernate.engine.internal.TwoPhaseLoad:Done materializing entity [com.miniproject.entities.Policy#1005]
2021-05-11-main-DEBUG-org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl:Initiating JDBC connection release from afterTransaction
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:parse() - HQL: select claim from com.miniproject.entities.Claim claim where claim.policyNumber = :pnum
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.ErrorTracker:throwQueryException() : no errors
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'miniproject'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'Claim'
    |  |     \-[ALIAS] Node: 'claim'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'claim'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'claim'
          |  \-[IDENT] Node: 'policyNumber'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'pnum'

2021-05-11-main-DEBUG-org.hibernate.hql.internal.antlr.HqlSqlBaseWalker:select << begin [level=1, statement=select]
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.FromElement:FromClause{level=1} : com.miniproject.entities.Claim (claim) -> claim0_
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.FromReferenceNode:Resolved : claim -> claim0_.claimNumber
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.FromReferenceNode:Resolved : claim -> claim0_.claimNumber
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.DotNode:getDataType() : policyNumber -> org.hibernate.type.IntegerType@1a04f701
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.tree.FromReferenceNode:Resolved : claim.policyNumber -> claim0_.policyNumber
2021-05-11-main-DEBUG-org.hibernate.hql.internal.antlr.HqlSqlBaseWalker:select : finishing up [level=1, statement=select]
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.HqlSqlWalker:processQuery() :  ( SELECT ( {select clause} claim0_.claimNumber ) ( FromClause{level=1} claim claim0_ ) ( where ( = ( claim0_.policyNumber claim0_.claimNumber policyNumber ) ? ) ) )
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.util.JoinProcessor:Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Claim): [claim]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.miniproject.entities.Claim)
    |  | originalText: claim
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.miniproject.entities.Claim)
          | path: claim.policyNumber
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.miniproject.entities.Claim)
          |  | originalText: claim
          |  \-IdentNode
          |    persister: null
          |    originalText: policyNumber
          \-ParameterNode

2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.util.JoinProcessor:Using FROM fragment [claim claim0_]
2021-05-11-main-DEBUG-org.hibernate.hql.internal.antlr.HqlSqlBaseWalker:select >> end [level=1, statement=select]
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (claim)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'claim0_.claimNumber as claimnumber1_1_' {alias=claim, className=com.miniproject.entities.Claim, tableAlias=claim0_}
    |  \-[SQL_TOKEN] SqlFragment: 'claim0_.accidentCity as accidentcity2_1_, claim0_.accidentLocationStreet as accidentlocationst3_1_, claim0_.accidentState as accidentstate4_1_, claim0_.accidentZip as accidentzip5_1_, claim0_.claimReason as claimreason6_1_, claim0_.claimType as claimtype7_1_, claim0_.policyNumber as policynumber8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[claim], fromElementByTableAlias=[claim0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'claim claim0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=claim,role=null,tableName=claim,tableAlias=claim0_,origin=null,columns={,className=com.miniproject.entities.Claim}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'claim0_.policyNumber' {propertyName=policyNumber,dereferenceType=PRIMITIVE,getPropertyPath=policyNumber,path=claim.policyNumber,tableAlias=claim0_,className=com.miniproject.entities.Claim,classAlias=claim}
          |  +-[ALIAS_REF] IdentNode: 'claim0_.claimNumber' {alias=claim, className=com.miniproject.entities.Claim, tableAlias=claim0_}
          |  \-[IDENT] IdentNode: 'policyNumber' {originalText=policyNumber}
          \-[NAMED_PARAM] ParameterNode: '?' {name=pnum, expectedType=org.hibernate.type.IntegerType@1a04f701}

2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.ErrorTracker:throwQueryException() : no errors
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:HQL: select claim from com.miniproject.entities.Claim claim where claim.policyNumber = :pnum
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.QueryTranslatorImpl:SQL: select claim0_.claimNumber as claimnumber1_1_, claim0_.accidentCity as accidentcity2_1_, claim0_.accidentLocationStreet as accidentlocationst3_1_, claim0_.accidentState as accidentstate4_1_, claim0_.accidentZip as accidentzip5_1_, claim0_.claimReason as claimreason6_1_, claim0_.claimType as claimtype7_1_, claim0_.policyNumber as policynumber8_1_ from claim claim0_ where claim0_.policyNumber=?
2021-05-11-main-DEBUG-org.hibernate.hql.internal.ast.ErrorTracker:throwQueryException() : no errors
2021-05-11-main-DEBUG-org.hibernate.SQL:select claim0_.claimNumber as claimnumber1_1_, claim0_.accidentCity as accidentcity2_1_, claim0_.accidentLocationStreet as accidentlocationst3_1_, claim0_.accidentState as accidentstate4_1_, claim0_.accidentZip as accidentzip5_1_, claim0_.claimReason as claimreason6_1_, claim0_.claimType as claimtype7_1_, claim0_.policyNumber as policynumber8_1_ from claim claim0_ where claim0_.policyNumber=?
2021-05-11-main-DEBUG-org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl:Initiating JDBC connection release from afterTransaction
2021-05-11-Hibernate Connection Pool Validation Thread-DEBUG-org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl:Connection pool now considered primed; min-size will be maintained
2021-05-11-main-DEBUG-org.hibernate.engine.transaction.internal.TransactionImpl:On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-05-11-main-DEBUG-org.hibernate.engine.transaction.internal.TransactionImpl:begin
2021-05-11-main-DEBUG-org.hibernate.event.internal.AbstractSaveEventListener:Generated identifier: 971, using strategy: org.hibernate.id.Assigned
2021-05-11-main-DEBUG-org.hibernate.engine.transaction.internal.TransactionImpl:committing
2021-05-11-main-DEBUG-org.hibernate.event.internal.AbstractFlushingEventListener:Processing flush-time cascades
2021-05-11-main-DEBUG-org.hibernate.event.internal.AbstractFlushingEventListener:Dirty checking collections
2021-05-11-main-DEBUG-org.hibernate.event.internal.AbstractFlushingEventListener:Flushed: 1 insertions, 0 updates, 0 deletions to 8 objects
2021-05-11-main-DEBUG-org.hibernate.event.internal.AbstractFlushingEventListener:Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-05-11-main-DEBUG-org.hibernate.internal.util.EntityPrinter:Listing entities:
2021-05-11-main-DEBUG-org.hibernate.internal.util.EntityPrinter:com.miniproject.entities.Account{agentName=Sejal, accountNumber=105, userName=Mary}
2021-05-11-main-DEBUG-org.hibernate.internal.util.EntityPrinter:com.miniproject.entities.Policy{policyPremium=5000, policyNumber=1005, accountNumber=105}
2021-05-11-main-DEBUG-org.hibernate.internal.util.EntityPrinter:com.miniproject.entities.UserRole{rolecode=Agent, password=Sachin123, username=Sachin}
2021-05-11-main-DEBUG-org.hibernate.internal.util.EntityPrinter:com.miniproject.entities.Account{agentName=Sejal, accountNumber=104, userName=Harry}
2021-05-11-main-DEBUG-org.hibernate.internal.util.EntityPrinter:com.miniproject.entities.Claim{accidentState=Telangana, accidentCity=Hyderabad, claimType=Automobile, claimReason=Crashed, policyNumber=1005, accidentLocationStreet=Lingampally, claimNumber=971, accidentZip=500039}
2021-05-11-main-DEBUG-org.hibernate.internal.util.EntityPrinter:com.miniproject.entities.UserRole{rolecode=Agent, password=Joe123, username=Joe}
2021-05-11-main-DEBUG-org.hibernate.internal.util.EntityPrinter:com.miniproject.entities.Account{agentName=Sejal, accountNumber=107, userName=Dhana}
2021-05-11-main-DEBUG-org.hibernate.internal.util.EntityPrinter:com.miniproject.entities.UserRole{rolecode=Agent, password=Sejal123, username=Sejal}
2021-05-11-main-DEBUG-org.hibernate.SQL:insert into claim (accidentCity, accidentLocationStreet, accidentState, accidentZip, claimReason, claimType, policyNumber, claimNumber) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-05-11-main-DEBUG-org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl:Initiating JDBC connection release from afterTransaction
2021-05-11-main-DEBUG-org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl:Initiating JDBC connection release from afterTransaction
2021-05-11-main-DEBUG-com.miniproject.service.UserInterFace:Claim created :1005
2021-05-11 11:46 DEBUG 2021-05-11 23:46:31,123-:Logging Provider: org.jboss.logging.Log4jLoggerProvider 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:31,370-:Located and parsed 1 persistence units; checking each 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:31,371-:Checking persistence-unit [name=JPA-PU, explicit-provider=org.hibernate.ejb.HibernatePersistence] against incoming persistence unit name [JPA-PU] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:31,372-:Persistence-unit [JPA-PU] requested PersistenceProvider [org.hibernate.ejb.HibernatePersistence] 
2021-05-11 11:46 WARN 2021-05-11 23:46:31,374-:HHH015016: Encountered a deprecated javax.persistence.spi.PersistenceProvider [org.hibernate.ejb.HibernatePersistence]; [org.hibernate.jpa.HibernatePersistenceProvider] will be used instead. 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:31,389-:PersistenceUnitInfo [
	name: JPA-PU
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/F:/Team-D-InsuranceClaimSystem/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: oracle.jdbc.driver.OracleDriver
		javax.persistence.jdbc.password: PASSWORD
		javax.persistence.jdbc.url: jdbc:oracle:thin:@localhost:1521:XE
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: TEAMD] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:31,423-:Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:31,427-:Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:31,434-:Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. 
2021-05-11 11:46 INFO 2021-05-11 23:46:31,624-:HHH000412: Hibernate ORM core version 5.4.21.Final 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:31,626-:HHH000206: hibernate.properties not found 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:31,860-:Overriding existing service binding [org.hibernate.secure.spi.JaccService] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:31,880-:Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:31,881-:Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory 
2021-05-11 11:46 INFO 2021-05-11 23:46:31,910-:HCANN000001: Hibernate Commons Annotations {5.1.0.Final} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,357-:Adding type registration boolean -> org.hibernate.type.BooleanType@4278a03f 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,358-:Adding type registration boolean -> org.hibernate.type.BooleanType@4278a03f 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,358-:Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4278a03f 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,358-:Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@124c278f 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,359-:Adding type registration true_false -> org.hibernate.type.TrueFalseType@1fe20588 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,360-:Adding type registration yes_no -> org.hibernate.type.YesNoType@2ddc8ecb 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,361-:Adding type registration byte -> org.hibernate.type.ByteType@309e345f 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,361-:Adding type registration byte -> org.hibernate.type.ByteType@309e345f 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,361-:Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@309e345f 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,363-:Adding type registration character -> org.hibernate.type.CharacterType@25d250c6 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,363-:Adding type registration char -> org.hibernate.type.CharacterType@25d250c6 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,363-:Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@25d250c6 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,364-:Adding type registration short -> org.hibernate.type.ShortType@318ba8c8 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,365-:Adding type registration short -> org.hibernate.type.ShortType@318ba8c8 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,365-:Adding type registration java.lang.Short -> org.hibernate.type.ShortType@318ba8c8 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,367-:Adding type registration integer -> org.hibernate.type.IntegerType@1a04f701 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,367-:Adding type registration int -> org.hibernate.type.IntegerType@1a04f701 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,367-:Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1a04f701 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,369-:Adding type registration long -> org.hibernate.type.LongType@56de5251 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,369-:Adding type registration long -> org.hibernate.type.LongType@56de5251 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,369-:Adding type registration java.lang.Long -> org.hibernate.type.LongType@56de5251 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,370-:Adding type registration float -> org.hibernate.type.FloatType@71b1176b 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,370-:Adding type registration float -> org.hibernate.type.FloatType@71b1176b 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,371-:Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71b1176b 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,373-:Adding type registration double -> org.hibernate.type.DoubleType@5dd6264 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,374-:Adding type registration double -> org.hibernate.type.DoubleType@5dd6264 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,374-:Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5dd6264 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,377-:Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7ee955a8 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,378-:Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7ee955a8 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,380-:Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d2a209c 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,391-:Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d2a209c 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,398-:Adding type registration string -> org.hibernate.type.StringType@1e802ef9 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,399-:Adding type registration java.lang.String -> org.hibernate.type.StringType@1e802ef9 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,400-:Adding type registration nstring -> org.hibernate.type.StringNVarcharType@670002 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,402-:Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@56528192 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,404-:Adding type registration url -> org.hibernate.type.UrlType@1f3f4916 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,404-:Adding type registration java.net.URL -> org.hibernate.type.UrlType@1f3f4916 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,406-:Adding type registration Duration -> org.hibernate.type.DurationType@20d28811 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,406-:Adding type registration java.time.Duration -> org.hibernate.type.DurationType@20d28811 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,428-:Adding type registration Instant -> org.hibernate.type.InstantType@6af93788 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,428-:Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6af93788 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,430-:Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1c93084c 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,431-:Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1c93084c 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,432-:Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5223e5ee 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,432-:Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5223e5ee 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,433-:Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1d119efb 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,434-:Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1d119efb 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,435-:Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@49b0b76 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,436-:Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@49b0b76 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,440-:Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@be64738 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,441-:Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@be64738 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,448-:Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@72a7c7e0 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,448-:Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@72a7c7e0 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,451-:Adding type registration date -> org.hibernate.type.DateType@6e4784bc 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,451-:Adding type registration java.sql.Date -> org.hibernate.type.DateType@6e4784bc 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,454-:Adding type registration time -> org.hibernate.type.TimeType@10e41621 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,454-:Adding type registration java.sql.Time -> org.hibernate.type.TimeType@10e41621 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,456-:Adding type registration timestamp -> org.hibernate.type.TimestampType@a9cd3b1 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,456-:Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a9cd3b1 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,456-:Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a9cd3b1 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,458-:Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9225652 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,459-:Adding type registration calendar -> org.hibernate.type.CalendarType@63355449 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,460-:Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@63355449 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,460-:Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@63355449 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,461-:Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@48ae9b55 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,462-:Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@31d7b7bf 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,463-:Adding type registration locale -> org.hibernate.type.LocaleType@7a69b07 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,463-:Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7a69b07 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,463-:Adding type registration currency -> org.hibernate.type.CurrencyType@1817d444 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,463-:Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1817d444 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,465-:Adding type registration timezone -> org.hibernate.type.TimeZoneType@3911c2a7 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,465-:Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3911c2a7 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,466-:Adding type registration class -> org.hibernate.type.ClassType@15c43bd9 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,467-:Adding type registration java.lang.Class -> org.hibernate.type.ClassType@15c43bd9 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,468-:Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@39529185 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,468-:Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@39529185 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,469-:Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31c88ec8 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,470-:Adding type registration binary -> org.hibernate.type.BinaryType@7ed7259e 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,471-:Adding type registration byte[] -> org.hibernate.type.BinaryType@7ed7259e 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,471-:Adding type registration [B -> org.hibernate.type.BinaryType@7ed7259e 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,472-:Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c407114 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,472-:Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c407114 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,472-:Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c407114 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,474-:Adding type registration row_version -> org.hibernate.type.RowVersionType@619713e5 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,474-:Adding type registration image -> org.hibernate.type.ImageType@7722c3c3 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,475-:Adding type registration characters -> org.hibernate.type.CharArrayType@50eac852 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,475-:Adding type registration char[] -> org.hibernate.type.CharArrayType@50eac852 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,476-:Adding type registration [C -> org.hibernate.type.CharArrayType@50eac852 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,477-:Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a192cfe 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,477-:Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a192cfe 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,477-:Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a192cfe 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,478-:Adding type registration text -> org.hibernate.type.TextType@20deea7f 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,478-:Adding type registration ntext -> org.hibernate.type.NTextType@7714e963 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,481-:Adding type registration blob -> org.hibernate.type.BlobType@192d43ce 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,482-:Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@192d43ce 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,483-:Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6973b51b 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,484-:Adding type registration clob -> org.hibernate.type.ClobType@6e171cd7 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,485-:Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6e171cd7 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,487-:Adding type registration nclob -> org.hibernate.type.NClobType@384ad17b 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,487-:Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@384ad17b 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,488-:Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7334aada 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,491-:Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@42e99e4a 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,494-:Adding type registration serializable -> org.hibernate.type.SerializableType@15ff3e9e 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,507-:Adding type registration object -> org.hibernate.type.ObjectType@661972b0 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,507-:Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@661972b0 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,508-:Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44ebcd03 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,508-:Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@694abbdc 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,508-:Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2e005c4b 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,508-:Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4567f35d 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,508-:Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5ffead27 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,508-:Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6356695f 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,508-:Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4f18837a 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,508-:Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@359f7cdf 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,520-:Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@131774fe] into BootstrapContext; was [null] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,521-:Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@158d2680] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@77847718] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,608-:Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,608-:ClassLoaderAccessImpl#injectTempClassLoader(null) [was null] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,622-:Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,622-:Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,623-:Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,624-:Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,624-:Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,624-:Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,625-:Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,626-:Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,627-:Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,627-:Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,628-:Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,628-:Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,628-:Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,629-:Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] 
2021-05-11 11:46 WARN 2021-05-11 23:46:32,634-:HHH10001002: Using Hibernate built-in connection pool (not for production use!) 
2021-05-11 11:46 INFO 2021-05-11 23:46:32,851-:HHH10001005: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@localhost:1521:XE] 
2021-05-11 11:46 INFO 2021-05-11 23:46:32,851-:HHH10001001: Connection properties: {user=TEAMD, password=PASSWORD} 
2021-05-11 11:46 INFO 2021-05-11 23:46:32,851-:HHH10001003: Autocommit mode: false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:32,865-:Initializing Connection pool with 1 Connections 
2021-05-11 11:46 INFO 2021-05-11 23:46:32,866-:HHH000115: Hibernate connection pool size: 20 (min=1) 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,240-:Database ->
       name : Oracle
    version : Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production
      major : 11
      minor : 2 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,241-:Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.4.0
      major : 11
      minor : 2 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,241-:JDBC version : 11.2 
2021-05-11 11:46 INFO 2021-05-11 23:46:33,322-:HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,521-:Unable to use Java 1.7 Connection#getSchema 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,561-:Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,566-:Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46271dd6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11bb571c] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,635-:Binding entity from annotated class: com.miniproject.entities.Claim 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,663-:Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,667-:Import with entity name Claim 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,675-:Bind entity com.miniproject.entities.Claim on table claim 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,704-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=claimNumber, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,708-:MetadataSourceProcessor property claimNumber with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,709-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:claimNumber] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,712-:building SimpleValue for claimNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,714-:Building property claimNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,717-:#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(claimNumber)]), claimNumber, assigned, , ...) 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,717-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=accidentCity, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,718-:MetadataSourceProcessor property accidentCity with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,719-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:accidentCity] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,719-:building SimpleValue for accidentCity 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,719-:Building property accidentCity 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,719-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=accidentLocationStreet, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,719-:MetadataSourceProcessor property accidentLocationStreet with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,719-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:accidentLocationStreet] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,719-:building SimpleValue for accidentLocationStreet 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,719-:Building property accidentLocationStreet 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,719-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=accidentState, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,721-:MetadataSourceProcessor property accidentState with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,722-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:accidentState] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,723-:building SimpleValue for accidentState 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,724-:Building property accidentState 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,725-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=accidentZip, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,726-:MetadataSourceProcessor property accidentZip with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,727-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:accidentZip] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,727-:building SimpleValue for accidentZip 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,727-:Building property accidentZip 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,727-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=claimReason, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,727-:MetadataSourceProcessor property claimReason with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,727-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:claimReason] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,728-:building SimpleValue for claimReason 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,728-:Building property claimReason 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,728-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=claimType, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,728-:MetadataSourceProcessor property claimType with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,728-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:claimType] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,728-:building SimpleValue for claimType 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,728-:Building property claimType 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,729-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=policyNumber, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,729-:MetadataSourceProcessor property policyNumber with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,729-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:policyNumber] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,729-:building SimpleValue for policyNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,729-:Building property policyNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,738-:Binding entity from annotated class: com.miniproject.entities.UserRole 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,739-:Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,739-:Import with entity name UserRole 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,739-:Bind entity com.miniproject.entities.UserRole on table user_role 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,740-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_role), mappingColumn=username, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,740-:MetadataSourceProcessor property username with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,741-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.UserRole:username] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,741-:building SimpleValue for username 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,741-:Building property username 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,741-:#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(username)]), username, assigned, , ...) 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,741-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_role), mappingColumn=password, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,741-:MetadataSourceProcessor property password with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,742-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.UserRole:password] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,742-:building SimpleValue for password 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,742-:Building property password 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,742-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_role), mappingColumn=rolecode, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,742-:MetadataSourceProcessor property rolecode with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,742-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.UserRole:rolecode] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,743-:building SimpleValue for rolecode 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,743-:Building property rolecode 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,743-:Binding entity from annotated class: com.miniproject.entities.PolicyDetails 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,743-:Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,743-:Import with entity name PolicyDetails 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,743-:Bind entity com.miniproject.entities.PolicyDetails on table POLICYDETAILS 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,744-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(POLICYDETAILS), mappingColumn=policyId, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,744-:MetadataSourceProcessor property policyId with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,744-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.PolicyDetails:policyId] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,745-:building SimpleValue for policyId 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,745-:Building property policyId 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,745-:#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(policyId)]), policyId, assigned, , ...) 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,745-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(POLICYDETAILS), mappingColumn=answer, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,745-:MetadataSourceProcessor property answer with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,746-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.PolicyDetails:answer] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,746-:building SimpleValue for answer 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,746-:Building property answer 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,746-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(POLICYDETAILS), mappingColumn=policyNumber, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,746-:MetadataSourceProcessor property policyNumber with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,746-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.PolicyDetails:policyNumber] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,747-:building SimpleValue for policyNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,747-:Building property policyNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,747-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(POLICYDETAILS), mappingColumn=questionId, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,747-:MetadataSourceProcessor property questionId with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,747-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.PolicyDetails:questionId] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,747-:building SimpleValue for questionId 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,747-:Building property questionId 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,747-:Binding entity from annotated class: com.miniproject.entities.Policy 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,748-:Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,748-:Import with entity name Policy 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,748-:Bind entity com.miniproject.entities.Policy on table Policy 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,748-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Policy), mappingColumn=policyNumber, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,749-:MetadataSourceProcessor property policyNumber with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,749-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Policy:policyNumber] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,750-:building SimpleValue for policyNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,750-:Building property policyNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,750-:#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(policyNumber)]), policyNumber, assigned, , ...) 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,750-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Policy), mappingColumn=accountNumber, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,750-:MetadataSourceProcessor property accountNumber with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,750-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Policy:accountNumber] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,750-:building SimpleValue for accountNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,750-:Building property accountNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,750-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Policy), mappingColumn=policyPremium, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,751-:MetadataSourceProcessor property policyPremium with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,751-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Policy:policyPremium] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,751-:building SimpleValue for policyPremium 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,751-:Building property policyPremium 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,752-:Binding entity from annotated class: com.miniproject.entities.Question 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,752-:Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,752-:Import with entity name Question 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,754-:Bind entity com.miniproject.entities.Question on table Question 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,754-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Question), mappingColumn=questionId, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,754-:MetadataSourceProcessor property questionId with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,754-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Question:questionId] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,754-:building SimpleValue for questionId 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,755-:Building property questionId 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,755-:#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(questionId)]), questionId, assigned, , ...) 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,755-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Question), mappingColumn=question, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,755-:MetadataSourceProcessor property question with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,755-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Question:question] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,755-:building SimpleValue for question 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,755-:Building property question 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,755-:Binding entity from annotated class: com.miniproject.entities.Account 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,756-:Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,756-:Import with entity name Account 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,756-:Bind entity com.miniproject.entities.Account on table Account 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,756-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountNumber, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,756-:MetadataSourceProcessor property accountNumber with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,757-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Account:accountNumber] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,757-:building SimpleValue for accountNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,757-:Building property accountNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,757-:#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(accountNumber)]), accountNumber, assigned, , ...) 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,757-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=agentName, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,757-:MetadataSourceProcessor property agentName with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,757-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Account:agentName] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,757-:building SimpleValue for agentName 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,757-:Building property agentName 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,758-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=userName, insertable=true, updatable=true, unique=false} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,758-:MetadataSourceProcessor property userName with lazy=false 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,758-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Account:userName] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,758-:building SimpleValue for userName 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,758-:Building property userName 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,759-:Starting fillSimpleValue for claimNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,759-:Starting fillSimpleValue for accidentCity 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,759-:Starting fillSimpleValue for accidentLocationStreet 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,759-:Starting fillSimpleValue for accidentState 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,759-:Starting fillSimpleValue for accidentZip 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,759-:Starting fillSimpleValue for claimReason 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,759-:Starting fillSimpleValue for claimType 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,759-:Starting fillSimpleValue for policyNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,760-:Starting fillSimpleValue for username 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,760-:Starting fillSimpleValue for password 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,760-:Starting fillSimpleValue for rolecode 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,760-:Starting fillSimpleValue for policyId 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,760-:Starting fillSimpleValue for answer 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,760-:Starting fillSimpleValue for policyNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,760-:Starting fillSimpleValue for questionId 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,760-:Starting fillSimpleValue for policyNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,760-:Starting fillSimpleValue for accountNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,760-:Starting fillSimpleValue for policyPremium 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,760-:Starting fillSimpleValue for questionId 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,760-:Starting fillSimpleValue for question 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,760-:Starting fillSimpleValue for accountNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,760-:Starting fillSimpleValue for agentName 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,760-:Starting fillSimpleValue for userName 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,762-:Forcing column [claimnumber] to be non-null as it is part of the primary key for table [claim] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,762-:Forcing column [username] to be non-null as it is part of the primary key for table [user_role] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,762-:Forcing column [policyid] to be non-null as it is part of the primary key for table [policydetails] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,763-:Forcing column [policynumber] to be non-null as it is part of the primary key for table [policy] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,763-:Forcing column [questionid] to be non-null as it is part of the primary key for table [question] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,763-:Forcing column [accountnumber] to be non-null as it is part of the primary key for table [account] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,819-:Building session factory 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,824-:SessionFactory name : null 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,825-:Automatic flush during beforeCompletion(): enabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,825-:Automatic session close at end of transaction: disabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,825-:Statistics: disabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,825-:Deleted entity synthetic identifier rollback: disabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,825-:Default entity-mode: pojo 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,825-:Check Nullability in Core (should be disabled when Bean Validation is on): enabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,825-:Allow initialization of lazy state outside session : disabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,826-:Using BatchFetchStyle : LEGACY 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,826-:Default batch fetch size: -1 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,826-:Maximum outer join fetch depth: null 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,826-:Default null ordering: NONE 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,826-:Order SQL updates by primary key: disabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,826-:Order SQL inserts for batching: disabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,826-:multi-tenancy strategy : NONE 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,826-:JTA Track by Thread: enabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,826-:Query language substitutions: {} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,826-:Named query checking : enabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,826-:Second-level cache: disabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,826-:Second-level query cache: disabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,826-:Second-level query cache factory: null 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,826-:Second-level cache region prefix: null 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,826-:Optimize second-level cache for minimal puts: disabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,826-:Structured second-level cache entries: disabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,827-:Second-level cache direct-reference entries: disabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,827-:Automatic eviction of collection cache: disabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,827-:JDBC batch size: 15 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,827-:JDBC batch updates for versioned data: disabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,827-:Scrollable result sets: enabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,827-:Wrap result sets: disabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,827-:JDBC3 getGeneratedKeys(): disabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,827-:JDBC result set fetch size: null 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,827-:Connection release mode: AFTER_TRANSACTION 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,827-:Generate SQL with comments: disabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,827-:JPA compliance - query : disabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,827-:JPA compliance - closed-handling : disabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,827-:JPA compliance - lists : disabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,827-:JPA compliance - transactions : disabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,935-:Session factory constructed with filter configurations : {} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,936-:Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=F:\Team-D-InsuranceClaimSystem\target\classes;C:\Users\samyukta\.p2\pool\plugins\org.junit_4.13.0.v20200204-1500.jar;C:\Users\samyukta\.p2\pool\plugins\org.hamcrest.core_1.3.0.v20180420-1519.jar;C:\Users\samyukta\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\samyukta\.m2\repository\org\hibernate\hibernate-core\5.4.21.Final\hibernate-core-5.4.21.Final.jar;C:\Users\samyukta\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\samyukta\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\samyukta\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\samyukta\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\samyukta\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\samyukta\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\samyukta\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\samyukta\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\samyukta\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\samyukta\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\samyukta\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\samyukta\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\samyukta\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\samyukta\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\samyukta\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\samyukta\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\samyukta\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\samyukta\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\samyukta\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.21.Final\hibernate-entitymanager-5.4.21.Final.jar;C:\Users\samyukta\.m2\repository\com\oracle\database\jdbc\ojdbc6\11.2.0.4\ojdbc6-11.2.0.4.jar;C:\Users\samyukta\.m2\repository\com\oracle\database\jdbc\ucp\11.2.0.4\ucp-11.2.0.4.jar;C:\Users\samyukta\.m2\repository\com\oracle\database\security\oraclepki\11.2.0.4\oraclepki-11.2.0.4.jar;C:\Users\samyukta\.m2\repository\com\oracle\database\security\osdt_cert\11.2.0.4\osdt_cert-11.2.0.4.jar;C:\Users\samyukta\.m2\repository\com\oracle\database\security\osdt_core\11.2.0.4\osdt_core-11.2.0.4.jar;C:\Users\samyukta\.m2\repository\com\oracle\database\ha\simplefan\11.2.0.4\simplefan-11.2.0.4.jar;C:\Users\samyukta\.m2\repository\com\oracle\database\ha\ons\11.2.0.4\ons-11.2.0.4.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Calcutta, javax.persistence.jdbc.url=jdbc:oracle:thin:@localhost:1521:XE, javax.persistence.jdbc.user=****, os.name=Windows 10, java.vm.specification.version=1.8, user.country=IN, sun.java.launcher=SUN_STANDARD, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_181\jre\bin, sun.java.command=com.miniproject.pl.Client, sun.cpu.endian=little, user.home=C:\Users\samyukta, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_181\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=oracle.jdbc.driver.OracleDriver, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_181\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_181\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_181-b13, user.name=samyukta, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_181\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:oracle:thin:@localhost:1521:XE, file.encoding=Cp1252, hibernate.ejb.persistenceUnitName=JPA-PU, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\samyukta\AppData\Local\Temp\, java.version=1.8.0_181, user.dir=F:\Team-D-InsuranceClaimSystem, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3e7634b9, java.library.path=C:\Program Files\Java\jdk1.8.0_181\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_181/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_181/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_181/bin/../jre/lib/amd64;C:\oraclexe\app\oracle\product\11.2.0\server\bin;;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\nodejs\;C:\Program Files\Java\jdk1.8.0_181\bin;C:\Program Files\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\samyukta\Anaconda3;C:\Users\samyukta\Anaconda3\Library\mingw-w64\bin;C:\Users\samyukta\Anaconda3\Library\usr\bin;C:\Users\samyukta\Anaconda3\Library\bin;C:\Users\samyukta\Anaconda3\Scripts;C:\Users\samyukta\AppData\Local\Programs\Python\Python37\Scripts\;C:\Users\samyukta\AppData\Local\Programs\Python\Python37\;C:\Users\samyukta\AppData\Local\Microsoft\WindowsApps;C:\Users\samyukta\AppData\Roaming\npm;C:\Users\samyukta\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\samyukta\AppData\Local\GitHubDesktop\bin;C:\Users\samyukta\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.181-b13, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=****, java.class.version=52.0} 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,950-:Skipping JACC integration as it was not enabled 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,952-:Instantiated session factory 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:33,952-:Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46271dd6] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56a4479a] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,010-:Not known whether passed class name [com.miniproject.entities.Claim] is safe 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,011-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Claim 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,042-:Not known whether passed class name [com.miniproject.entities.Claim] is safe 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,042-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Claim 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,503-:Not known whether passed class name [com.miniproject.entities.UserRole] is safe 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,503-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.UserRole 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,503-:Not known whether passed class name [com.miniproject.entities.UserRole] is safe 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,504-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.UserRole 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,534-:Not known whether passed class name [com.miniproject.entities.PolicyDetails] is safe 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,534-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.PolicyDetails 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,535-:Not known whether passed class name [com.miniproject.entities.PolicyDetails] is safe 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,535-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.PolicyDetails 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,557-:Not known whether passed class name [com.miniproject.entities.Policy] is safe 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,557-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Policy 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,558-:Not known whether passed class name [com.miniproject.entities.Policy] is safe 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,558-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Policy 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,586-:Not known whether passed class name [com.miniproject.entities.Question] is safe 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,587-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Question 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,587-:Not known whether passed class name [com.miniproject.entities.Question] is safe 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,587-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Question 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,597-:Not known whether passed class name [com.miniproject.entities.Account] is safe 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,597-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Account 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,597-:Not known whether passed class name [com.miniproject.entities.Account] is safe 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,597-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Account 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,621-:Static SQL for entity: com.miniproject.entities.Claim 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,622-: Version select: select claimNumber from claim where claimNumber =? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,622-: Snapshot select: select claim_.claimNumber, claim_.accidentCity as accidentcity2_1_, claim_.accidentLocationStreet as accidentlocationst3_1_, claim_.accidentState as accidentstate4_1_, claim_.accidentZip as accidentzip5_1_, claim_.claimReason as claimreason6_1_, claim_.claimType as claimtype7_1_, claim_.policyNumber as policynumber8_1_ from claim claim_ where claim_.claimNumber=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,622-: Insert 0: insert into claim (accidentCity, accidentLocationStreet, accidentState, accidentZip, claimReason, claimType, policyNumber, claimNumber) values (?, ?, ?, ?, ?, ?, ?, ?) 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,622-: Update 0: update claim set accidentCity=?, accidentLocationStreet=?, accidentState=?, accidentZip=?, claimReason=?, claimType=?, policyNumber=? where claimNumber=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,622-: Delete 0: delete from claim where claimNumber=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,673-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@595f4da5] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,674-:Visiting attribute path : accidentCity 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,674-:Visiting attribute path : accidentLocationStreet 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,674-:Visiting attribute path : accidentState 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,674-:Visiting attribute path : accidentZip 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,674-:Visiting attribute path : claimReason 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,674-:Visiting attribute path : claimType 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,674-:Visiting attribute path : policyNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,674-:Building LoadPlan... 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,695-:processing queryspace <gen:0> 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,703-:LoadPlan(entity=com.miniproject.entities.Claim)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Claim, querySpaceUid=<gen:0>, path=com.miniproject.entities.Claim)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Claim)
          - SQL table alias mapping - claim0_
          - alias suffix - 0_
          - suffixed key columns - {claimnumber1_1_0_}
 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,706-:Static select for entity com.miniproject.entities.Claim [NONE]: select claim0_.claimNumber as claimnumber1_1_0_, claim0_.accidentCity as accidentcity2_1_0_, claim0_.accidentLocationStreet as accidentlocationst3_1_0_, claim0_.accidentState as accidentstate4_1_0_, claim0_.accidentZip as accidentzip5_1_0_, claim0_.claimReason as claimreason6_1_0_, claim0_.claimType as claimtype7_1_0_, claim0_.policyNumber as policynumber8_1_0_ from claim claim0_ where claim0_.claimNumber=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,706-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d4602a] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,706-:Visiting attribute path : accidentCity 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,706-:Visiting attribute path : accidentLocationStreet 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,706-:Visiting attribute path : accidentState 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,706-:Visiting attribute path : accidentZip 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,706-:Visiting attribute path : claimReason 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,707-:Visiting attribute path : claimType 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,707-:Visiting attribute path : policyNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,707-:Building LoadPlan... 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,707-:processing queryspace <gen:0> 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,707-:LoadPlan(entity=com.miniproject.entities.Claim)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Claim, querySpaceUid=<gen:0>, path=com.miniproject.entities.Claim)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Claim)
          - SQL table alias mapping - claim0_
          - alias suffix - 0_
          - suffixed key columns - {claimnumber1_1_0_}
 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,707-:Static select for entity com.miniproject.entities.Claim [READ]: select claim0_.claimNumber as claimnumber1_1_0_, claim0_.accidentCity as accidentcity2_1_0_, claim0_.accidentLocationStreet as accidentlocationst3_1_0_, claim0_.accidentState as accidentstate4_1_0_, claim0_.accidentZip as accidentzip5_1_0_, claim0_.claimReason as claimreason6_1_0_, claim0_.claimType as claimtype7_1_0_, claim0_.policyNumber as policynumber8_1_0_ from claim claim0_ where claim0_.claimNumber=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,725-:Static select for action ACTION_MERGE on entity com.miniproject.entities.Claim: select claim0_.claimNumber as claimnumber1_1_0_, claim0_.accidentCity as accidentcity2_1_0_, claim0_.accidentLocationStreet as accidentlocationst3_1_0_, claim0_.accidentState as accidentstate4_1_0_, claim0_.accidentZip as accidentzip5_1_0_, claim0_.claimReason as claimreason6_1_0_, claim0_.claimType as claimtype7_1_0_, claim0_.policyNumber as policynumber8_1_0_ from claim claim0_ where claim0_.claimNumber=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,725-:Static select for action ACTION_REFRESH on entity com.miniproject.entities.Claim: select claim0_.claimNumber as claimnumber1_1_0_, claim0_.accidentCity as accidentcity2_1_0_, claim0_.accidentLocationStreet as accidentlocationst3_1_0_, claim0_.accidentState as accidentstate4_1_0_, claim0_.accidentZip as accidentzip5_1_0_, claim0_.claimReason as claimreason6_1_0_, claim0_.claimType as claimtype7_1_0_, claim0_.policyNumber as policynumber8_1_0_ from claim claim0_ where claim0_.claimNumber=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,726-:Static SQL for entity: com.miniproject.entities.UserRole 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,726-: Version select: select username from user_role where username =? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,726-: Snapshot select: select userrole_.username, userrole_.password as password2_5_, userrole_.rolecode as rolecode3_5_ from user_role userrole_ where userrole_.username=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,726-: Insert 0: insert into user_role (password, rolecode, username) values (?, ?, ?) 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,726-: Update 0: update user_role set password=?, rolecode=? where username=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,726-: Delete 0: delete from user_role where username=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,726-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@261d8190] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,726-:Visiting attribute path : password 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,726-:Visiting attribute path : rolecode 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,726-:Building LoadPlan... 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,726-:processing queryspace <gen:0> 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,726-:LoadPlan(entity=com.miniproject.entities.UserRole)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.UserRole, querySpaceUid=<gen:0>, path=com.miniproject.entities.UserRole)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.UserRole)
          - SQL table alias mapping - userrole0_
          - alias suffix - 0_
          - suffixed key columns - {username1_5_0_}
 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,726-:Static select for entity com.miniproject.entities.UserRole [NONE]: select userrole0_.username as username1_5_0_, userrole0_.password as password2_5_0_, userrole0_.rolecode as rolecode3_5_0_ from user_role userrole0_ where userrole0_.username=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,727-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60e9df3c] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,727-:Visiting attribute path : password 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,727-:Visiting attribute path : rolecode 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,727-:Building LoadPlan... 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,727-:processing queryspace <gen:0> 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,727-:LoadPlan(entity=com.miniproject.entities.UserRole)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.UserRole, querySpaceUid=<gen:0>, path=com.miniproject.entities.UserRole)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.UserRole)
          - SQL table alias mapping - userrole0_
          - alias suffix - 0_
          - suffixed key columns - {username1_5_0_}
 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,727-:Static select for entity com.miniproject.entities.UserRole [READ]: select userrole0_.username as username1_5_0_, userrole0_.password as password2_5_0_, userrole0_.rolecode as rolecode3_5_0_ from user_role userrole0_ where userrole0_.username=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,727-:Static select for action ACTION_MERGE on entity com.miniproject.entities.UserRole: select userrole0_.username as username1_5_0_, userrole0_.password as password2_5_0_, userrole0_.rolecode as rolecode3_5_0_ from user_role userrole0_ where userrole0_.username=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,727-:Static select for action ACTION_REFRESH on entity com.miniproject.entities.UserRole: select userrole0_.username as username1_5_0_, userrole0_.password as password2_5_0_, userrole0_.rolecode as rolecode3_5_0_ from user_role userrole0_ where userrole0_.username=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,728-:Static SQL for entity: com.miniproject.entities.PolicyDetails 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,728-: Version select: select policyId from POLICYDETAILS where policyId =? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,728-: Snapshot select: select policydeta_.policyId, policydeta_.answer as answer2_3_, policydeta_.policyNumber as policynumber3_3_, policydeta_.questionId as questionid4_3_ from POLICYDETAILS policydeta_ where policydeta_.policyId=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,728-: Insert 0: insert into POLICYDETAILS (answer, policyNumber, questionId, policyId) values (?, ?, ?, ?) 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,728-: Update 0: update POLICYDETAILS set answer=?, policyNumber=?, questionId=? where policyId=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,728-: Delete 0: delete from POLICYDETAILS where policyId=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,728-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@435ce306] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,728-:Visiting attribute path : answer 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,728-:Visiting attribute path : policyNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,728-:Visiting attribute path : questionId 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,728-:Building LoadPlan... 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,728-:processing queryspace <gen:0> 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,729-:LoadPlan(entity=com.miniproject.entities.PolicyDetails)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.PolicyDetails, querySpaceUid=<gen:0>, path=com.miniproject.entities.PolicyDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.PolicyDetails)
          - SQL table alias mapping - policydeta0_
          - alias suffix - 0_
          - suffixed key columns - {policyid1_3_0_}
 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,729-:Static select for entity com.miniproject.entities.PolicyDetails [NONE]: select policydeta0_.policyId as policyid1_3_0_, policydeta0_.answer as answer2_3_0_, policydeta0_.policyNumber as policynumber3_3_0_, policydeta0_.questionId as questionid4_3_0_ from POLICYDETAILS policydeta0_ where policydeta0_.policyId=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,729-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dc51783] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,729-:Visiting attribute path : answer 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,729-:Visiting attribute path : policyNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,729-:Visiting attribute path : questionId 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,729-:Building LoadPlan... 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,729-:processing queryspace <gen:0> 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,729-:LoadPlan(entity=com.miniproject.entities.PolicyDetails)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.PolicyDetails, querySpaceUid=<gen:0>, path=com.miniproject.entities.PolicyDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.PolicyDetails)
          - SQL table alias mapping - policydeta0_
          - alias suffix - 0_
          - suffixed key columns - {policyid1_3_0_}
 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,730-:Static select for entity com.miniproject.entities.PolicyDetails [READ]: select policydeta0_.policyId as policyid1_3_0_, policydeta0_.answer as answer2_3_0_, policydeta0_.policyNumber as policynumber3_3_0_, policydeta0_.questionId as questionid4_3_0_ from POLICYDETAILS policydeta0_ where policydeta0_.policyId=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,730-:Static select for action ACTION_MERGE on entity com.miniproject.entities.PolicyDetails: select policydeta0_.policyId as policyid1_3_0_, policydeta0_.answer as answer2_3_0_, policydeta0_.policyNumber as policynumber3_3_0_, policydeta0_.questionId as questionid4_3_0_ from POLICYDETAILS policydeta0_ where policydeta0_.policyId=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,730-:Static select for action ACTION_REFRESH on entity com.miniproject.entities.PolicyDetails: select policydeta0_.policyId as policyid1_3_0_, policydeta0_.answer as answer2_3_0_, policydeta0_.policyNumber as policynumber3_3_0_, policydeta0_.questionId as questionid4_3_0_ from POLICYDETAILS policydeta0_ where policydeta0_.policyId=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,730-:Static SQL for entity: com.miniproject.entities.Policy 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,730-: Version select: select policyNumber from Policy where policyNumber =? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,730-: Snapshot select: select policy_.policyNumber, policy_.accountNumber as accountnumber2_2_, policy_.policyPremium as policypremium3_2_ from Policy policy_ where policy_.policyNumber=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,730-: Insert 0: insert into Policy (accountNumber, policyPremium, policyNumber) values (?, ?, ?) 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,730-: Update 0: update Policy set accountNumber=?, policyPremium=? where policyNumber=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,730-: Delete 0: delete from Policy where policyNumber=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,731-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f815e7f] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,731-:Visiting attribute path : accountNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,731-:Visiting attribute path : policyPremium 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,731-:Building LoadPlan... 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,731-:processing queryspace <gen:0> 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,731-:LoadPlan(entity=com.miniproject.entities.Policy)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Policy, querySpaceUid=<gen:0>, path=com.miniproject.entities.Policy)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Policy)
          - SQL table alias mapping - policy0_
          - alias suffix - 0_
          - suffixed key columns - {policynumber1_2_0_}
 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,731-:Static select for entity com.miniproject.entities.Policy [NONE]: select policy0_.policyNumber as policynumber1_2_0_, policy0_.accountNumber as accountnumber2_2_0_, policy0_.policyPremium as policypremium3_2_0_ from Policy policy0_ where policy0_.policyNumber=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,731-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@304b9f1a] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,731-:Visiting attribute path : accountNumber 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,731-:Visiting attribute path : policyPremium 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,731-:Building LoadPlan... 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,732-:processing queryspace <gen:0> 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,732-:LoadPlan(entity=com.miniproject.entities.Policy)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Policy, querySpaceUid=<gen:0>, path=com.miniproject.entities.Policy)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Policy)
          - SQL table alias mapping - policy0_
          - alias suffix - 0_
          - suffixed key columns - {policynumber1_2_0_}
 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,732-:Static select for entity com.miniproject.entities.Policy [READ]: select policy0_.policyNumber as policynumber1_2_0_, policy0_.accountNumber as accountnumber2_2_0_, policy0_.policyPremium as policypremium3_2_0_ from Policy policy0_ where policy0_.policyNumber=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,733-:Static select for action ACTION_MERGE on entity com.miniproject.entities.Policy: select policy0_.policyNumber as policynumber1_2_0_, policy0_.accountNumber as accountnumber2_2_0_, policy0_.policyPremium as policypremium3_2_0_ from Policy policy0_ where policy0_.policyNumber=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,734-:Static select for action ACTION_REFRESH on entity com.miniproject.entities.Policy: select policy0_.policyNumber as policynumber1_2_0_, policy0_.accountNumber as accountnumber2_2_0_, policy0_.policyPremium as policypremium3_2_0_ from Policy policy0_ where policy0_.policyNumber=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,735-:Static SQL for entity: com.miniproject.entities.Question 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,735-: Version select: select questionId from Question where questionId =? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,735-: Snapshot select: select question_.questionId, question_.question as question2_4_ from Question question_ where question_.questionId=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,735-: Insert 0: insert into Question (question, questionId) values (?, ?) 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,736-: Update 0: update Question set question=? where questionId=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,739-: Delete 0: delete from Question where questionId=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,743-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@107e5441] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,743-:Visiting attribute path : question 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,743-:Building LoadPlan... 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,744-:processing queryspace <gen:0> 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,745-:LoadPlan(entity=com.miniproject.entities.Question)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Question, querySpaceUid=<gen:0>, path=com.miniproject.entities.Question)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Question)
          - SQL table alias mapping - question0_
          - alias suffix - 0_
          - suffixed key columns - {questionid1_4_0_}
 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,751-:Static select for entity com.miniproject.entities.Question [NONE]: select question0_.questionId as questionid1_4_0_, question0_.question as question2_4_0_ from Question question0_ where question0_.questionId=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,751-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@263558c9] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,752-:Visiting attribute path : question 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,752-:Building LoadPlan... 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,752-:processing queryspace <gen:0> 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,752-:LoadPlan(entity=com.miniproject.entities.Question)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Question, querySpaceUid=<gen:0>, path=com.miniproject.entities.Question)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Question)
          - SQL table alias mapping - question0_
          - alias suffix - 0_
          - suffixed key columns - {questionid1_4_0_}
 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,752-:Static select for entity com.miniproject.entities.Question [READ]: select question0_.questionId as questionid1_4_0_, question0_.question as question2_4_0_ from Question question0_ where question0_.questionId=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,753-:Static select for action ACTION_MERGE on entity com.miniproject.entities.Question: select question0_.questionId as questionid1_4_0_, question0_.question as question2_4_0_ from Question question0_ where question0_.questionId=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,753-:Static select for action ACTION_REFRESH on entity com.miniproject.entities.Question: select question0_.questionId as questionid1_4_0_, question0_.question as question2_4_0_ from Question question0_ where question0_.questionId=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,753-:Static SQL for entity: com.miniproject.entities.Account 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,753-: Version select: select accountNumber from Account where accountNumber =? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,753-: Snapshot select: select account_.accountNumber, account_.agentName as agentname2_0_, account_.userName as username3_0_ from Account account_ where account_.accountNumber=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,753-: Insert 0: insert into Account (agentName, userName, accountNumber) values (?, ?, ?) 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,753-: Update 0: update Account set agentName=?, userName=? where accountNumber=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,753-: Delete 0: delete from Account where accountNumber=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,753-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7daa61f3] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,754-:Visiting attribute path : agentName 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,754-:Visiting attribute path : userName 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,754-:Building LoadPlan... 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,754-:processing queryspace <gen:0> 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,755-:LoadPlan(entity=com.miniproject.entities.Account)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Account, querySpaceUid=<gen:0>, path=com.miniproject.entities.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountnumber1_0_0_}
 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,756-:Static select for entity com.miniproject.entities.Account [NONE]: select account0_.accountNumber as accountnumber1_0_0_, account0_.agentName as agentname2_0_0_, account0_.userName as username3_0_0_ from Account account0_ where account0_.accountNumber=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,756-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e4ea0bd] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,756-:Visiting attribute path : agentName 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,756-:Visiting attribute path : userName 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,756-:Building LoadPlan... 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,756-:processing queryspace <gen:0> 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,756-:LoadPlan(entity=com.miniproject.entities.Account)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Account, querySpaceUid=<gen:0>, path=com.miniproject.entities.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountnumber1_0_0_}
 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,756-:Static select for entity com.miniproject.entities.Account [READ]: select account0_.accountNumber as accountnumber1_0_0_, account0_.agentName as agentname2_0_0_, account0_.userName as username3_0_0_ from Account account0_ where account0_.accountNumber=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,757-:Static select for action ACTION_MERGE on entity com.miniproject.entities.Account: select account0_.accountNumber as accountnumber1_0_0_, account0_.agentName as agentname2_0_0_, account0_.userName as username3_0_0_ from Account account0_ where account0_.accountNumber=? 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,757-:Static select for action ACTION_REFRESH on entity com.miniproject.entities.Account: select account0_.accountNumber as accountnumber1_0_0_, account0_.agentName as agentname2_0_0_, account0_.userName as username3_0_0_ from Account account0_ where account0_.accountNumber=? 
2021-05-11 11:46 INFO 2021-05-11 23:46:34,833-:HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6e28bb87] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,998-:No alter strings for table : Account 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,998-:No alter strings for table : claim 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,998-:No alter strings for table : Policy 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,998-:No alter strings for table : POLICYDETAILS 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,998-:No alter strings for table : Question 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,998-:No alter strings for table : user_role 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:34,999-:No JtaPlatform was specified, checking resolver 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:35,000-:No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:35,012-:Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
2021-05-11 11:46 INFO 2021-05-11 23:46:35,012-:HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:35,014-:Checking 0 named HQL queries 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:35,014-:Checking 0 named SQL queries 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:35,029-:Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1d4664d7 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:35,031-:Registering SessionFactory: 6cafb546-5e3b-432c-b8b8-00f4aa97e39c (<unnamed>) 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:35,031-:Not binding SessionFactory to JNDI, no JNDI name configured 
2021-05-11 11:46 DEBUG 2021-05-11 23:46:35,150-:Statistics initialized [enabled=false] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:03,252-:Connection pool now considered primed; min-size will be maintained 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:04,845-:QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4455f57d 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:04,881-:parse() - HQL: select userrole from com.miniproject.entities.UserRole userrole where userrole.rolecode=:role 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:04,889-:throwQueryException() : no errors 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:04,903-:--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'miniproject'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'UserRole'
    |  |     \-[ALIAS] Node: 'userrole'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'userrole'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'userrole'
          |  \-[IDENT] Node: 'rolecode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'role'
 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:04,933-:select << begin [level=1, statement=select] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:04,951-:FromClause{level=1} : com.miniproject.entities.UserRole (userrole) -> userrole0_ 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:04,951-:Resolved : userrole -> userrole0_.username 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:04,954-:Resolved : userrole -> userrole0_.username 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:04,955-:getDataType() : rolecode -> org.hibernate.type.StringType@1e802ef9 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:04,956-:Resolved : userrole.rolecode -> userrole0_.rolecode 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:04,960-:select : finishing up [level=1, statement=select] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:04,961-:processQuery() :  ( SELECT ( {select clause} userrole0_.username ) ( FromClause{level=1} user_role userrole0_ ) ( where ( = ( userrole0_.rolecode userrole0_.username rolecode ) ? ) ) ) 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:04,977-:Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity UserRole): [user_role]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.miniproject.entities.UserRole)
    |  | originalText: userrole
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.miniproject.entities.UserRole)
          | path: userrole.rolecode
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.miniproject.entities.UserRole)
          |  | originalText: userrole
          |  \-IdentNode
          |    persister: null
          |    originalText: rolecode
          \-ParameterNode
 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:04,982-:Using FROM fragment [user_role userrole0_] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:04,982-:select >> end [level=1, statement=select] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:04,982-:--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'userrole0_.username as username1_5_' {alias=userrole, className=com.miniproject.entities.UserRole, tableAlias=userrole0_}
    |  \-[SQL_TOKEN] SqlFragment: 'userrole0_.password as password2_5_, userrole0_.rolecode as rolecode3_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[userrole], fromElementByTableAlias=[userrole0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_role userrole0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=userrole,role=null,tableName=user_role,tableAlias=userrole0_,origin=null,columns={,className=com.miniproject.entities.UserRole}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'userrole0_.rolecode' {propertyName=rolecode,dereferenceType=PRIMITIVE,getPropertyPath=rolecode,path=userrole.rolecode,tableAlias=userrole0_,className=com.miniproject.entities.UserRole,classAlias=userrole}
          |  +-[ALIAS_REF] IdentNode: 'userrole0_.username' {alias=userrole, className=com.miniproject.entities.UserRole, tableAlias=userrole0_}
          |  \-[IDENT] IdentNode: 'rolecode' {originalText=rolecode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=role, expectedType=org.hibernate.type.StringType@1e802ef9}
 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:04,982-:throwQueryException() : no errors 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:04,989-:HQL: select userrole from com.miniproject.entities.UserRole userrole where userrole.rolecode=:role 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:04,990-:SQL: select userrole0_.username as username1_5_, userrole0_.password as password2_5_, userrole0_.rolecode as rolecode3_5_ from user_role userrole0_ where userrole0_.rolecode=? 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:04,990-:throwQueryException() : no errors 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,003-:select userrole0_.username as username1_5_, userrole0_.password as password2_5_, userrole0_.rolecode as rolecode3_5_ from user_role userrole0_ where userrole0_.rolecode=? 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,006-:Result set row: 0 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,018-:Result row: EntityKey[com.miniproject.entities.UserRole#Joe] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,027-:Result set row: 1 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,027-:Result row: EntityKey[com.miniproject.entities.UserRole#Sejal] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,028-:Result set row: 2 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,028-:Result row: EntityKey[com.miniproject.entities.UserRole#Sachin] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,030-:Resolving attributes for [com.miniproject.entities.UserRole#Joe] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,031-:Processing attribute `password` : value = Joe123 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,032-:Attribute (`password`)  - enhanced for lazy-loading? - false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,032-:Processing attribute `rolecode` : value = Agent 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,032-:Attribute (`rolecode`)  - enhanced for lazy-loading? - false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,033-:Done materializing entity [com.miniproject.entities.UserRole#Joe] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,033-:Resolving attributes for [com.miniproject.entities.UserRole#Sejal] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,033-:Processing attribute `password` : value = Sejal123 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,033-:Attribute (`password`)  - enhanced for lazy-loading? - false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,033-:Processing attribute `rolecode` : value = Agent 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,033-:Attribute (`rolecode`)  - enhanced for lazy-loading? - false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,033-:Done materializing entity [com.miniproject.entities.UserRole#Sejal] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,033-:Resolving attributes for [com.miniproject.entities.UserRole#Sachin] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,033-:Processing attribute `password` : value = Sachin123 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,033-:Attribute (`password`)  - enhanced for lazy-loading? - false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,033-:Processing attribute `rolecode` : value = Agent 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,033-:Attribute (`rolecode`)  - enhanced for lazy-loading? - false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,033-:Done materializing entity [com.miniproject.entities.UserRole#Sachin] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:05,037-:Initiating JDBC connection release from afterTransaction 
2021-05-11 11:47 INFO 2021-05-11 23:47:05,037-:Joe added 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,251-:parse() - HQL: select account from com.miniproject.entities.Account account where account.agentName = :agentName 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,253-:throwQueryException() : no errors 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,255-:--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'miniproject'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'Account'
    |  |     \-[ALIAS] Node: 'account'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'account'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'account'
          |  \-[IDENT] Node: 'agentName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'agentName'
 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,255-:select << begin [level=1, statement=select] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,256-:FromClause{level=1} : com.miniproject.entities.Account (account) -> account0_ 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,256-:Resolved : account -> account0_.accountNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,257-:Resolved : account -> account0_.accountNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,257-:getDataType() : agentName -> org.hibernate.type.StringType@1e802ef9 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,257-:Resolved : account.agentName -> account0_.agentName 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,258-:select : finishing up [level=1, statement=select] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,258-:processQuery() :  ( SELECT ( {select clause} account0_.accountNumber ) ( FromClause{level=1} Account account0_ ) ( where ( = ( account0_.agentName account0_.accountNumber agentName ) ? ) ) ) 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,260-:Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Account): [Account]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.miniproject.entities.Account)
    |  | originalText: account
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.miniproject.entities.Account)
          | path: account.agentName
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.miniproject.entities.Account)
          |  | originalText: account
          |  \-IdentNode
          |    persister: null
          |    originalText: agentName
          \-ParameterNode
 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,260-:Using FROM fragment [Account account0_] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,260-:select >> end [level=1, statement=select] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,261-:--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'account0_.accountNumber as accountnumber1_0_' {alias=account, className=com.miniproject.entities.Account, tableAlias=account0_}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.agentName as agentname2_0_, account0_.userName as username3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[account], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=account,role=null,tableName=Account,tableAlias=account0_,origin=null,columns={,className=com.miniproject.entities.Account}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.agentName' {propertyName=agentName,dereferenceType=PRIMITIVE,getPropertyPath=agentName,path=account.agentName,tableAlias=account0_,className=com.miniproject.entities.Account,classAlias=account}
          |  +-[ALIAS_REF] IdentNode: 'account0_.accountNumber' {alias=account, className=com.miniproject.entities.Account, tableAlias=account0_}
          |  \-[IDENT] IdentNode: 'agentName' {originalText=agentName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=agentName, expectedType=org.hibernate.type.StringType@1e802ef9}
 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,261-:throwQueryException() : no errors 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,261-:HQL: select account from com.miniproject.entities.Account account where account.agentName = :agentName 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,261-:SQL: select account0_.accountNumber as accountnumber1_0_, account0_.agentName as agentname2_0_, account0_.userName as username3_0_ from Account account0_ where account0_.agentName=? 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,261-:throwQueryException() : no errors 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,262-:select account0_.accountNumber as accountnumber1_0_, account0_.agentName as agentname2_0_, account0_.userName as username3_0_ from Account account0_ where account0_.agentName=? 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,263-:Result set row: 0 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,264-:Result row: EntityKey[com.miniproject.entities.Account#101] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,266-:Result set row: 1 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,266-:Result row: EntityKey[com.miniproject.entities.Account#102] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,266-:Result set row: 2 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,266-:Result row: EntityKey[com.miniproject.entities.Account#103] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,266-:Resolving attributes for [com.miniproject.entities.Account#101] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,266-:Processing attribute `agentName` : value = Joe 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,267-:Attribute (`agentName`)  - enhanced for lazy-loading? - false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,267-:Processing attribute `userName` : value = Mark 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,267-:Attribute (`userName`)  - enhanced for lazy-loading? - false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,268-:Done materializing entity [com.miniproject.entities.Account#101] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,268-:Resolving attributes for [com.miniproject.entities.Account#102] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,268-:Processing attribute `agentName` : value = Joe 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,268-:Attribute (`agentName`)  - enhanced for lazy-loading? - false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,268-:Processing attribute `userName` : value = Jack 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,268-:Attribute (`userName`)  - enhanced for lazy-loading? - false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,268-:Done materializing entity [com.miniproject.entities.Account#102] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,268-:Resolving attributes for [com.miniproject.entities.Account#103] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,268-:Processing attribute `agentName` : value = Joe 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,268-:Attribute (`agentName`)  - enhanced for lazy-loading? - false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,268-:Processing attribute `userName` : value = Rose 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,268-:Attribute (`userName`)  - enhanced for lazy-loading? - false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,268-:Done materializing entity [com.miniproject.entities.Account#103] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:06,268-:Initiating JDBC connection release from afterTransaction 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,700-:parse() - HQL: select account from com.miniproject.entities.Account account where account.userName=:usn 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,702-:throwQueryException() : no errors 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,702-:--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'miniproject'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'Account'
    |  |     \-[ALIAS] Node: 'account'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'account'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'account'
          |  \-[IDENT] Node: 'userName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'usn'
 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,703-:select << begin [level=1, statement=select] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,703-:FromClause{level=1} : com.miniproject.entities.Account (account) -> account0_ 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,704-:Resolved : account -> account0_.accountNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,704-:Resolved : account -> account0_.accountNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,704-:getDataType() : userName -> org.hibernate.type.StringType@1e802ef9 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,704-:Resolved : account.userName -> account0_.userName 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,704-:select : finishing up [level=1, statement=select] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,704-:processQuery() :  ( SELECT ( {select clause} account0_.accountNumber ) ( FromClause{level=1} Account account0_ ) ( where ( = ( account0_.userName account0_.accountNumber userName ) ? ) ) ) 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,705-:Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Account): [Account]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.miniproject.entities.Account)
    |  | originalText: account
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.miniproject.entities.Account)
          | path: account.userName
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.miniproject.entities.Account)
          |  | originalText: account
          |  \-IdentNode
          |    persister: null
          |    originalText: userName
          \-ParameterNode
 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,705-:Using FROM fragment [Account account0_] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,705-:select >> end [level=1, statement=select] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,706-:--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'account0_.accountNumber as accountnumber1_0_' {alias=account, className=com.miniproject.entities.Account, tableAlias=account0_}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.agentName as agentname2_0_, account0_.userName as username3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[account], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=account,role=null,tableName=Account,tableAlias=account0_,origin=null,columns={,className=com.miniproject.entities.Account}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.userName' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path=account.userName,tableAlias=account0_,className=com.miniproject.entities.Account,classAlias=account}
          |  +-[ALIAS_REF] IdentNode: 'account0_.accountNumber' {alias=account, className=com.miniproject.entities.Account, tableAlias=account0_}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=usn, expectedType=org.hibernate.type.StringType@1e802ef9}
 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,706-:throwQueryException() : no errors 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,706-:HQL: select account from com.miniproject.entities.Account account where account.userName=:usn 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,706-:SQL: select account0_.accountNumber as accountnumber1_0_, account0_.agentName as agentname2_0_, account0_.userName as username3_0_ from Account account0_ where account0_.userName=? 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,706-:throwQueryException() : no errors 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,707-:select account0_.accountNumber as accountnumber1_0_, account0_.agentName as agentname2_0_, account0_.userName as username3_0_ from Account account0_ where account0_.userName=? 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,708-:Result set row: 0 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,708-:Result row: EntityKey[com.miniproject.entities.Account#101] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,708-:Initiating JDBC connection release from afterTransaction 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,709-:select account0_.accountNumber as accountnumber1_0_, account0_.agentName as agentname2_0_, account0_.userName as username3_0_ from Account account0_ where account0_.userName=? 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,709-:Result set row: 0 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,710-:Result row: EntityKey[com.miniproject.entities.Account#101] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,710-:Initiating JDBC connection release from afterTransaction 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,711-:parse() - HQL: select policy from com.miniproject.entities.Policy policy where policy.accountNumber=:accountnumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,711-:throwQueryException() : no errors 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,712-:--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'miniproject'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'Policy'
    |  |     \-[ALIAS] Node: 'policy'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'policy'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'policy'
          |  \-[IDENT] Node: 'accountNumber'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'accountnumber'
 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,712-:select << begin [level=1, statement=select] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,714-:FromClause{level=1} : com.miniproject.entities.Policy (policy) -> policy0_ 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,714-:Resolved : policy -> policy0_.policyNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,714-:Resolved : policy -> policy0_.policyNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,714-:getDataType() : accountNumber -> org.hibernate.type.IntegerType@1a04f701 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,714-:Resolved : policy.accountNumber -> policy0_.accountNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,714-:select : finishing up [level=1, statement=select] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,714-:processQuery() :  ( SELECT ( {select clause} policy0_.policyNumber ) ( FromClause{level=1} Policy policy0_ ) ( where ( = ( policy0_.accountNumber policy0_.policyNumber accountNumber ) ? ) ) ) 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,714-:Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Policy): [Policy]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.miniproject.entities.Policy)
    |  | originalText: policy
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.miniproject.entities.Policy)
          | path: policy.accountNumber
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.miniproject.entities.Policy)
          |  | originalText: policy
          |  \-IdentNode
          |    persister: null
          |    originalText: accountNumber
          \-ParameterNode
 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,714-:Using FROM fragment [Policy policy0_] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,714-:select >> end [level=1, statement=select] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,714-:--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Policy)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'policy0_.policyNumber as policynumber1_2_' {alias=policy, className=com.miniproject.entities.Policy, tableAlias=policy0_}
    |  \-[SQL_TOKEN] SqlFragment: 'policy0_.accountNumber as accountnumber2_2_, policy0_.policyPremium as policypremium3_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[policy], fromElementByTableAlias=[policy0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Policy policy0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=policy,role=null,tableName=Policy,tableAlias=policy0_,origin=null,columns={,className=com.miniproject.entities.Policy}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'policy0_.accountNumber' {propertyName=accountNumber,dereferenceType=PRIMITIVE,getPropertyPath=accountNumber,path=policy.accountNumber,tableAlias=policy0_,className=com.miniproject.entities.Policy,classAlias=policy}
          |  +-[ALIAS_REF] IdentNode: 'policy0_.policyNumber' {alias=policy, className=com.miniproject.entities.Policy, tableAlias=policy0_}
          |  \-[IDENT] IdentNode: 'accountNumber' {originalText=accountNumber}
          \-[NAMED_PARAM] ParameterNode: '?' {name=accountnumber, expectedType=org.hibernate.type.IntegerType@1a04f701}
 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,714-:throwQueryException() : no errors 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,714-:HQL: select policy from com.miniproject.entities.Policy policy where policy.accountNumber=:accountnumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,714-:SQL: select policy0_.policyNumber as policynumber1_2_, policy0_.accountNumber as accountnumber2_2_, policy0_.policyPremium as policypremium3_2_ from Policy policy0_ where policy0_.accountNumber=? 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,714-:throwQueryException() : no errors 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,715-:select policy0_.policyNumber as policynumber1_2_, policy0_.accountNumber as accountnumber2_2_, policy0_.policyPremium as policypremium3_2_ from Policy policy0_ where policy0_.accountNumber=? 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,717-:Result set row: 0 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,717-:Result row: EntityKey[com.miniproject.entities.Policy#1001] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,724-:Resolving attributes for [com.miniproject.entities.Policy#1001] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,724-:Processing attribute `accountNumber` : value = 101 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,724-:Attribute (`accountNumber`)  - enhanced for lazy-loading? - false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,724-:Processing attribute `policyPremium` : value = 5000 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,724-:Attribute (`policyPremium`)  - enhanced for lazy-loading? - false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,724-:Done materializing entity [com.miniproject.entities.Policy#1001] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,724-:Initiating JDBC connection release from afterTransaction 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,725-:parse() - HQL: select claim from com.miniproject.entities.Claim claim where claim.policyNumber = :pnum 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,725-:throwQueryException() : no errors 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,725-:--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'miniproject'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'Claim'
    |  |     \-[ALIAS] Node: 'claim'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'claim'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'claim'
          |  \-[IDENT] Node: 'policyNumber'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'pnum'
 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,725-:select << begin [level=1, statement=select] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,726-:FromClause{level=1} : com.miniproject.entities.Claim (claim) -> claim0_ 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,726-:Resolved : claim -> claim0_.claimNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,726-:Resolved : claim -> claim0_.claimNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,726-:getDataType() : policyNumber -> org.hibernate.type.IntegerType@1a04f701 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,726-:Resolved : claim.policyNumber -> claim0_.policyNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,726-:select : finishing up [level=1, statement=select] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,726-:processQuery() :  ( SELECT ( {select clause} claim0_.claimNumber ) ( FromClause{level=1} claim claim0_ ) ( where ( = ( claim0_.policyNumber claim0_.claimNumber policyNumber ) ? ) ) ) 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,727-:Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Claim): [claim]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.miniproject.entities.Claim)
    |  | originalText: claim
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.miniproject.entities.Claim)
          | path: claim.policyNumber
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.miniproject.entities.Claim)
          |  | originalText: claim
          |  \-IdentNode
          |    persister: null
          |    originalText: policyNumber
          \-ParameterNode
 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,727-:Using FROM fragment [claim claim0_] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,727-:select >> end [level=1, statement=select] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,727-:--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (claim)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'claim0_.claimNumber as claimnumber1_1_' {alias=claim, className=com.miniproject.entities.Claim, tableAlias=claim0_}
    |  \-[SQL_TOKEN] SqlFragment: 'claim0_.accidentCity as accidentcity2_1_, claim0_.accidentLocationStreet as accidentlocationst3_1_, claim0_.accidentState as accidentstate4_1_, claim0_.accidentZip as accidentzip5_1_, claim0_.claimReason as claimreason6_1_, claim0_.claimType as claimtype7_1_, claim0_.policyNumber as policynumber8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[claim], fromElementByTableAlias=[claim0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'claim claim0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=claim,role=null,tableName=claim,tableAlias=claim0_,origin=null,columns={,className=com.miniproject.entities.Claim}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'claim0_.policyNumber' {propertyName=policyNumber,dereferenceType=PRIMITIVE,getPropertyPath=policyNumber,path=claim.policyNumber,tableAlias=claim0_,className=com.miniproject.entities.Claim,classAlias=claim}
          |  +-[ALIAS_REF] IdentNode: 'claim0_.claimNumber' {alias=claim, className=com.miniproject.entities.Claim, tableAlias=claim0_}
          |  \-[IDENT] IdentNode: 'policyNumber' {originalText=policyNumber}
          \-[NAMED_PARAM] ParameterNode: '?' {name=pnum, expectedType=org.hibernate.type.IntegerType@1a04f701}
 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,727-:throwQueryException() : no errors 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,727-:HQL: select claim from com.miniproject.entities.Claim claim where claim.policyNumber = :pnum 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,727-:SQL: select claim0_.claimNumber as claimnumber1_1_, claim0_.accidentCity as accidentcity2_1_, claim0_.accidentLocationStreet as accidentlocationst3_1_, claim0_.accidentState as accidentstate4_1_, claim0_.accidentZip as accidentzip5_1_, claim0_.claimReason as claimreason6_1_, claim0_.claimType as claimtype7_1_, claim0_.policyNumber as policynumber8_1_ from claim claim0_ where claim0_.policyNumber=? 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,727-:throwQueryException() : no errors 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,727-:select claim0_.claimNumber as claimnumber1_1_, claim0_.accidentCity as accidentcity2_1_, claim0_.accidentLocationStreet as accidentlocationst3_1_, claim0_.accidentState as accidentstate4_1_, claim0_.accidentZip as accidentzip5_1_, claim0_.claimReason as claimreason6_1_, claim0_.claimType as claimtype7_1_, claim0_.policyNumber as policynumber8_1_ from claim claim0_ where claim0_.policyNumber=? 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:08,731-:Initiating JDBC connection release from afterTransaction 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:40,283-:On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:40,283-:begin 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:40,291-:Generated identifier: 802, using strategy: org.hibernate.id.Assigned 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:40,303-:committing 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:40,304-:Processing flush-time cascades 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:40,305-:Dirty checking collections 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:40,314-:Flushed: 1 insertions, 0 updates, 0 deletions to 8 objects 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:40,314-:Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:40,318-:Listing entities: 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:40,318-:com.miniproject.entities.Account{agentName=Joe, accountNumber=101, userName=Mark} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:40,318-:com.miniproject.entities.Policy{policyPremium=5000, policyNumber=1001, accountNumber=101} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:40,318-:com.miniproject.entities.UserRole{rolecode=Agent, password=Sachin123, username=Sachin} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:40,318-:com.miniproject.entities.Account{agentName=Joe, accountNumber=103, userName=Rose} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:40,318-:com.miniproject.entities.Account{agentName=Joe, accountNumber=102, userName=Jack} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:40,318-:com.miniproject.entities.Claim{accidentState=Telangana, accidentCity=Hyderabad, claimType=Life, claimReason=DEath, policyNumber=1001, accidentLocationStreet=Koti, claimNumber=802, accidentZip=500039} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:40,319-:com.miniproject.entities.UserRole{rolecode=Agent, password=Joe123, username=Joe} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:40,319-:com.miniproject.entities.UserRole{rolecode=Agent, password=Sejal123, username=Sejal} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:40,326-:insert into claim (accidentCity, accidentLocationStreet, accidentState, accidentZip, claimReason, claimType, policyNumber, claimNumber) values (?, ?, ?, ?, ?, ?, ?, ?) 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:40,414-:Initiating JDBC connection release from afterTransaction 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:40,414-:Initiating JDBC connection release from afterTransaction 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:40,414-:Claim created :1001 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:57,146-:Logging Provider: org.jboss.logging.Log4jLoggerProvider 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:57,318-:Located and parsed 1 persistence units; checking each 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:57,318-:Checking persistence-unit [name=JPA-PU, explicit-provider=org.hibernate.ejb.HibernatePersistence] against incoming persistence unit name [JPA-PU] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:57,319-:Persistence-unit [JPA-PU] requested PersistenceProvider [org.hibernate.ejb.HibernatePersistence] 
2021-05-11 11:47 WARN 2021-05-11 23:47:57,319-:HHH015016: Encountered a deprecated javax.persistence.spi.PersistenceProvider [org.hibernate.ejb.HibernatePersistence]; [org.hibernate.jpa.HibernatePersistenceProvider] will be used instead. 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:57,331-:PersistenceUnitInfo [
	name: JPA-PU
	persistence provider classname: org.hibernate.ejb.HibernatePersistence
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/F:/Team-D-InsuranceClaimSystem/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: oracle.jdbc.driver.OracleDriver
		javax.persistence.jdbc.password: PASSWORD
		javax.persistence.jdbc.url: jdbc:oracle:thin:@localhost:1521:XE
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: TEAMD] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:57,366-:Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator]. 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:57,368-:Adding Integrator [org.hibernate.secure.spi.JaccIntegrator]. 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:57,382-:Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator]. 
2021-05-11 11:47 INFO 2021-05-11 23:47:57,601-:HHH000412: Hibernate ORM core version 5.4.21.Final 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:57,604-:HHH000206: hibernate.properties not found 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:57,911-:Overriding existing service binding [org.hibernate.secure.spi.JaccService] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:57,929-:Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:57,931-:Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory 
2021-05-11 11:47 INFO 2021-05-11 23:47:57,967-:HCANN000001: Hibernate Commons Annotations {5.1.0.Final} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,393-:Adding type registration boolean -> org.hibernate.type.BooleanType@4278a03f 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,394-:Adding type registration boolean -> org.hibernate.type.BooleanType@4278a03f 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,394-:Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4278a03f 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,396-:Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@124c278f 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,397-:Adding type registration true_false -> org.hibernate.type.TrueFalseType@1fe20588 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,398-:Adding type registration yes_no -> org.hibernate.type.YesNoType@2ddc8ecb 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,399-:Adding type registration byte -> org.hibernate.type.ByteType@309e345f 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,399-:Adding type registration byte -> org.hibernate.type.ByteType@309e345f 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,399-:Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@309e345f 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,401-:Adding type registration character -> org.hibernate.type.CharacterType@25d250c6 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,401-:Adding type registration char -> org.hibernate.type.CharacterType@25d250c6 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,401-:Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@25d250c6 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,402-:Adding type registration short -> org.hibernate.type.ShortType@318ba8c8 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,402-:Adding type registration short -> org.hibernate.type.ShortType@318ba8c8 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,402-:Adding type registration java.lang.Short -> org.hibernate.type.ShortType@318ba8c8 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,404-:Adding type registration integer -> org.hibernate.type.IntegerType@1a04f701 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,404-:Adding type registration int -> org.hibernate.type.IntegerType@1a04f701 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,404-:Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1a04f701 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,405-:Adding type registration long -> org.hibernate.type.LongType@56de5251 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,405-:Adding type registration long -> org.hibernate.type.LongType@56de5251 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,405-:Adding type registration java.lang.Long -> org.hibernate.type.LongType@56de5251 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,406-:Adding type registration float -> org.hibernate.type.FloatType@71b1176b 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,406-:Adding type registration float -> org.hibernate.type.FloatType@71b1176b 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,406-:Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71b1176b 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,407-:Adding type registration double -> org.hibernate.type.DoubleType@5dd6264 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,407-:Adding type registration double -> org.hibernate.type.DoubleType@5dd6264 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,408-:Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5dd6264 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,409-:Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7ee955a8 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,410-:Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7ee955a8 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,411-:Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d2a209c 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,426-:Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d2a209c 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,428-:Adding type registration string -> org.hibernate.type.StringType@1e802ef9 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,428-:Adding type registration java.lang.String -> org.hibernate.type.StringType@1e802ef9 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,429-:Adding type registration nstring -> org.hibernate.type.StringNVarcharType@670002 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,430-:Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@56528192 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,431-:Adding type registration url -> org.hibernate.type.UrlType@1f3f4916 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,431-:Adding type registration java.net.URL -> org.hibernate.type.UrlType@1f3f4916 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,432-:Adding type registration Duration -> org.hibernate.type.DurationType@20d28811 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,432-:Adding type registration java.time.Duration -> org.hibernate.type.DurationType@20d28811 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,448-:Adding type registration Instant -> org.hibernate.type.InstantType@6af93788 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,448-:Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6af93788 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,450-:Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1c93084c 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,450-:Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1c93084c 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,451-:Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5223e5ee 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,452-:Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5223e5ee 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,453-:Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1d119efb 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,453-:Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1d119efb 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,456-:Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@49b0b76 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,456-:Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@49b0b76 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,459-:Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@be64738 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,459-:Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@be64738 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,467-:Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@72a7c7e0 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,467-:Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@72a7c7e0 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,470-:Adding type registration date -> org.hibernate.type.DateType@6e4784bc 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,471-:Adding type registration java.sql.Date -> org.hibernate.type.DateType@6e4784bc 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,474-:Adding type registration time -> org.hibernate.type.TimeType@10e41621 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,474-:Adding type registration java.sql.Time -> org.hibernate.type.TimeType@10e41621 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,476-:Adding type registration timestamp -> org.hibernate.type.TimestampType@a9cd3b1 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,476-:Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@a9cd3b1 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,476-:Adding type registration java.util.Date -> org.hibernate.type.TimestampType@a9cd3b1 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,479-:Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9225652 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,480-:Adding type registration calendar -> org.hibernate.type.CalendarType@63355449 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,481-:Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@63355449 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,481-:Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@63355449 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,482-:Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@48ae9b55 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,484-:Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@31d7b7bf 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,487-:Adding type registration locale -> org.hibernate.type.LocaleType@7a69b07 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,487-:Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7a69b07 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,489-:Adding type registration currency -> org.hibernate.type.CurrencyType@1817d444 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,489-:Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1817d444 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,490-:Adding type registration timezone -> org.hibernate.type.TimeZoneType@3911c2a7 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,490-:Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3911c2a7 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,492-:Adding type registration class -> org.hibernate.type.ClassType@15c43bd9 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,492-:Adding type registration java.lang.Class -> org.hibernate.type.ClassType@15c43bd9 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,492-:Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@39529185 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,492-:Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@39529185 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,493-:Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@31c88ec8 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,495-:Adding type registration binary -> org.hibernate.type.BinaryType@7ed7259e 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,495-:Adding type registration byte[] -> org.hibernate.type.BinaryType@7ed7259e 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,495-:Adding type registration [B -> org.hibernate.type.BinaryType@7ed7259e 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,496-:Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c407114 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,497-:Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c407114 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,497-:Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c407114 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,498-:Adding type registration row_version -> org.hibernate.type.RowVersionType@619713e5 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,499-:Adding type registration image -> org.hibernate.type.ImageType@7722c3c3 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,500-:Adding type registration characters -> org.hibernate.type.CharArrayType@50eac852 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,500-:Adding type registration char[] -> org.hibernate.type.CharArrayType@50eac852 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,501-:Adding type registration [C -> org.hibernate.type.CharArrayType@50eac852 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,503-:Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a192cfe 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,503-:Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a192cfe 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,503-:Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a192cfe 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,504-:Adding type registration text -> org.hibernate.type.TextType@20deea7f 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,504-:Adding type registration ntext -> org.hibernate.type.NTextType@7714e963 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,508-:Adding type registration blob -> org.hibernate.type.BlobType@192d43ce 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,508-:Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@192d43ce 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,508-:Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6973b51b 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,511-:Adding type registration clob -> org.hibernate.type.ClobType@6e171cd7 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,511-:Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6e171cd7 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,513-:Adding type registration nclob -> org.hibernate.type.NClobType@384ad17b 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,513-:Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@384ad17b 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,514-:Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7334aada 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,514-:Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@42e99e4a 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,516-:Adding type registration serializable -> org.hibernate.type.SerializableType@15ff3e9e 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,527-:Adding type registration object -> org.hibernate.type.ObjectType@661972b0 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,528-:Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@661972b0 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,528-:Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44ebcd03 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,528-:Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@694abbdc 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,528-:Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2e005c4b 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,528-:Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4567f35d 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,528-:Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5ffead27 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,528-:Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6356695f 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,528-:Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4f18837a 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,528-:Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@359f7cdf 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,553-:Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@131774fe] into BootstrapContext; was [null] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,553-:Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@158d2680] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@77847718] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,629-:Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,630-:ClassLoaderAccessImpl#injectTempClassLoader(null) [was null] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,652-:Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,653-:Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,654-:Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,654-:Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,654-:Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,655-:Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,656-:Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,658-:Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,658-:Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,659-:Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,659-:Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,660-:Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,660-:Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,661-:Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator] 
2021-05-11 11:47 WARN 2021-05-11 23:47:58,667-:HHH10001002: Using Hibernate built-in connection pool (not for production use!) 
2021-05-11 11:47 INFO 2021-05-11 23:47:58,897-:HHH10001005: using driver [oracle.jdbc.driver.OracleDriver] at URL [jdbc:oracle:thin:@localhost:1521:XE] 
2021-05-11 11:47 INFO 2021-05-11 23:47:58,897-:HHH10001001: Connection properties: {user=TEAMD, password=PASSWORD} 
2021-05-11 11:47 INFO 2021-05-11 23:47:58,898-:HHH10001003: Autocommit mode: false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:58,902-:Initializing Connection pool with 1 Connections 
2021-05-11 11:47 INFO 2021-05-11 23:47:58,903-:HHH000115: Hibernate connection pool size: 20 (min=1) 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,208-:Database ->
       name : Oracle
    version : Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production
      major : 11
      minor : 2 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,209-:Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.4.0
      major : 11
      minor : 2 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,209-:JDBC version : 11.2 
2021-05-11 11:47 INFO 2021-05-11 23:47:59,263-:HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,434-:Unable to use Java 1.7 Connection#getSchema 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,492-:Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,506-:Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46271dd6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11bb571c] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,583-:Binding entity from annotated class: com.miniproject.entities.Claim 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,613-:Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,618-:Import with entity name Claim 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,622-:Bind entity com.miniproject.entities.Claim on table claim 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,642-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=claimNumber, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,651-:MetadataSourceProcessor property claimNumber with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,656-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:claimNumber] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,662-:building SimpleValue for claimNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,666-:Building property claimNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,671-:#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(claimNumber)]), claimNumber, assigned, , ...) 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,673-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=accidentCity, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,673-:MetadataSourceProcessor property accidentCity with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,673-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:accidentCity] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,673-:building SimpleValue for accidentCity 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,673-:Building property accidentCity 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,674-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=accidentLocationStreet, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,674-:MetadataSourceProcessor property accidentLocationStreet with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,674-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:accidentLocationStreet] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,674-:building SimpleValue for accidentLocationStreet 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,675-:Building property accidentLocationStreet 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,675-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=accidentState, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,675-:MetadataSourceProcessor property accidentState with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,675-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:accidentState] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,676-:building SimpleValue for accidentState 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,676-:Building property accidentState 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,676-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=accidentZip, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,676-:MetadataSourceProcessor property accidentZip with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,677-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:accidentZip] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,677-:building SimpleValue for accidentZip 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,677-:Building property accidentZip 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,677-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=claimReason, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,677-:MetadataSourceProcessor property claimReason with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,677-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:claimReason] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,678-:building SimpleValue for claimReason 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,678-:Building property claimReason 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,678-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=claimType, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,678-:MetadataSourceProcessor property claimType with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,678-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:claimType] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,679-:building SimpleValue for claimType 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,679-:Building property claimType 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,679-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(claim), mappingColumn=policyNumber, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,679-:MetadataSourceProcessor property policyNumber with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,679-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Claim:policyNumber] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,680-:building SimpleValue for policyNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,680-:Building property policyNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,688-:Binding entity from annotated class: com.miniproject.entities.UserRole 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,688-:Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,688-:Import with entity name UserRole 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,688-:Bind entity com.miniproject.entities.UserRole on table user_role 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,690-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_role), mappingColumn=username, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,690-:MetadataSourceProcessor property username with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,690-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.UserRole:username] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,690-:building SimpleValue for username 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,690-:Building property username 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,690-:#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(username)]), username, assigned, , ...) 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,691-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_role), mappingColumn=password, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,691-:MetadataSourceProcessor property password with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,691-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.UserRole:password] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,691-:building SimpleValue for password 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,691-:Building property password 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,691-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user_role), mappingColumn=rolecode, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,692-:MetadataSourceProcessor property rolecode with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,692-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.UserRole:rolecode] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,692-:building SimpleValue for rolecode 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,692-:Building property rolecode 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,693-:Binding entity from annotated class: com.miniproject.entities.PolicyDetails 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,694-:Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,696-:Import with entity name PolicyDetails 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,697-:Bind entity com.miniproject.entities.PolicyDetails on table POLICYDETAILS 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,701-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(POLICYDETAILS), mappingColumn=policyId, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,701-:MetadataSourceProcessor property policyId with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,701-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.PolicyDetails:policyId] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,701-:building SimpleValue for policyId 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,701-:Building property policyId 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,701-:#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(policyId)]), policyId, assigned, , ...) 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,702-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(POLICYDETAILS), mappingColumn=answer, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,702-:MetadataSourceProcessor property answer with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,702-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.PolicyDetails:answer] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,702-:building SimpleValue for answer 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,702-:Building property answer 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,703-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(POLICYDETAILS), mappingColumn=policyNumber, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,703-:MetadataSourceProcessor property policyNumber with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,703-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.PolicyDetails:policyNumber] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,703-:building SimpleValue for policyNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,704-:Building property policyNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,704-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(POLICYDETAILS), mappingColumn=questionId, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,704-:MetadataSourceProcessor property questionId with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,704-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.PolicyDetails:questionId] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,705-:building SimpleValue for questionId 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,705-:Building property questionId 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,705-:Binding entity from annotated class: com.miniproject.entities.Policy 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,706-:Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,706-:Import with entity name Policy 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,707-:Bind entity com.miniproject.entities.Policy on table Policy 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,708-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Policy), mappingColumn=policyNumber, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,708-:MetadataSourceProcessor property policyNumber with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,708-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Policy:policyNumber] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,708-:building SimpleValue for policyNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,708-:Building property policyNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,709-:#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(policyNumber)]), policyNumber, assigned, , ...) 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,709-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Policy), mappingColumn=accountNumber, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,709-:MetadataSourceProcessor property accountNumber with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,709-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Policy:accountNumber] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,709-:building SimpleValue for accountNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,709-:Building property accountNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,709-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Policy), mappingColumn=policyPremium, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,709-:MetadataSourceProcessor property policyPremium with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,710-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Policy:policyPremium] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,711-:building SimpleValue for policyPremium 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,711-:Building property policyPremium 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,711-:Binding entity from annotated class: com.miniproject.entities.Question 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,711-:Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,711-:Import with entity name Question 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,712-:Bind entity com.miniproject.entities.Question on table Question 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,713-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Question), mappingColumn=questionId, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,713-:MetadataSourceProcessor property questionId with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,713-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Question:questionId] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,713-:building SimpleValue for questionId 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,713-:Building property questionId 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,713-:#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(questionId)]), questionId, assigned, , ...) 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,714-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Question), mappingColumn=question, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,714-:MetadataSourceProcessor property question with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,714-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Question:question] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,714-:building SimpleValue for question 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,714-:Building property question 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,714-:Binding entity from annotated class: com.miniproject.entities.Account 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,714-:Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,714-:Import with entity name Account 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,714-:Bind entity com.miniproject.entities.Account on table Account 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,715-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountNumber, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,715-:MetadataSourceProcessor property accountNumber with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,715-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Account:accountNumber] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,715-:building SimpleValue for accountNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,716-:Building property accountNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,716-:#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(accountNumber)]), accountNumber, assigned, , ...) 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,716-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=agentName, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,716-:MetadataSourceProcessor property agentName with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,716-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Account:agentName] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,716-:building SimpleValue for agentName 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,716-:Building property agentName 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,717-:Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=userName, insertable=true, updatable=true, unique=false} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,718-:MetadataSourceProcessor property userName with lazy=false 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,718-:Attempting to locate auto-apply AttributeConverter for property [com.miniproject.entities.Account:userName] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,718-:building SimpleValue for userName 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,718-:Building property userName 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,718-:Starting fillSimpleValue for claimNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,718-:Starting fillSimpleValue for accidentCity 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,719-:Starting fillSimpleValue for accidentLocationStreet 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,719-:Starting fillSimpleValue for accidentState 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,719-:Starting fillSimpleValue for accidentZip 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,719-:Starting fillSimpleValue for claimReason 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,719-:Starting fillSimpleValue for claimType 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,719-:Starting fillSimpleValue for policyNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,719-:Starting fillSimpleValue for username 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,719-:Starting fillSimpleValue for password 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,719-:Starting fillSimpleValue for rolecode 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,719-:Starting fillSimpleValue for policyId 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,719-:Starting fillSimpleValue for answer 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,719-:Starting fillSimpleValue for policyNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,719-:Starting fillSimpleValue for questionId 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,719-:Starting fillSimpleValue for policyNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,720-:Starting fillSimpleValue for accountNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,720-:Starting fillSimpleValue for policyPremium 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,720-:Starting fillSimpleValue for questionId 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,720-:Starting fillSimpleValue for question 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,720-:Starting fillSimpleValue for accountNumber 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,721-:Starting fillSimpleValue for agentName 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,721-:Starting fillSimpleValue for userName 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,722-:Forcing column [claimnumber] to be non-null as it is part of the primary key for table [claim] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,722-:Forcing column [username] to be non-null as it is part of the primary key for table [user_role] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,722-:Forcing column [policyid] to be non-null as it is part of the primary key for table [policydetails] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,722-:Forcing column [policynumber] to be non-null as it is part of the primary key for table [policy] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,723-:Forcing column [questionid] to be non-null as it is part of the primary key for table [question] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,723-:Forcing column [accountnumber] to be non-null as it is part of the primary key for table [account] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,777-:Building session factory 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,778-:SessionFactory name : null 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,778-:Automatic flush during beforeCompletion(): enabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,778-:Automatic session close at end of transaction: disabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,779-:Statistics: disabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,779-:Deleted entity synthetic identifier rollback: disabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,779-:Default entity-mode: pojo 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,779-:Check Nullability in Core (should be disabled when Bean Validation is on): enabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,779-:Allow initialization of lazy state outside session : disabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,779-:Using BatchFetchStyle : LEGACY 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,779-:Default batch fetch size: -1 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,779-:Maximum outer join fetch depth: null 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,779-:Default null ordering: NONE 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,779-:Order SQL updates by primary key: disabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,779-:Order SQL inserts for batching: disabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,780-:multi-tenancy strategy : NONE 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,780-:JTA Track by Thread: enabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,780-:Query language substitutions: {} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,780-:Named query checking : enabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,780-:Second-level cache: disabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,780-:Second-level query cache: disabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,780-:Second-level query cache factory: null 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,780-:Second-level cache region prefix: null 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,780-:Optimize second-level cache for minimal puts: disabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,780-:Structured second-level cache entries: disabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,780-:Second-level cache direct-reference entries: disabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,781-:Automatic eviction of collection cache: disabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,781-:JDBC batch size: 15 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,781-:JDBC batch updates for versioned data: disabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,781-:Scrollable result sets: enabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,781-:Wrap result sets: disabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,781-:JDBC3 getGeneratedKeys(): disabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,781-:JDBC result set fetch size: null 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,781-:Connection release mode: AFTER_TRANSACTION 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,781-:Generate SQL with comments: disabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,781-:JPA compliance - query : disabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,781-:JPA compliance - closed-handling : disabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,781-:JPA compliance - lists : disabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,781-:JPA compliance - transactions : disabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,883-:Session factory constructed with filter configurations : {} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,883-:Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, java.specification.version=1.8, file.encoding.pkg=sun.io, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=F:\Team-D-InsuranceClaimSystem\target\classes;C:\Users\samyukta\.p2\pool\plugins\org.junit_4.13.0.v20200204-1500.jar;C:\Users\samyukta\.p2\pool\plugins\org.hamcrest.core_1.3.0.v20180420-1519.jar;C:\Users\samyukta\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\samyukta\.m2\repository\org\hibernate\hibernate-core\5.4.21.Final\hibernate-core-5.4.21.Final.jar;C:\Users\samyukta\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\samyukta\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\samyukta\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\samyukta\.m2\repository\net\bytebuddy\byte-buddy\1.10.10\byte-buddy-1.10.10.jar;C:\Users\samyukta\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\samyukta\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\samyukta\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\samyukta\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\samyukta\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\samyukta\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\samyukta\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\samyukta\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\samyukta\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\samyukta\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\samyukta\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\samyukta\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\samyukta\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\samyukta\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;C:\Users\samyukta\.m2\repository\org\hibernate\hibernate-entitymanager\5.4.21.Final\hibernate-entitymanager-5.4.21.Final.jar;C:\Users\samyukta\.m2\repository\com\oracle\database\jdbc\ojdbc6\11.2.0.4\ojdbc6-11.2.0.4.jar;C:\Users\samyukta\.m2\repository\com\oracle\database\jdbc\ucp\11.2.0.4\ucp-11.2.0.4.jar;C:\Users\samyukta\.m2\repository\com\oracle\database\security\oraclepki\11.2.0.4\oraclepki-11.2.0.4.jar;C:\Users\samyukta\.m2\repository\com\oracle\database\security\osdt_cert\11.2.0.4\osdt_cert-11.2.0.4.jar;C:\Users\samyukta\.m2\repository\com\oracle\database\security\osdt_core\11.2.0.4\osdt_core-11.2.0.4.jar;C:\Users\samyukta\.m2\repository\com\oracle\database\ha\simplefan\11.2.0.4\simplefan-11.2.0.4.jar;C:\Users\samyukta\.m2\repository\com\oracle\database\ha\ons\11.2.0.4\ons-11.2.0.4.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Calcutta, javax.persistence.jdbc.url=jdbc:oracle:thin:@localhost:1521:XE, javax.persistence.jdbc.user=****, os.name=Windows 10, java.vm.specification.version=1.8, user.country=IN, sun.java.launcher=SUN_STANDARD, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_181\jre\bin, sun.java.command=com.miniproject.pl.Client, sun.cpu.endian=little, user.home=C:\Users\samyukta, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_181\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, javax.persistence.jdbc.driver=oracle.jdbc.driver.OracleDriver, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_181\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_181\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_181-b13, user.name=samyukta, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_181\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:oracle:thin:@localhost:1521:XE, file.encoding=Cp1252, hibernate.ejb.persistenceUnitName=JPA-PU, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=oracle.jdbc.driver.OracleDriver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\samyukta\AppData\Local\Temp\, java.version=1.8.0_181, user.dir=F:\Team-D-InsuranceClaimSystem, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3e7634b9, java.library.path=C:\Program Files\Java\jdk1.8.0_181\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_181/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_181/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_181/bin/../jre/lib/amd64;C:\oraclexe\app\oracle\product\11.2.0\server\bin;;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\nodejs\;C:\Program Files\Java\jdk1.8.0_181\bin;C:\Program Files\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\samyukta\Anaconda3;C:\Users\samyukta\Anaconda3\Library\mingw-w64\bin;C:\Users\samyukta\Anaconda3\Library\usr\bin;C:\Users\samyukta\Anaconda3\Library\bin;C:\Users\samyukta\Anaconda3\Scripts;C:\Users\samyukta\AppData\Local\Programs\Python\Python37\Scripts\;C:\Users\samyukta\AppData\Local\Programs\Python\Python37\;C:\Users\samyukta\AppData\Local\Microsoft\WindowsApps;C:\Users\samyukta\AppData\Roaming\npm;C:\Users\samyukta\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\samyukta\AppData\Local\GitHubDesktop\bin;C:\Users\samyukta\Desktop;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.181-b13, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=****, java.class.version=52.0} 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,910-:Skipping JACC integration as it was not enabled 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,912-:Instantiated session factory 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,913-:Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@46271dd6] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@56a4479a] 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,974-:Not known whether passed class name [com.miniproject.entities.Claim] is safe 
2021-05-11 11:47 DEBUG 2021-05-11 23:47:59,974-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Claim 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,002-:Not known whether passed class name [com.miniproject.entities.Claim] is safe 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,002-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Claim 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,532-:Not known whether passed class name [com.miniproject.entities.UserRole] is safe 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,533-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.UserRole 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,533-:Not known whether passed class name [com.miniproject.entities.UserRole] is safe 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,533-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.UserRole 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,590-:Not known whether passed class name [com.miniproject.entities.PolicyDetails] is safe 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,590-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.PolicyDetails 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,591-:Not known whether passed class name [com.miniproject.entities.PolicyDetails] is safe 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,591-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.PolicyDetails 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,631-:Not known whether passed class name [com.miniproject.entities.Policy] is safe 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,632-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Policy 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,632-:Not known whether passed class name [com.miniproject.entities.Policy] is safe 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,632-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Policy 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,647-:Not known whether passed class name [com.miniproject.entities.Question] is safe 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,648-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Question 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,648-:Not known whether passed class name [com.miniproject.entities.Question] is safe 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,648-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Question 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,672-:Not known whether passed class name [com.miniproject.entities.Account] is safe 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,674-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Account 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,674-:Not known whether passed class name [com.miniproject.entities.Account] is safe 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,675-:No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.miniproject.entities.Account 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,701-:Static SQL for entity: com.miniproject.entities.Claim 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,702-: Version select: select claimNumber from claim where claimNumber =? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,702-: Snapshot select: select claim_.claimNumber, claim_.accidentCity as accidentcity2_1_, claim_.accidentLocationStreet as accidentlocationst3_1_, claim_.accidentState as accidentstate4_1_, claim_.accidentZip as accidentzip5_1_, claim_.claimReason as claimreason6_1_, claim_.claimType as claimtype7_1_, claim_.policyNumber as policynumber8_1_ from claim claim_ where claim_.claimNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,702-: Insert 0: insert into claim (accidentCity, accidentLocationStreet, accidentState, accidentZip, claimReason, claimType, policyNumber, claimNumber) values (?, ?, ?, ?, ?, ?, ?, ?) 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,702-: Update 0: update claim set accidentCity=?, accidentLocationStreet=?, accidentState=?, accidentZip=?, claimReason=?, claimType=?, policyNumber=? where claimNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,702-: Delete 0: delete from claim where claimNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,726-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@595f4da5] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,727-:Visiting attribute path : accidentCity 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,728-:Visiting attribute path : accidentLocationStreet 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,729-:Visiting attribute path : accidentState 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,729-:Visiting attribute path : accidentZip 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,729-:Visiting attribute path : claimReason 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,729-:Visiting attribute path : claimType 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,729-:Visiting attribute path : policyNumber 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,730-:Building LoadPlan... 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,751-:processing queryspace <gen:0> 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,757-:LoadPlan(entity=com.miniproject.entities.Claim)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Claim, querySpaceUid=<gen:0>, path=com.miniproject.entities.Claim)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Claim)
          - SQL table alias mapping - claim0_
          - alias suffix - 0_
          - suffixed key columns - {claimnumber1_1_0_}
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,760-:Static select for entity com.miniproject.entities.Claim [NONE]: select claim0_.claimNumber as claimnumber1_1_0_, claim0_.accidentCity as accidentcity2_1_0_, claim0_.accidentLocationStreet as accidentlocationst3_1_0_, claim0_.accidentState as accidentstate4_1_0_, claim0_.accidentZip as accidentzip5_1_0_, claim0_.claimReason as claimreason6_1_0_, claim0_.claimType as claimtype7_1_0_, claim0_.policyNumber as policynumber8_1_0_ from claim claim0_ where claim0_.claimNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,760-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d4602a] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,760-:Visiting attribute path : accidentCity 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,760-:Visiting attribute path : accidentLocationStreet 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,760-:Visiting attribute path : accidentState 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,760-:Visiting attribute path : accidentZip 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,760-:Visiting attribute path : claimReason 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,760-:Visiting attribute path : claimType 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,760-:Visiting attribute path : policyNumber 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,760-:Building LoadPlan... 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,761-:processing queryspace <gen:0> 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,761-:LoadPlan(entity=com.miniproject.entities.Claim)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Claim, querySpaceUid=<gen:0>, path=com.miniproject.entities.Claim)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Claim)
          - SQL table alias mapping - claim0_
          - alias suffix - 0_
          - suffixed key columns - {claimnumber1_1_0_}
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,761-:Static select for entity com.miniproject.entities.Claim [READ]: select claim0_.claimNumber as claimnumber1_1_0_, claim0_.accidentCity as accidentcity2_1_0_, claim0_.accidentLocationStreet as accidentlocationst3_1_0_, claim0_.accidentState as accidentstate4_1_0_, claim0_.accidentZip as accidentzip5_1_0_, claim0_.claimReason as claimreason6_1_0_, claim0_.claimType as claimtype7_1_0_, claim0_.policyNumber as policynumber8_1_0_ from claim claim0_ where claim0_.claimNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,785-:Static select for action ACTION_MERGE on entity com.miniproject.entities.Claim: select claim0_.claimNumber as claimnumber1_1_0_, claim0_.accidentCity as accidentcity2_1_0_, claim0_.accidentLocationStreet as accidentlocationst3_1_0_, claim0_.accidentState as accidentstate4_1_0_, claim0_.accidentZip as accidentzip5_1_0_, claim0_.claimReason as claimreason6_1_0_, claim0_.claimType as claimtype7_1_0_, claim0_.policyNumber as policynumber8_1_0_ from claim claim0_ where claim0_.claimNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,786-:Static select for action ACTION_REFRESH on entity com.miniproject.entities.Claim: select claim0_.claimNumber as claimnumber1_1_0_, claim0_.accidentCity as accidentcity2_1_0_, claim0_.accidentLocationStreet as accidentlocationst3_1_0_, claim0_.accidentState as accidentstate4_1_0_, claim0_.accidentZip as accidentzip5_1_0_, claim0_.claimReason as claimreason6_1_0_, claim0_.claimType as claimtype7_1_0_, claim0_.policyNumber as policynumber8_1_0_ from claim claim0_ where claim0_.claimNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,787-:Static SQL for entity: com.miniproject.entities.UserRole 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,787-: Version select: select username from user_role where username =? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,787-: Snapshot select: select userrole_.username, userrole_.password as password2_5_, userrole_.rolecode as rolecode3_5_ from user_role userrole_ where userrole_.username=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,787-: Insert 0: insert into user_role (password, rolecode, username) values (?, ?, ?) 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,787-: Update 0: update user_role set password=?, rolecode=? where username=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,787-: Delete 0: delete from user_role where username=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,787-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@261d8190] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,787-:Visiting attribute path : password 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,787-:Visiting attribute path : rolecode 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,788-:Building LoadPlan... 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,788-:processing queryspace <gen:0> 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,788-:LoadPlan(entity=com.miniproject.entities.UserRole)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.UserRole, querySpaceUid=<gen:0>, path=com.miniproject.entities.UserRole)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.UserRole)
          - SQL table alias mapping - userrole0_
          - alias suffix - 0_
          - suffixed key columns - {username1_5_0_}
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,788-:Static select for entity com.miniproject.entities.UserRole [NONE]: select userrole0_.username as username1_5_0_, userrole0_.password as password2_5_0_, userrole0_.rolecode as rolecode3_5_0_ from user_role userrole0_ where userrole0_.username=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,789-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60e9df3c] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,789-:Visiting attribute path : password 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,789-:Visiting attribute path : rolecode 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,789-:Building LoadPlan... 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,789-:processing queryspace <gen:0> 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,790-:LoadPlan(entity=com.miniproject.entities.UserRole)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.UserRole, querySpaceUid=<gen:0>, path=com.miniproject.entities.UserRole)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.UserRole)
          - SQL table alias mapping - userrole0_
          - alias suffix - 0_
          - suffixed key columns - {username1_5_0_}
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,790-:Static select for entity com.miniproject.entities.UserRole [READ]: select userrole0_.username as username1_5_0_, userrole0_.password as password2_5_0_, userrole0_.rolecode as rolecode3_5_0_ from user_role userrole0_ where userrole0_.username=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,790-:Static select for action ACTION_MERGE on entity com.miniproject.entities.UserRole: select userrole0_.username as username1_5_0_, userrole0_.password as password2_5_0_, userrole0_.rolecode as rolecode3_5_0_ from user_role userrole0_ where userrole0_.username=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,790-:Static select for action ACTION_REFRESH on entity com.miniproject.entities.UserRole: select userrole0_.username as username1_5_0_, userrole0_.password as password2_5_0_, userrole0_.rolecode as rolecode3_5_0_ from user_role userrole0_ where userrole0_.username=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,791-:Static SQL for entity: com.miniproject.entities.PolicyDetails 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,791-: Version select: select policyId from POLICYDETAILS where policyId =? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,791-: Snapshot select: select policydeta_.policyId, policydeta_.answer as answer2_3_, policydeta_.policyNumber as policynumber3_3_, policydeta_.questionId as questionid4_3_ from POLICYDETAILS policydeta_ where policydeta_.policyId=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,791-: Insert 0: insert into POLICYDETAILS (answer, policyNumber, questionId, policyId) values (?, ?, ?, ?) 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,791-: Update 0: update POLICYDETAILS set answer=?, policyNumber=?, questionId=? where policyId=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,791-: Delete 0: delete from POLICYDETAILS where policyId=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,791-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@435ce306] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,791-:Visiting attribute path : answer 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,792-:Visiting attribute path : policyNumber 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,792-:Visiting attribute path : questionId 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,792-:Building LoadPlan... 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,792-:processing queryspace <gen:0> 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,793-:LoadPlan(entity=com.miniproject.entities.PolicyDetails)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.PolicyDetails, querySpaceUid=<gen:0>, path=com.miniproject.entities.PolicyDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.PolicyDetails)
          - SQL table alias mapping - policydeta0_
          - alias suffix - 0_
          - suffixed key columns - {policyid1_3_0_}
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,793-:Static select for entity com.miniproject.entities.PolicyDetails [NONE]: select policydeta0_.policyId as policyid1_3_0_, policydeta0_.answer as answer2_3_0_, policydeta0_.policyNumber as policynumber3_3_0_, policydeta0_.questionId as questionid4_3_0_ from POLICYDETAILS policydeta0_ where policydeta0_.policyId=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,793-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7dc51783] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,793-:Visiting attribute path : answer 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,793-:Visiting attribute path : policyNumber 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,793-:Visiting attribute path : questionId 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,793-:Building LoadPlan... 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,793-:processing queryspace <gen:0> 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,793-:LoadPlan(entity=com.miniproject.entities.PolicyDetails)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.PolicyDetails, querySpaceUid=<gen:0>, path=com.miniproject.entities.PolicyDetails)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.PolicyDetails)
          - SQL table alias mapping - policydeta0_
          - alias suffix - 0_
          - suffixed key columns - {policyid1_3_0_}
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,793-:Static select for entity com.miniproject.entities.PolicyDetails [READ]: select policydeta0_.policyId as policyid1_3_0_, policydeta0_.answer as answer2_3_0_, policydeta0_.policyNumber as policynumber3_3_0_, policydeta0_.questionId as questionid4_3_0_ from POLICYDETAILS policydeta0_ where policydeta0_.policyId=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,794-:Static select for action ACTION_MERGE on entity com.miniproject.entities.PolicyDetails: select policydeta0_.policyId as policyid1_3_0_, policydeta0_.answer as answer2_3_0_, policydeta0_.policyNumber as policynumber3_3_0_, policydeta0_.questionId as questionid4_3_0_ from POLICYDETAILS policydeta0_ where policydeta0_.policyId=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,794-:Static select for action ACTION_REFRESH on entity com.miniproject.entities.PolicyDetails: select policydeta0_.policyId as policyid1_3_0_, policydeta0_.answer as answer2_3_0_, policydeta0_.policyNumber as policynumber3_3_0_, policydeta0_.questionId as questionid4_3_0_ from POLICYDETAILS policydeta0_ where policydeta0_.policyId=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,794-:Static SQL for entity: com.miniproject.entities.Policy 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,794-: Version select: select policyNumber from Policy where policyNumber =? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,794-: Snapshot select: select policy_.policyNumber, policy_.accountNumber as accountnumber2_2_, policy_.policyPremium as policypremium3_2_ from Policy policy_ where policy_.policyNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,795-: Insert 0: insert into Policy (accountNumber, policyPremium, policyNumber) values (?, ?, ?) 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,795-: Update 0: update Policy set accountNumber=?, policyPremium=? where policyNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,795-: Delete 0: delete from Policy where policyNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,795-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f815e7f] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,795-:Visiting attribute path : accountNumber 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,795-:Visiting attribute path : policyPremium 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,795-:Building LoadPlan... 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,795-:processing queryspace <gen:0> 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,796-:LoadPlan(entity=com.miniproject.entities.Policy)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Policy, querySpaceUid=<gen:0>, path=com.miniproject.entities.Policy)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Policy)
          - SQL table alias mapping - policy0_
          - alias suffix - 0_
          - suffixed key columns - {policynumber1_2_0_}
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,796-:Static select for entity com.miniproject.entities.Policy [NONE]: select policy0_.policyNumber as policynumber1_2_0_, policy0_.accountNumber as accountnumber2_2_0_, policy0_.policyPremium as policypremium3_2_0_ from Policy policy0_ where policy0_.policyNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,796-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@304b9f1a] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,796-:Visiting attribute path : accountNumber 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,796-:Visiting attribute path : policyPremium 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,796-:Building LoadPlan... 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,797-:processing queryspace <gen:0> 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,797-:LoadPlan(entity=com.miniproject.entities.Policy)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Policy, querySpaceUid=<gen:0>, path=com.miniproject.entities.Policy)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Policy)
          - SQL table alias mapping - policy0_
          - alias suffix - 0_
          - suffixed key columns - {policynumber1_2_0_}
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,797-:Static select for entity com.miniproject.entities.Policy [READ]: select policy0_.policyNumber as policynumber1_2_0_, policy0_.accountNumber as accountnumber2_2_0_, policy0_.policyPremium as policypremium3_2_0_ from Policy policy0_ where policy0_.policyNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,797-:Static select for action ACTION_MERGE on entity com.miniproject.entities.Policy: select policy0_.policyNumber as policynumber1_2_0_, policy0_.accountNumber as accountnumber2_2_0_, policy0_.policyPremium as policypremium3_2_0_ from Policy policy0_ where policy0_.policyNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,798-:Static select for action ACTION_REFRESH on entity com.miniproject.entities.Policy: select policy0_.policyNumber as policynumber1_2_0_, policy0_.accountNumber as accountnumber2_2_0_, policy0_.policyPremium as policypremium3_2_0_ from Policy policy0_ where policy0_.policyNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,798-:Static SQL for entity: com.miniproject.entities.Question 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,798-: Version select: select questionId from Question where questionId =? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,798-: Snapshot select: select question_.questionId, question_.question as question2_4_ from Question question_ where question_.questionId=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,798-: Insert 0: insert into Question (question, questionId) values (?, ?) 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,798-: Update 0: update Question set question=? where questionId=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,798-: Delete 0: delete from Question where questionId=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,798-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@107e5441] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,798-:Visiting attribute path : question 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,798-:Building LoadPlan... 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,798-:processing queryspace <gen:0> 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,798-:LoadPlan(entity=com.miniproject.entities.Question)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Question, querySpaceUid=<gen:0>, path=com.miniproject.entities.Question)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Question)
          - SQL table alias mapping - question0_
          - alias suffix - 0_
          - suffixed key columns - {questionid1_4_0_}
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,800-:Static select for entity com.miniproject.entities.Question [NONE]: select question0_.questionId as questionid1_4_0_, question0_.question as question2_4_0_ from Question question0_ where question0_.questionId=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,801-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@263558c9] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,802-:Visiting attribute path : question 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,802-:Building LoadPlan... 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,802-:processing queryspace <gen:0> 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,804-:LoadPlan(entity=com.miniproject.entities.Question)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Question, querySpaceUid=<gen:0>, path=com.miniproject.entities.Question)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Question)
          - SQL table alias mapping - question0_
          - alias suffix - 0_
          - suffixed key columns - {questionid1_4_0_}
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,804-:Static select for entity com.miniproject.entities.Question [READ]: select question0_.questionId as questionid1_4_0_, question0_.question as question2_4_0_ from Question question0_ where question0_.questionId=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,805-:Static select for action ACTION_MERGE on entity com.miniproject.entities.Question: select question0_.questionId as questionid1_4_0_, question0_.question as question2_4_0_ from Question question0_ where question0_.questionId=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,805-:Static select for action ACTION_REFRESH on entity com.miniproject.entities.Question: select question0_.questionId as questionid1_4_0_, question0_.question as question2_4_0_ from Question question0_ where question0_.questionId=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,805-:Static SQL for entity: com.miniproject.entities.Account 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,805-: Version select: select accountNumber from Account where accountNumber =? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,805-: Snapshot select: select account_.accountNumber, account_.agentName as agentname2_0_, account_.userName as username3_0_ from Account account_ where account_.accountNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,805-: Insert 0: insert into Account (agentName, userName, accountNumber) values (?, ?, ?) 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,805-: Update 0: update Account set agentName=?, userName=? where accountNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,806-: Delete 0: delete from Account where accountNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,806-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7daa61f3] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,806-:Visiting attribute path : agentName 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,806-:Visiting attribute path : userName 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,806-:Building LoadPlan... 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,806-:processing queryspace <gen:0> 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,806-:LoadPlan(entity=com.miniproject.entities.Account)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Account, querySpaceUid=<gen:0>, path=com.miniproject.entities.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountnumber1_0_0_}
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,807-:Static select for entity com.miniproject.entities.Account [NONE]: select account0_.accountNumber as accountnumber1_0_0_, account0_.agentName as agentname2_0_0_, account0_.userName as username3_0_0_ from Account account0_ where account0_.accountNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,807-:Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e4ea0bd] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,807-:Visiting attribute path : agentName 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,807-:Visiting attribute path : userName 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,807-:Building LoadPlan... 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,807-:processing queryspace <gen:0> 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,807-:LoadPlan(entity=com.miniproject.entities.Account)
    - Returns
       - EntityReturnImpl(entity=com.miniproject.entities.Account, querySpaceUid=<gen:0>, path=com.miniproject.entities.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.miniproject.entities.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountnumber1_0_0_}
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,807-:Static select for entity com.miniproject.entities.Account [READ]: select account0_.accountNumber as accountnumber1_0_0_, account0_.agentName as agentname2_0_0_, account0_.userName as username3_0_0_ from Account account0_ where account0_.accountNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,807-:Static select for action ACTION_MERGE on entity com.miniproject.entities.Account: select account0_.accountNumber as accountnumber1_0_0_, account0_.agentName as agentname2_0_0_, account0_.userName as username3_0_0_ from Account account0_ where account0_.accountNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:00,807-:Static select for action ACTION_REFRESH on entity com.miniproject.entities.Account: select account0_.accountNumber as accountnumber1_0_0_, account0_.agentName as agentname2_0_0_, account0_.userName as username3_0_0_ from Account account0_ where account0_.accountNumber=? 
2021-05-11 11:48 INFO 2021-05-11 23:48:00,870-:HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6e28bb87] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode. 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:01,049-:No alter strings for table : Account 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:01,050-:No alter strings for table : claim 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:01,050-:No alter strings for table : Policy 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:01,050-:No alter strings for table : POLICYDETAILS 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:01,050-:No alter strings for table : Question 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:01,050-:No alter strings for table : user_role 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:01,052-:No JtaPlatform was specified, checking resolver 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:01,053-:No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:01,061-:Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
2021-05-11 11:48 INFO 2021-05-11 23:48:01,061-:HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:01,063-:Checking 0 named HQL queries 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:01,063-:Checking 0 named SQL queries 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:01,082-:Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1d4664d7 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:01,089-:Registering SessionFactory: 6addb1a9-39af-49dd-90cc-6eb8122158f8 (<unnamed>) 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:01,089-:Not binding SessionFactory to JNDI, no JNDI name configured 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:01,326-:Statistics initialized [enabled=false] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,548-:QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4455f57d 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,594-:parse() - HQL: select userrole from com.miniproject.entities.UserRole userrole where userrole.rolecode=:role 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,605-:throwQueryException() : no errors 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,615-:--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'miniproject'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'UserRole'
    |  |     \-[ALIAS] Node: 'userrole'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'userrole'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'userrole'
          |  \-[IDENT] Node: 'rolecode'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'role'
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,671-:select << begin [level=1, statement=select] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,711-:FromClause{level=1} : com.miniproject.entities.UserRole (userrole) -> userrole0_ 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,712-:Resolved : userrole -> userrole0_.username 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,719-:Resolved : userrole -> userrole0_.username 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,720-:getDataType() : rolecode -> org.hibernate.type.StringType@1e802ef9 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,721-:Resolved : userrole.rolecode -> userrole0_.rolecode 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,724-:select : finishing up [level=1, statement=select] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,724-:processQuery() :  ( SELECT ( {select clause} userrole0_.username ) ( FromClause{level=1} user_role userrole0_ ) ( where ( = ( userrole0_.rolecode userrole0_.username rolecode ) ? ) ) ) 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,749-:Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity UserRole): [user_role]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.miniproject.entities.UserRole)
    |  | originalText: userrole
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.miniproject.entities.UserRole)
          | path: userrole.rolecode
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.miniproject.entities.UserRole)
          |  | originalText: userrole
          |  \-IdentNode
          |    persister: null
          |    originalText: rolecode
          \-ParameterNode
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,756-:Using FROM fragment [user_role userrole0_] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,756-:select >> end [level=1, statement=select] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,757-:--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_role)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'userrole0_.username as username1_5_' {alias=userrole, className=com.miniproject.entities.UserRole, tableAlias=userrole0_}
    |  \-[SQL_TOKEN] SqlFragment: 'userrole0_.password as password2_5_, userrole0_.rolecode as rolecode3_5_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[userrole], fromElementByTableAlias=[userrole0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_role userrole0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=userrole,role=null,tableName=user_role,tableAlias=userrole0_,origin=null,columns={,className=com.miniproject.entities.UserRole}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'userrole0_.rolecode' {propertyName=rolecode,dereferenceType=PRIMITIVE,getPropertyPath=rolecode,path=userrole.rolecode,tableAlias=userrole0_,className=com.miniproject.entities.UserRole,classAlias=userrole}
          |  +-[ALIAS_REF] IdentNode: 'userrole0_.username' {alias=userrole, className=com.miniproject.entities.UserRole, tableAlias=userrole0_}
          |  \-[IDENT] IdentNode: 'rolecode' {originalText=rolecode}
          \-[NAMED_PARAM] ParameterNode: '?' {name=role, expectedType=org.hibernate.type.StringType@1e802ef9}
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,757-:throwQueryException() : no errors 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,767-:HQL: select userrole from com.miniproject.entities.UserRole userrole where userrole.rolecode=:role 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,767-:SQL: select userrole0_.username as username1_5_, userrole0_.password as password2_5_, userrole0_.rolecode as rolecode3_5_ from user_role userrole0_ where userrole0_.rolecode=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,767-:throwQueryException() : no errors 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,797-:select userrole0_.username as username1_5_, userrole0_.password as password2_5_, userrole0_.rolecode as rolecode3_5_ from user_role userrole0_ where userrole0_.rolecode=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,803-:Result set row: 0 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,807-:Result row: EntityKey[com.miniproject.entities.UserRole#Joe] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,814-:Result set row: 1 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,814-:Result row: EntityKey[com.miniproject.entities.UserRole#Sejal] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,814-:Result set row: 2 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,814-:Result row: EntityKey[com.miniproject.entities.UserRole#Sachin] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,817-:Resolving attributes for [com.miniproject.entities.UserRole#Joe] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,818-:Processing attribute `password` : value = Joe123 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,818-:Attribute (`password`)  - enhanced for lazy-loading? - false 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,818-:Processing attribute `rolecode` : value = Agent 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,818-:Attribute (`rolecode`)  - enhanced for lazy-loading? - false 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,819-:Done materializing entity [com.miniproject.entities.UserRole#Joe] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,819-:Resolving attributes for [com.miniproject.entities.UserRole#Sejal] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,819-:Processing attribute `password` : value = Sejal123 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,819-:Attribute (`password`)  - enhanced for lazy-loading? - false 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,819-:Processing attribute `rolecode` : value = Agent 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,819-:Attribute (`rolecode`)  - enhanced for lazy-loading? - false 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,819-:Done materializing entity [com.miniproject.entities.UserRole#Sejal] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,819-:Resolving attributes for [com.miniproject.entities.UserRole#Sachin] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,819-:Processing attribute `password` : value = Sachin123 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,819-:Attribute (`password`)  - enhanced for lazy-loading? - false 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,819-:Processing attribute `rolecode` : value = Agent 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,819-:Attribute (`rolecode`)  - enhanced for lazy-loading? - false 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,819-:Done materializing entity [com.miniproject.entities.UserRole#Sachin] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:12,824-:Initiating JDBC connection release from afterTransaction 
2021-05-11 11:48 INFO 2021-05-11 23:48:12,824-:Joe added 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,105-:parse() - HQL: select account from com.miniproject.entities.Account account where account.agentName = :agentName 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,106-:throwQueryException() : no errors 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,107-:--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'miniproject'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'Account'
    |  |     \-[ALIAS] Node: 'account'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'account'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'account'
          |  \-[IDENT] Node: 'agentName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'agentName'
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,108-:select << begin [level=1, statement=select] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,108-:FromClause{level=1} : com.miniproject.entities.Account (account) -> account0_ 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,108-:Resolved : account -> account0_.accountNumber 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,109-:Resolved : account -> account0_.accountNumber 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,109-:getDataType() : agentName -> org.hibernate.type.StringType@1e802ef9 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,109-:Resolved : account.agentName -> account0_.agentName 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,110-:select : finishing up [level=1, statement=select] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,111-:processQuery() :  ( SELECT ( {select clause} account0_.accountNumber ) ( FromClause{level=1} Account account0_ ) ( where ( = ( account0_.agentName account0_.accountNumber agentName ) ? ) ) ) 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,111-:Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Account): [Account]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.miniproject.entities.Account)
    |  | originalText: account
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.miniproject.entities.Account)
          | path: account.agentName
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.miniproject.entities.Account)
          |  | originalText: account
          |  \-IdentNode
          |    persister: null
          |    originalText: agentName
          \-ParameterNode
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,111-:Using FROM fragment [Account account0_] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,111-:select >> end [level=1, statement=select] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,112-:--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'account0_.accountNumber as accountnumber1_0_' {alias=account, className=com.miniproject.entities.Account, tableAlias=account0_}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.agentName as agentname2_0_, account0_.userName as username3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[account], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=account,role=null,tableName=Account,tableAlias=account0_,origin=null,columns={,className=com.miniproject.entities.Account}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.agentName' {propertyName=agentName,dereferenceType=PRIMITIVE,getPropertyPath=agentName,path=account.agentName,tableAlias=account0_,className=com.miniproject.entities.Account,classAlias=account}
          |  +-[ALIAS_REF] IdentNode: 'account0_.accountNumber' {alias=account, className=com.miniproject.entities.Account, tableAlias=account0_}
          |  \-[IDENT] IdentNode: 'agentName' {originalText=agentName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=agentName, expectedType=org.hibernate.type.StringType@1e802ef9}
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,112-:throwQueryException() : no errors 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,112-:HQL: select account from com.miniproject.entities.Account account where account.agentName = :agentName 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,112-:SQL: select account0_.accountNumber as accountnumber1_0_, account0_.agentName as agentname2_0_, account0_.userName as username3_0_ from Account account0_ where account0_.agentName=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,112-:throwQueryException() : no errors 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,113-:select account0_.accountNumber as accountnumber1_0_, account0_.agentName as agentname2_0_, account0_.userName as username3_0_ from Account account0_ where account0_.agentName=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,115-:Result set row: 0 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,115-:Result row: EntityKey[com.miniproject.entities.Account#101] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,116-:Result set row: 1 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,116-:Result row: EntityKey[com.miniproject.entities.Account#102] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,116-:Result set row: 2 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,116-:Result row: EntityKey[com.miniproject.entities.Account#103] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,116-:Resolving attributes for [com.miniproject.entities.Account#101] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,116-:Processing attribute `agentName` : value = Joe 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,116-:Attribute (`agentName`)  - enhanced for lazy-loading? - false 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,116-:Processing attribute `userName` : value = Mark 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,116-:Attribute (`userName`)  - enhanced for lazy-loading? - false 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,116-:Done materializing entity [com.miniproject.entities.Account#101] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,117-:Resolving attributes for [com.miniproject.entities.Account#102] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,117-:Processing attribute `agentName` : value = Joe 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,117-:Attribute (`agentName`)  - enhanced for lazy-loading? - false 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,117-:Processing attribute `userName` : value = Jack 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,117-:Attribute (`userName`)  - enhanced for lazy-loading? - false 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,117-:Done materializing entity [com.miniproject.entities.Account#102] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,117-:Resolving attributes for [com.miniproject.entities.Account#103] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,117-:Processing attribute `agentName` : value = Joe 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,117-:Attribute (`agentName`)  - enhanced for lazy-loading? - false 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,117-:Processing attribute `userName` : value = Rose 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,117-:Attribute (`userName`)  - enhanced for lazy-loading? - false 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,117-:Done materializing entity [com.miniproject.entities.Account#103] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:14,117-:Initiating JDBC connection release from afterTransaction 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,698-:parse() - HQL: select account from com.miniproject.entities.Account account where account.userName=:usn 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,699-:throwQueryException() : no errors 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,699-:--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'miniproject'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'Account'
    |  |     \-[ALIAS] Node: 'account'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'account'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'account'
          |  \-[IDENT] Node: 'userName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'usn'
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,699-:select << begin [level=1, statement=select] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,699-:FromClause{level=1} : com.miniproject.entities.Account (account) -> account0_ 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,699-:Resolved : account -> account0_.accountNumber 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,699-:Resolved : account -> account0_.accountNumber 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,699-:getDataType() : userName -> org.hibernate.type.StringType@1e802ef9 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,699-:Resolved : account.userName -> account0_.userName 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,699-:select : finishing up [level=1, statement=select] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,699-:processQuery() :  ( SELECT ( {select clause} account0_.accountNumber ) ( FromClause{level=1} Account account0_ ) ( where ( = ( account0_.userName account0_.accountNumber userName ) ? ) ) ) 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,700-:Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Account): [Account]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.miniproject.entities.Account)
    |  | originalText: account
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.miniproject.entities.Account)
          | path: account.userName
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.miniproject.entities.Account)
          |  | originalText: account
          |  \-IdentNode
          |    persister: null
          |    originalText: userName
          \-ParameterNode
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,700-:Using FROM fragment [Account account0_] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,700-:select >> end [level=1, statement=select] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,700-:--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'account0_.accountNumber as accountnumber1_0_' {alias=account, className=com.miniproject.entities.Account, tableAlias=account0_}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.agentName as agentname2_0_, account0_.userName as username3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[account], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=account,role=null,tableName=Account,tableAlias=account0_,origin=null,columns={,className=com.miniproject.entities.Account}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.userName' {propertyName=userName,dereferenceType=PRIMITIVE,getPropertyPath=userName,path=account.userName,tableAlias=account0_,className=com.miniproject.entities.Account,classAlias=account}
          |  +-[ALIAS_REF] IdentNode: 'account0_.accountNumber' {alias=account, className=com.miniproject.entities.Account, tableAlias=account0_}
          |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=usn, expectedType=org.hibernate.type.StringType@1e802ef9}
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,700-:throwQueryException() : no errors 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,701-:HQL: select account from com.miniproject.entities.Account account where account.userName=:usn 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,701-:SQL: select account0_.accountNumber as accountnumber1_0_, account0_.agentName as agentname2_0_, account0_.userName as username3_0_ from Account account0_ where account0_.userName=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,701-:throwQueryException() : no errors 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,701-:select account0_.accountNumber as accountnumber1_0_, account0_.agentName as agentname2_0_, account0_.userName as username3_0_ from Account account0_ where account0_.userName=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,701-:Result set row: 0 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,702-:Result row: EntityKey[com.miniproject.entities.Account#101] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,702-:Initiating JDBC connection release from afterTransaction 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,702-:select account0_.accountNumber as accountnumber1_0_, account0_.agentName as agentname2_0_, account0_.userName as username3_0_ from Account account0_ where account0_.userName=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,702-:Result set row: 0 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,702-:Result row: EntityKey[com.miniproject.entities.Account#101] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,703-:Initiating JDBC connection release from afterTransaction 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,703-:parse() - HQL: select policy from com.miniproject.entities.Policy policy where policy.accountNumber=:accountnumber 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,703-:throwQueryException() : no errors 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,703-:--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'miniproject'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'Policy'
    |  |     \-[ALIAS] Node: 'policy'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'policy'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'policy'
          |  \-[IDENT] Node: 'accountNumber'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'accountnumber'
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,703-:select << begin [level=1, statement=select] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,704-:FromClause{level=1} : com.miniproject.entities.Policy (policy) -> policy0_ 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,704-:Resolved : policy -> policy0_.policyNumber 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,704-:Resolved : policy -> policy0_.policyNumber 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,704-:getDataType() : accountNumber -> org.hibernate.type.IntegerType@1a04f701 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,704-:Resolved : policy.accountNumber -> policy0_.accountNumber 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,704-:select : finishing up [level=1, statement=select] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,704-:processQuery() :  ( SELECT ( {select clause} policy0_.policyNumber ) ( FromClause{level=1} Policy policy0_ ) ( where ( = ( policy0_.accountNumber policy0_.policyNumber accountNumber ) ? ) ) ) 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,704-:Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Policy): [Policy]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.miniproject.entities.Policy)
    |  | originalText: policy
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.miniproject.entities.Policy)
          | path: policy.accountNumber
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.miniproject.entities.Policy)
          |  | originalText: policy
          |  \-IdentNode
          |    persister: null
          |    originalText: accountNumber
          \-ParameterNode
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,705-:Using FROM fragment [Policy policy0_] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,705-:select >> end [level=1, statement=select] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,705-:--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Policy)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'policy0_.policyNumber as policynumber1_2_' {alias=policy, className=com.miniproject.entities.Policy, tableAlias=policy0_}
    |  \-[SQL_TOKEN] SqlFragment: 'policy0_.accountNumber as accountnumber2_2_, policy0_.policyPremium as policypremium3_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[policy], fromElementByTableAlias=[policy0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Policy policy0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=policy,role=null,tableName=Policy,tableAlias=policy0_,origin=null,columns={,className=com.miniproject.entities.Policy}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'policy0_.accountNumber' {propertyName=accountNumber,dereferenceType=PRIMITIVE,getPropertyPath=accountNumber,path=policy.accountNumber,tableAlias=policy0_,className=com.miniproject.entities.Policy,classAlias=policy}
          |  +-[ALIAS_REF] IdentNode: 'policy0_.policyNumber' {alias=policy, className=com.miniproject.entities.Policy, tableAlias=policy0_}
          |  \-[IDENT] IdentNode: 'accountNumber' {originalText=accountNumber}
          \-[NAMED_PARAM] ParameterNode: '?' {name=accountnumber, expectedType=org.hibernate.type.IntegerType@1a04f701}
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,705-:throwQueryException() : no errors 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,705-:HQL: select policy from com.miniproject.entities.Policy policy where policy.accountNumber=:accountnumber 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,705-:SQL: select policy0_.policyNumber as policynumber1_2_, policy0_.accountNumber as accountnumber2_2_, policy0_.policyPremium as policypremium3_2_ from Policy policy0_ where policy0_.accountNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,705-:throwQueryException() : no errors 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,705-:select policy0_.policyNumber as policynumber1_2_, policy0_.accountNumber as accountnumber2_2_, policy0_.policyPremium as policypremium3_2_ from Policy policy0_ where policy0_.accountNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,706-:Result set row: 0 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,706-:Result row: EntityKey[com.miniproject.entities.Policy#1001] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,711-:Resolving attributes for [com.miniproject.entities.Policy#1001] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,711-:Processing attribute `accountNumber` : value = 101 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,711-:Attribute (`accountNumber`)  - enhanced for lazy-loading? - false 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,711-:Processing attribute `policyPremium` : value = 5000 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,711-:Attribute (`policyPremium`)  - enhanced for lazy-loading? - false 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,711-:Done materializing entity [com.miniproject.entities.Policy#1001] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,711-:Initiating JDBC connection release from afterTransaction 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,711-:parse() - HQL: select claim from com.miniproject.entities.Claim claim where claim.policyNumber = :pnum 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,712-:throwQueryException() : no errors 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,712-:--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'miniproject'
    |  |     |  |  \-[IDENT] Node: 'entities'
    |  |     |  \-[IDENT] Node: 'Claim'
    |  |     \-[ALIAS] Node: 'claim'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'claim'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'claim'
          |  \-[IDENT] Node: 'policyNumber'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'pnum'
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,712-:select << begin [level=1, statement=select] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,712-:FromClause{level=1} : com.miniproject.entities.Claim (claim) -> claim0_ 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,712-:Resolved : claim -> claim0_.claimNumber 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,712-:Resolved : claim -> claim0_.claimNumber 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,712-:getDataType() : policyNumber -> org.hibernate.type.IntegerType@1a04f701 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,712-:Resolved : claim.policyNumber -> claim0_.policyNumber 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,712-:select : finishing up [level=1, statement=select] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,712-:processQuery() :  ( SELECT ( {select clause} claim0_.claimNumber ) ( FromClause{level=1} claim claim0_ ) ( where ( = ( claim0_.policyNumber claim0_.claimNumber policyNumber ) ? ) ) ) 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,713-:Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Claim): [claim]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.miniproject.entities.Claim)
    |  | originalText: claim
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.miniproject.entities.Claim)
          | path: claim.policyNumber
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.miniproject.entities.Claim)
          |  | originalText: claim
          |  \-IdentNode
          |    persister: null
          |    originalText: policyNumber
          \-ParameterNode
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,713-:Using FROM fragment [claim claim0_] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,713-:select >> end [level=1, statement=select] 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,713-:--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (claim)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'claim0_.claimNumber as claimnumber1_1_' {alias=claim, className=com.miniproject.entities.Claim, tableAlias=claim0_}
    |  \-[SQL_TOKEN] SqlFragment: 'claim0_.accidentCity as accidentcity2_1_, claim0_.accidentLocationStreet as accidentlocationst3_1_, claim0_.accidentState as accidentstate4_1_, claim0_.accidentZip as accidentzip5_1_, claim0_.claimReason as claimreason6_1_, claim0_.claimType as claimtype7_1_, claim0_.policyNumber as policynumber8_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[claim], fromElementByTableAlias=[claim0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'claim claim0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=claim,role=null,tableName=claim,tableAlias=claim0_,origin=null,columns={,className=com.miniproject.entities.Claim}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'claim0_.policyNumber' {propertyName=policyNumber,dereferenceType=PRIMITIVE,getPropertyPath=policyNumber,path=claim.policyNumber,tableAlias=claim0_,className=com.miniproject.entities.Claim,classAlias=claim}
          |  +-[ALIAS_REF] IdentNode: 'claim0_.claimNumber' {alias=claim, className=com.miniproject.entities.Claim, tableAlias=claim0_}
          |  \-[IDENT] IdentNode: 'policyNumber' {originalText=policyNumber}
          \-[NAMED_PARAM] ParameterNode: '?' {name=pnum, expectedType=org.hibernate.type.IntegerType@1a04f701}
 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,713-:throwQueryException() : no errors 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,713-:HQL: select claim from com.miniproject.entities.Claim claim where claim.policyNumber = :pnum 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,713-:SQL: select claim0_.claimNumber as claimnumber1_1_, claim0_.accidentCity as accidentcity2_1_, claim0_.accidentLocationStreet as accidentlocationst3_1_, claim0_.accidentState as accidentstate4_1_, claim0_.accidentZip as accidentzip5_1_, claim0_.claimReason as claimreason6_1_, claim0_.claimType as claimtype7_1_, claim0_.policyNumber as policynumber8_1_ from claim claim0_ where claim0_.policyNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,713-:throwQueryException() : no errors 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,713-:select claim0_.claimNumber as claimnumber1_1_, claim0_.accidentCity as accidentcity2_1_, claim0_.accidentLocationStreet as accidentlocationst3_1_, claim0_.accidentState as accidentstate4_1_, claim0_.accidentZip as accidentzip5_1_, claim0_.claimReason as claimreason6_1_, claim0_.claimType as claimtype7_1_, claim0_.policyNumber as policynumber8_1_ from claim claim0_ where claim0_.policyNumber=? 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:16,715-:Initiating JDBC connection release from afterTransaction 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:29,220-:Connection pool now considered primed; min-size will be maintained 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:42,234-:On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:42,234-:begin 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:42,242-:Generated identifier: 1261, using strategy: org.hibernate.id.Assigned 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:42,257-:committing 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:42,258-:Processing flush-time cascades 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:42,259-:Dirty checking collections 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:42,265-:Flushed: 1 insertions, 0 updates, 0 deletions to 8 objects 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:42,265-:Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:42,267-:Listing entities: 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:42,267-:com.miniproject.entities.Account{agentName=Joe, accountNumber=101, userName=Mark} 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:42,267-:com.miniproject.entities.Policy{policyPremium=5000, policyNumber=1001, accountNumber=101} 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:42,267-:com.miniproject.entities.UserRole{rolecode=Agent, password=Sachin123, username=Sachin} 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:42,267-:com.miniproject.entities.Claim{accidentState=Telangana, accidentCity=Hyderabad, claimType=Life, claimReason=Crashed, policyNumber=1001, accidentLocationStreet=Koti, claimNumber=1261, accidentZip=500098} 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:42,267-:com.miniproject.entities.Account{agentName=Joe, accountNumber=103, userName=Rose} 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:42,267-:com.miniproject.entities.Account{agentName=Joe, accountNumber=102, userName=Jack} 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:42,267-:com.miniproject.entities.UserRole{rolecode=Agent, password=Joe123, username=Joe} 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:42,267-:com.miniproject.entities.UserRole{rolecode=Agent, password=Sejal123, username=Sejal} 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:42,270-:insert into claim (accidentCity, accidentLocationStreet, accidentState, accidentZip, claimReason, claimType, policyNumber, claimNumber) values (?, ?, ?, ?, ?, ?, ?, ?) 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:42,312-:Initiating JDBC connection release from afterTransaction 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:42,312-:Initiating JDBC connection release from afterTransaction 
2021-05-11 11:48 DEBUG 2021-05-11 23:48:42,312-:Claim created :1001 
